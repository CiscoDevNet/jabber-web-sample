{"version":3,"sources":["webpack:///cwic.js","webpack:///webpack/bootstrap ebd3f4adef445fa64c94","webpack:///./src/main.js","webpack:///./src/Multimedia/MultimediaController.js","webpack:///./src/System/MessageReceiver.js","webpack:///./src/System/MessageResponseHandler.js","webpack:///./src/Utils/Logger.js","webpack:///./src/Utils/Utilities.js","webpack:///./src/System/SystemErrors.js","webpack:///./src/System/MessageSender.js","webpack:///./src/Multimedia/Speaker.js","webpack:///./src/Multimedia/Device.js","webpack:///./src/Multimedia/Microphone.js","webpack:///./src/Multimedia/Camera.js","webpack:///./src/Multimedia/Ringer.js","webpack:///./src/Multimedia/Ringtone.js","webpack:///./src/Multimedia/Monitor.js","webpack:///./src/Telephony/TelephonyController.js","webpack:///./src/Telephony/TelephonyControllerCapabilities.js","webpack:///./src/Telephony/TelephonyConnectionState.js","webpack:///./src/Telephony/TelephonyConversation.js","webpack:///./src/Telephony/TelephonyConversationStates.js","webpack:///./src/Telephony/TelephonyConversationCapabilities.js","webpack:///./src/Telephony/TelephonyDevice.js","webpack:///./src/Telephony/SoftPhone.js","webpack:///./src/Telephony/DeskPhone.js","webpack:///./src/Telephony/RemotePhone.js","webpack:///./src/Login/LoginController.js","webpack:///./src/Login/AuthenticationEnum.js","webpack:///./src/System/SystemController.js","webpack:///./src/System/ChromeExtension.js","webpack:///./src/System/Plugin.js","webpack:///./src/System/FirefoxExtension.js","webpack:///./src/System/NPAPIPlugin.js","webpack:///./src/System/ActiveXControl.js","webpack:///./src/System/Version.js","webpack:///./src/System/SystemControllerCapabilities.js","webpack:///./src/Window/WindowController.js","webpack:///./src/Window/NativePreviewWindow.js","webpack:///./src/Window/NativeVideoWindow.js","webpack:///./src/Window/DockingWindow.js","webpack:///./src/Window/NativeScreenShareWindow.js","webpack:///./src/Window/NativeConversationWindow.js","webpack:///./src/Window/ScreenShareWindow.js","webpack:///./src/Window/VideoWindow.js","webpack:///./src/Window/ConversationWindow.js","webpack:///./src/Window/PreviewVideoWindow.js","webpack:///./src/Certificate/CertificateController.js","webpack:///./src/Certificate/InvalidCertificate.js"],"names":["cwic","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","MultimediaControllerModule","TelephonyControllerModule","LoginControllerModule","SystemControllerModule","WindowControllerModule","CertificateControllerModule","MultimediaController","TelephonyController","LoginController","SystemController","WindowController","CertificateController","onCapabilitiesStarted","MessageReceiver","addMessageHandler","mediaDeviceListChanged","bind","this","onRingtoneChanged","refreshMediaDeviceList","refreshRingtoneList","onCapabilitiesStopped","removeMessageHandler","speakerList","length","cameraList","microphoneList","ringerList","eventHandler","m_EventHandlers","onMediaDeviceListChanged","content","deviceList","multimediadevices","index","device","canPlayout","speaker","Speaker","push","canRecord","microphone","Microphone","canCapture","camera","Camera","canRing","ringer","Ringer","onRingtoneListChanged","ringtoneNames","ringtones","ringtoneList","ringtone","Ringtone","name","onMonitorListChanged","monitorList","monitors","monitor","Monitor","errorHandler","messageName","messageData","successHandler","MessageSender","sendMessage","messageType","refreshMonitorList","addEventHandler","eventName","removeEventHandler","MessageReceiverModule","MessageSenderModule","SpeakerModule","MicrophoneModule","CameraModule","RingerModule","RingtoneModule","MonitorModule","prototype","selectSpeaker","Error","clientPlayoutID","deviceID","selectMicrophone","clientRecordingID","selectCamera","clientCaptureID","selectRinger","clientRingerID","playRingtoneOnAllRingers","selectRingtone","selectMonitor","monitorID","highlightMonitor","unHighlightMonitor","setMonitorHighlightColor","red","green","blue","redValue","greenValue","blueValue","m_MessageHandlers","handlerFunction","onMessageReceived","message","ciscoSDKServerMessage","onServerMessageReceived","ciscoChannelServerMessage","onChannelMessage","Logger","error","serverMessage","messageId","replyToMessageId","debug","MessageResponseHandler","errorHandlerExists","getErrorHandler","SystemErrors","removeErrorHandler","successHandlerExist","getSuccessHandler","messageHandler","channelMessage","MessageResponseHandlerModule","LoggerModule","SystemErrorsModule","m_ErrorMessageHandlers","m_SuccessMessageHandlers","addErrorHandler","messageID","handler","addSuccessHandler","removeSuccessHandler","UtilitiesModule","Utilities","LogLevels","info","warning","logLevel","context","currentTime","Date","timeStamp","getHours","slice","getMinutes","getSeconds","getMilliseconds","getBrowserType","console","log","type","navigator","userAgent","indexOf","document","documentMode","getBrowserVersion","tem","N","appName","ua","M","match","appVersion","getOSType","OSName","window","generateUniqueId","valueOf","toString","Math","floor","random","SystemErrorAliasMap","eSyntaxError","eOperationFailed","eNotUserAuthorized","eInvalidArgument","eCapabilityMissing","eLoggedInLock","eInvalidMonitor","eInvalidMonitorID","eInvalidCallID","SystemException","LogModule","Object","create","constructor","plugin","ciscoSDKClientMessage","eventHandlers","genericDevice","deviceInfo","hardwareID","isSelected","isSelectedPlayoutDevice","playoutName","vendorID","MediaDevice","volume","DeviceModule","setVolume","messageContent","recordingID","isSelectedRecordingDevice","recordingName","captureID","isSelectedCaptureDevice","captureName","ringerID","isSelectedRingerDevice","ringerName","monitorInfo","ID","onTelephonyDeviceListChanged","telephonyDevices","devices","controlMode","deskPhone","DeskPhone","softPhone","SoftPhone","remotePhone","RemotePhone","onConnectionStateChanged","state","connectionState","TelephonyConnectionStateMap","onConnectionFailure","connectionFailure","onConversationStateChanged","telephonyConversation","TelephonyConversation","onConversationCallStateChanged","callState","onVisualCallPickupNotification","notificationInfo","onAudioCallPickupNotification","isAudioEnabled","onCallPickupError","onCapabilitiesChanged","telephonyCapabilities","TelephonyControllerCapabilities","capabilities","recentGroupCallPickupNumbers","refreshTelephonyDeviceList","TelephonyControllerCapabilitiesModule","TelephonyConnectionStateModule","TelephonyConversationModule","TelephonyDeviceModule","SoftPhoneModule","DeskPhoneModule","RemotePhoneModule","TelephonyDevice","Deskphone","getConnectedTelephonyDevice","telephonyDevice","startAudioConversation","number","recipient","videoDirection","startVideoConversation","callPickup","groupCallPickup","pickupNumber","otherGroupPickup","capabilites","isHuntGroupEnabled","isCallPickupEnabled","isGroupCallPickupEnabled","isOtherGroupPickupEnabled","eReady","eIdle","eRegistering","eConnectionTerminated","conversation","callId","canStartVideo","Inactive","SendRecv","SendOnly","RecvOnly","canStopVideo","TelephonyConversationCapabilities","states","TelephonyConversationState","localParticipant","maxParticipants","participants","TelephonyConversationStatesModule","TelephonyConversationCapabilitiesModule","TelephonyConversationStates","answerAudio","answerVideo","reject","end","hold","resume","startVideo","stopVideo","muteAudio","muteVideo","unmuteAudio","unmuteVideo","transferConversation","transferToNumber","completeTransfer","merge","joinCallId","startScreenShare","stopScreenShare","sendDTMF","dtmfDigit","digit","startRemoteCameraAction","action","stopRemoteCameraAction","isAudioMuted","audioMuted","isVideoMuted","videoMuted","isLocalSharing","isRemoteSharing","canAnswer","canAnswerCall","canEnd","canEndCall","canReject","canRejectCall","canHold","canResume","canMerge","canJoinAcrossLine","canTransfer","canDirectTransfer","canMuteAudio","canUnmuteAudio","canMuteVideo","canUnmuteVideo","canStartScreenShare","canRequestShare","canStopScreenShare","canReleaseShare","canSendDTMF","canSendDigit","canControlRemoteCamera","canFarEndCameraControl","canCameraTiltUp","canTiltUp","canCameraTiltDown","canTiltDown","canCameraPanLeft","canPanLeft","canCameraPanRight","canPanRight","canCameraZoomIn","canZoomIn","canCameraZoomOut","canZoomOut","canUpdateVideo","canUpdateVideoCapability","description","modelDescription","lineDirectoryNumbers","lineDNs","activeLine","activeLineNumber","huntGroupState","guid","connect","huntGroupLogin","deviceGuid","huntGroupLogout","isForceRegistration","arguments","phoneMode","deviceName","lineDN","forceRegistration","selectLine","line","m_Number","getNumber","setNumber","telephonyDeviceModule","remoteDestinationNumber","deleteNumber","onEmailRequired","signInType","setEmail","onCredentialsRequired","onLoginStateChanged","lifecycleState","loginState","onAuthenticationResults","authenticationResult","result","eventParam","AuthenticationStateMap","status","AuthenticationErrorMap","onLoggedIn","onSSONavigateRequired","SSOUrl","regex","RegExp","SSOClientID","url","replace","m_SSORedirectURL","encodeURIComponent","m_CTIServers","m_CCMCIPServers","m_TFTPServers","setSSORedirectURL","redirectURL","setCTIServers","CTIServers","Array","CtiAddressList","setTFTPServers","TFTPServers","TftpAddressList","setCUCMServers","CUCMServers","CcmcipAddressList","AuthenticationEnumModule","AuthenticationState","AuthenticationError","signIn","manualSettings","signOut","startDiscovery","email","setCredentials","username","password","resetUserData","setSSOTokenURI","uri","cancelSSO","NotAuthenticated","InProgress","Authenticated","InvalidConfig","InvalidCredentials","InvalidToken","ServerCertificateRejected","ClientCertificateError","NoCredentialsConfigured","CouldNotConnect","Failed","SSLConnectError","Unknown","eAuthenticated","eInProgress","eNotAuthenticated","eNoServersConfigured","eCredentialsRejected","eInvalidToken","eServerCertificateRejected","eClientCertificateError","eNoCredentialsConfigured","eCouldNotConnect","eFailed","eSSLConnectError","","onCwicInitialized","m_Capabilities","SystemControllerCapabilities","addonVersion","version","systemRelease","system_release","platformOS","system","platform","cwicVersion","onInitializedCallback","onUserAuthorized","onAddonConnectionLost","m_Plugin","uninitialize","initialize","browserType","ChromeExtension","FirefoxExtension","m_ClientID","NPAPIPlugin","ActiveXControl","onInitializeError","m_Version","getInstanceID","getCapabilities","getVersion","setLoggingLevel","level","onDocumentShown","hidden","removeEventListener","addEventListener","ChromeExtensionModule","FirefoxExtensionModule","NPAPIPluginModule","ActiveXControlModule","VersionModule","UtilitesModule","SystemControllerCapabilitiesModule","Version","ExtensionModule","Plugin","onExtensionLoaded","extension","cwic_plugin","sendRequest","settings","cwicExtId","verbose","init","onExtensionError","errorInfo","errorType","errorData","reason","extensionURL","extensionScript","createElement","extensionID","src","onload","onerror","head","appendChild","getElementById","parentNode","removeChild","cwicID","isExtensionInstalled","extensionExistsCallback","extensionIsInstalled","cwicEvent","CustomEvent","detail","dispatchEvent","client","location","href","hostname","title","cwicMessage","ciscoChannelMessage","cwicMessageEvent","pluginName","pluginMimeType","mimeTypes","body","setClientId","setUrl","setHostName","setAppName","pluginID","npapiPlugin","npapiPluginMessage","postMessage","JSON","stringify","clientMessage","parse","exception","ActiveXObject","attachEvent","pluginType","activeXControl","activeXControlMessage","versionString","versionNumbers","split","release","major","minor","build","inBrowserVideoSupport","videoPluginObject","ringtoneOnAllRingersSupport","ringOnAllDevices","ringtoneSupport","ringtoneSelection","nativeWindowDockingSupport","externalWindowDocking","nativeWindowDockingTargetSupport","showingDockingTarget","dockNeeded","dockElement","dockElementDOMWindow","nativeWindow","windowType","m_NativeConversationWindow","m_NativePreviewWindow","m_NativeScreenShareWindow","dock","NativePreviewWindow","NativeScreenShareWindow","NativeConversationWindow","getNativePreviewWindow","getNativeScreenShareWindow","getNativeConversationWindow","createVideoWindow","htmlElement","DOMWindow","videoWindow","ScreenShareWindow","PreviewWindow","ConversationWindow","NativePreviewWindowModule","NativeScreenShareWindowModule","NativeConversationWindowModule","ScreenShareWindowModule","ConversationWindowModule","PreviewWindowModule","NativeVideoWindow","NativeVideoWindowModule","getDockingWindow","dockingWindow","m_Type","PreviewDockingWindow","RemoteDockingWindow","ScreenShareDockingWindow","hide","show","showAlwaysOnTop","isAlwaysOnTop","alwaysOnTop","setTitle","setDockTargetColor","setDockColor","frame","HTMLElement","isDocked","element","position","calculateNewPosition","sendMessageToAddOn","updatePosition","undock","showControls","hideControls","DockingWindowModule","WindowPosition","top","left","height","width","cropTop","cropLeft","cropBottom","cropRight","cropHeight","cropWidth","scaleFactor","DockingWindow","isVideoBeingReceived","isPositionChanged","newPosition","positionChanged","setTimeout","currentFrameRect","parentFrameWidth","parentFrameHeight","elementRectangle","getBoundingClientRect","currentFrame","currentFrameHeight","innerHeight","currentFrameWidth","innerWidth","frameBorderOffset","borderTopOffset","borderLeftOffset","paddingTopOffset","paddingLeftOffset","bottom","right","devicePixelRatio","scrollX","scrollY","maxTouchPoints","inner","hasScrollbar","documentElement","clientWidth","lastZoomFactor","scrollBarWidth","pinchZoomCoefficient","scrollSizeX","scrollSizeY","clientHeight","diffY","abs","diffX","initPosY","initPosX","max","frameElement","parent","frameBorder","parseInt","style","borderTopWidth","outerFrame","framePaddingLeftOffset","framePaddingTopOffset","outerFrameStyle","getComputedStyle","getPropertyValue","borderLeftWidth","round","cropleft","ceil","mozInnerScreenY","mozInnerScreenX","browserHeight","outerHeight","browserWidth","outerWidth","viewPortHeight","viewPortWidth","msgName","addOnMessageContent","offsetX","offsetY","cropOffsetX","cropOffsetY","host","pathname","search","hasDockingCapabilities","caps","e","showVideoForConversation","showSelfView","showSelfViewPip","hideSelfView","showSelfViewBorder","showSelfViewPipBorder","hideSelfViewBorder","setSelfViewPosition","pipLeft","pipTop","pipRight","pipBottom","m_VideoWindow","VideoWindow","showForConversation","methodName","executeMethod","hideForConversation","VideoWindowModule","domWindow","callID","clientID","messageParameters","unshift","apply","onInvalidCertificate","invalidCertificate","InvalidCertificate","reasons","invalidReasons","invalidReason","allowUserToAccept","InvalidCertificateModule","acceptInvalidCertificate","certificate","certFingerprint","fingerprint","accept","rejectInvalidCertificate","data","subjectCN","certSubjectCN","identifier","identifierToDisplay","referenceID","referenceId"],"mappings":"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","file":"cwic.js","sourcesContent":["var cwic =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Loading all controller modules\r\n\tvar MultimediaControllerModule  = __webpack_require__(1);\r\n\tvar TelephonyControllerModule   = __webpack_require__(15);\r\n\tvar LoginControllerModule       = __webpack_require__(25);\r\n\tvar SystemControllerModule      = __webpack_require__(27);\r\n\tvar WindowControllerModule      = __webpack_require__(35);\r\n\tvar CertificateControllerModule = __webpack_require__(45);\r\n\t\r\n\t// Exposing Controllers as public API\r\n\tmodule.exports.MultimediaController  = MultimediaControllerModule.MultimediaController;\r\n\tmodule.exports.TelephonyController   = TelephonyControllerModule.TelephonyController;\r\n\tmodule.exports.LoginController       = LoginControllerModule.LoginController;\r\n\tmodule.exports.SystemController      = SystemControllerModule.SystemController;\r\n\tmodule.exports.WindowController      = WindowControllerModule.WindowController;\r\n\tmodule.exports.CertificateController = CertificateControllerModule.CertificateController;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\r\n\tvar MessageReceiverModule = __webpack_require__(2);\r\n\tvar MessageSenderModule   = __webpack_require__(7);\r\n\t\r\n\t// Multimedia Modules\r\n\tvar SpeakerModule    = __webpack_require__(8);\r\n\tvar MicrophoneModule = __webpack_require__(10);\r\n\tvar CameraModule     = __webpack_require__(11);\r\n\tvar RingerModule     = __webpack_require__(12);\r\n\tvar RingtoneModule   = __webpack_require__(13);\r\n\tvar MonitorModule    = __webpack_require__(14);\r\n\t\r\n\t\r\n\tvar cwic = {\r\n\t    Speaker    : SpeakerModule.Speaker,\r\n\t    Microphone : MicrophoneModule.Microphone,\r\n\t    Camera     : CameraModule.Camera,\r\n\t    Ringer     : RingerModule.Ringer,\r\n\t    Ringtone   : RingtoneModule.Ringtone,\r\n\t    Monitor    : MonitorModule.Monitor,\r\n\t\r\n\t    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n\t    MessageSender   : MessageSenderModule.MessageSender\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class MultimediaController\r\n\t *\r\n\t * @classdesc\r\n\t * Multimedia controller is responsible for managing [Media Devices]{@link MediaDevice}, [Ringtones]{@link Ringtone}\r\n\t * and [Monitors]{@link Monitor} that are used for screen share. <br>\r\n\t *\r\n\t * @description This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t *\r\n\t */\r\n\tfunction MultimediaController()\r\n\t{\r\n\t    this.speakerList    = [];\r\n\t    this.microphoneList = [];\r\n\t    this.ringerList     = [];\r\n\t    this.cameraList     = [];\r\n\t    this.ringtoneList   = [];\r\n\t    var m_EventHandlers  = {};\r\n\t\r\n\t    cwic.MessageReceiver.addMessageHandler('multimediacapabilitiesstarted', onCapabilitiesStarted.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('multimediacapabilitiesstopped', onCapabilitiesStopped.bind(this));\r\n\t\r\n\t    function onCapabilitiesStarted()\r\n\t    {\r\n\t        cwic.MessageReceiver.addMessageHandler('multimediadevicechange', mediaDeviceListChanged.bind(this));\r\n\t        cwic.MessageReceiver.addMessageHandler('ringtonechanged', onRingtoneChanged.bind(this));\r\n\t        this.refreshMediaDeviceList();\r\n\t        this.refreshRingtoneList();\r\n\t    }\r\n\t\r\n\t    function onCapabilitiesStopped()\r\n\t    {\r\n\t        cwic.MessageReceiver.removeMessageHandler('multimediadevicechange');\r\n\t\r\n\t        this.speakerList.length = 0;\r\n\t        this.cameraList.length = 0;\r\n\t        this.microphoneList.length = 0;\r\n\t        this.ringerList.length = 0;\r\n\t\r\n\t        var eventHandler = m_EventHandlers['onMediaDeviceListChanged'];\r\n\t\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function mediaDeviceListChanged()\r\n\t    {\r\n\t        this.refreshMediaDeviceList();\r\n\t    }\r\n\t\r\n\t    function onMediaDeviceListChanged(content)\r\n\t    {\r\n\t        var deviceList = content.multimediadevices;\r\n\t\r\n\t        this.speakerList.length = 0;\r\n\t        this.cameraList.length = 0;\r\n\t        this.microphoneList.length = 0;\r\n\t        this.ringerList.length = 0;\r\n\t\r\n\t        for (var index = 0; index < deviceList.length; ++index)\r\n\t        {\r\n\t            var device = deviceList[index];\r\n\t\r\n\t            if (device.canPlayout === true)\r\n\t            {\r\n\t                var speaker = new cwic.Speaker(device);\r\n\t                this.speakerList.push(speaker);\r\n\t            }\r\n\t\r\n\t            if(device.canRecord === true)\r\n\t            {\r\n\t                var microphone = new cwic.Microphone(device);\r\n\t                this.microphoneList.push(microphone);\r\n\t            }\r\n\t\r\n\t            if(device.canCapture === true)\r\n\t            {\r\n\t                var camera = new cwic.Camera(device);\r\n\t                this.cameraList.push(camera);\r\n\t            }\r\n\t\r\n\t            if(device.canRing === true)\r\n\t            {\r\n\t                var ringer = new cwic.Ringer(device);\r\n\t                this.ringerList.push(ringer);\r\n\t            }\r\n\t        }\r\n\t\r\n\t        var eventHandler = m_EventHandlers['onMediaDeviceListChanged'];\r\n\t\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onRingtoneListChanged(content)\r\n\t    {\r\n\t        var ringtoneNames = content.ringtones;\r\n\t        this.ringtoneList = [];\r\n\t\r\n\t        for(var index=0; index<ringtoneNames.length; index++)\r\n\t        {\r\n\t            var ringtone = new cwic.Ringtone(ringtoneNames[index].name);\r\n\t            this.ringtoneList.push(ringtone);\r\n\t        }\r\n\t\r\n\t        var eventHandler = m_EventHandlers['onRingtoneListChanged'];\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onRingtoneChanged(content)\r\n\t    {\r\n\t        var ringtone = new cwic.Ringtone(content.ringtone);\r\n\t        var eventHandler = m_EventHandlers['onRingtoneChanged'];\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler(ringtone);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onMonitorListChanged(content)\r\n\t    {\r\n\t        var monitorList = content.monitors;\r\n\t        var monitors = [];\r\n\t\r\n\t        for(var index=0; index < monitorList.length; ++index)\r\n\t        {\r\n\t            var monitor = new cwic.Monitor(monitorList[index]);\r\n\t            monitors.push(monitor);\r\n\t        }\r\n\t\r\n\t        var eventHandler = m_EventHandlers['onMonitorListChanged'];\r\n\t\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler(monitors);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @memberof MultimediaController\r\n\t     * @method refreshMediaDeviceList\r\n\t     * @description\r\n\t     * Refresh the list of available media devices:\r\n\t     *  - Speakers\r\n\t     *  - Microphones\r\n\t     *  - Ringers\r\n\t     *  - Cameras\r\n\t     *\r\n\t     * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.refreshMediaDeviceList = function(errorHandler)\r\n\t    {\r\n\t        var messageName    = \"getMultimediaDevices\";\r\n\t        var messageData    = {};\r\n\t        var successHandler = onMediaDeviceListChanged.bind(this);\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageName, messageData, errorHandler, successHandler);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof MultimediaController\r\n\t     * @method refreshRingtoneList\r\n\t     * @description\r\n\t     * Refresh the list of available ringtones.\r\n\t     *\r\n\t     * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.refreshRingtoneList = function(errorHandler)\r\n\t    {\r\n\t        var messageType = \"getAvailableRingtones\";\r\n\t        var messageData = {};\r\n\t        var successHandler = onRingtoneListChanged.bind(this);\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler, successHandler);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof MultimediaController\r\n\t     * @method refreshMonitorList\r\n\t     * @description\r\n\t     * Refresh the list of connected monitors.\r\n\t     *\r\n\t     * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.refreshMonitorList = function(errorHandler)\r\n\t    {\r\n\t        var messageType    = \"getMonitorList\";\r\n\t        var messageData    = {};\r\n\t        var successHandler = onMonitorListChanged.bind(this);\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler, successHandler);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof MultimediaController\r\n\t     * @method addEventHandler\r\n\t     * @description\r\n\t     * Add handler function for multimedia controller's events.\r\n\t     *\r\n\t     * @param eventName {String} - Name of the event.\r\n\t     * @param eventHandler {Function} - Function that will be called when event is fired.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.addEventHandler = function(eventName, eventHandler)\r\n\t    {\r\n\t        m_EventHandlers[eventName] = eventHandler;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof MultimediaController\r\n\t     * @method removeEventHandler\r\n\t     * @description\r\n\t     * Remove handler function for multimedia controller's event.\r\n\t     *\r\n\t     * @param eventName {String} - Name of the event.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.removeEventHandler = function(eventName)\r\n\t    {\r\n\t        delete m_EventHandlers[eventName];\r\n\t    };\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @member speakerList\r\n\t * @description\r\n\t * List of available speakers.\r\n\t *\r\n\t * @type {Speaker[]}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.speakerList = [];\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @member ringerList\r\n\t * @description\r\n\t * List of available ringers.\r\n\t *\r\n\t * @type {Ringer[]}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.ringerList = [];\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @member microphoneList\r\n\t * @description\r\n\t * List of available microphones.\r\n\t *\r\n\t * @type {Microphone[]}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.microphoneList = [];\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @member cameraList\r\n\t * @description\r\n\t * List of available cameras.\r\n\t *\r\n\t * @type {Camera[]}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.cameraList = [];\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @member ringtoneList\r\n\t * @description\r\n\t * List of available ringtones.\r\n\t *\r\n\t * @type {Array}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.ringtoneList = [];\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @method selectSpeaker\r\n\t * @description\r\n\t * Select new active speaker.\r\n\t *\r\n\t * @param speaker {Speaker} - Speaker that will be set as active.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Object - Thrown if speaker is not instance of {@link Speaker}.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.selectSpeaker = function(speaker, errorHandler)\r\n\t{\r\n\t    if(!(speaker instanceof cwic.Speaker))\r\n\t    {\r\n\t        throw Error(\"Invalid Object\");\r\n\t    }\r\n\t\r\n\t    var messageType = 'setPlayoutDevice';\r\n\t    var messageData = {\r\n\t        'clientPlayoutID' : speaker.deviceID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @method selectMicrophone\r\n\t * @description\r\n\t * Select new active microphone.\r\n\t *\r\n\t * @param microphone {Microphone} - Microphone that will be set as active.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Object - Thrown if microphone is not instance of {@link Microphone}.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.selectMicrophone = function(microphone, errorHandler)\r\n\t{\r\n\t    if(!(microphone instanceof cwic.Microphone))\r\n\t    {\r\n\t        throw Error(\"Invalid Object\");\r\n\t    }\r\n\t\r\n\t    var messageType = \"setRecordingDevice\";\r\n\t    var messageData = {\r\n\t        'clientRecordingID' : microphone.deviceID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @method selectCamera\r\n\t * @description\r\n\t * Select new active camera.\r\n\t *\r\n\t * @param camera {Camera} - Camera that will be set as active.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Object - Thrown if camera is not instance of {@link Camera}.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.selectCamera = function(camera, errorHandler)\r\n\t{\r\n\t    if(!(camera instanceof cwic.Camera))\r\n\t    {\r\n\t        throw Error(\"Invalid Object\");\r\n\t    }\r\n\t\r\n\t    var messageType = \"setCaptureDevice\";\r\n\t    var messageData = {\r\n\t        'clientCaptureID' : camera.deviceID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @method selectRinger\r\n\t * @description\r\n\t * Select new active camera.\r\n\t *\r\n\t * @param ringer {Ringer} - Ringer that will be set as active.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Object - Thrown if ringer is not instance of {@link Ringer}.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.selectRinger = function(ringer, errorHandler)\r\n\t{\r\n\t    if(!(ringer instanceof cwic.Ringer))\r\n\t    {\r\n\t        throw Error(\"Invalid Object\")\r\n\t    }\r\n\t\r\n\t    var messageType = \"setRingerDevice\";\r\n\t    var messageData = {\r\n\t        'clientRingerID' : ringer.deviceID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @method playRingtoneOnAllRingers\r\n\t * @description\r\n\t * On incoming call, ringtone will be played on all ringer devices. Calling this method will ignore any ringer device\r\n\t * previously set as active. Once a new ringer device is set as active ringtone will then only play on active ringer\r\n\t * device.\r\n\t *\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t */\r\n\tMultimediaController.prototype.playRingtoneOnAllRingers = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"setPlayRingerOnAllDevices\";\r\n\t    var messageData = {};\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @method selectRingtone\r\n\t * @description\r\n\t * Select new active ringtone for incoming calls.\r\n\t *\r\n\t * @param ringtone {Ringtone} - Ringtone that will be set as active.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Object - Thrown if ringtone is not instance of {@link Ringtone}.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.selectRingtone = function (ringtone, errorHandler)\r\n\t{\r\n\t    if (!(ringtone instanceof cwic.Ringtone))\r\n\t    {\r\n\t        throw Error(\"Invalid Object\");\r\n\t    }\r\n\t\r\n\t    var messageType = \"setCurrentRingtone\";\r\n\t    var messageData = {\r\n\t        'ringtone' : ringtone.name\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @method selectMonitor\r\n\t * @description\r\n\t * Select new active monitor that will be used for screen sharing.\r\n\t *\r\n\t * @param monitor {Monitor} - Monitor that will be set as active.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Object - Thrown if monitor is not instance of {@link Monitor}.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.selectMonitor = function(monitor, errorHandler)\r\n\t{\r\n\t    if(!(monitor instanceof cwic.Monitor))\r\n\t    {\r\n\t        throw Error(\"Invalid Object\");\r\n\t    }\r\n\t\r\n\t    var messageType = \"selectMonitor\";\r\n\t    var messageData = {\r\n\t        monitorID : monitor.id\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @method highlightMonitor\r\n\t * @description\r\n\t * Highlights monitor by displaying border around its edges.\r\n\t *\r\n\t * @param monitor {Monitor} - Monitor that will be highlighted.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Object - Thrown if monitor is not instance of {@link Monitor}.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.highlightMonitor = function (monitor, errorHandler)\r\n\t{\r\n\t    if(!(monitor instanceof cwic.Monitor))\r\n\t    {\r\n\t        throw Error(\"Invalid Object\");\r\n\t    }\r\n\t\r\n\t    var messageType = \"showMonitorBorderIndicator\";\r\n\t    var messageData = {\r\n\t        monitorID : monitor.id\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @method unHighlightMonitor\r\n\t * @description\r\n\t * UnHighlights current highlighted monitor by hiding border around its edges.\r\n\t *\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.unHighlightMonitor = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"hideMonitorBorderIndicator\";\r\n\t    var messageData = {};\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof MultimediaController\r\n\t * @method setMonitorHighlightColor\r\n\t * @description\r\n\t * Set new monitor highlight color.\r\n\t *\r\n\t * @param red - Red color value.\r\n\t * @param green - Green color value.\r\n\t * @param blue - blue color value.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tMultimediaController.prototype.setMonitorHighlightColor = function(red, green, blue, errorHandler)\r\n\t{\r\n\t    var messageType = \"setMonitorBorderIndicatorColor\";\r\n\t    var messageData = {\r\n\t        redValue : red,\r\n\t        greenValue : green,\r\n\t        blueValue : blue\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t\r\n\t\r\n\tmodule.exports.MultimediaController = new MultimediaController();\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\r\n\tvar MessageResponseHandlerModule = __webpack_require__(3);\r\n\tvar LoggerModule                 = __webpack_require__(4);\r\n\tvar SystemErrorsModule           = __webpack_require__(6);\r\n\t\r\n\tvar cwic = {\r\n\t    MessageResponseHandler : MessageResponseHandlerModule.MessageResponseHandler,\r\n\t    Logger                 : LoggerModule.Logger,\r\n\t    SystemErrors           : SystemErrorsModule.SystemErrors\r\n\t};\r\n\t\r\n\t\r\n\tfunction MessageReceiver()\r\n\t{\r\n\t    var m_MessageHandlers = {};\r\n\t\r\n\t    this.addMessageHandler = function(messageType, handlerFunction)\r\n\t    {\r\n\t        m_MessageHandlers[messageType] = handlerFunction;\r\n\t    };\r\n\t\r\n\t    this.removeMessageHandler = function(messageType)\r\n\t    {\r\n\t        delete m_MessageHandlers[messageType];\r\n\t    };\r\n\t\r\n\t    this.onMessageReceived = function(message)\r\n\t    {\r\n\t        if (message.ciscoSDKServerMessage)\r\n\t        {\r\n\t            this.onServerMessageReceived(message.ciscoSDKServerMessage);\r\n\t        }\r\n\t        else if(message.ciscoChannelServerMessage)\r\n\t        {\r\n\t            this.onChannelMessage(message.ciscoChannelServerMessage);\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            cwic.Logger.error('Unknown message from plugin: ', message);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    this.onServerMessageReceived = function(serverMessage)\r\n\t    {\r\n\t        var content   = serverMessage.content;\r\n\t        var error     = serverMessage.error;\r\n\t        var messageId = serverMessage.replyToMessageId;\r\n\t        var name      = serverMessage.name;\r\n\t\r\n\t        cwic.Logger.debug('Received Message: ' + name, serverMessage);\r\n\t\r\n\t        if(error)\r\n\t        {\r\n\t            cwic.Logger.debug('Error response for Message: ' + name, serverMessage);\r\n\t\r\n\t            if(cwic.MessageResponseHandler.errorHandlerExists(messageId))\r\n\t            {\r\n\t                var errorHandler = cwic.MessageResponseHandler.getErrorHandler(messageId);\r\n\t                errorHandler(cwic.SystemErrors[error]);\r\n\t                cwic.MessageResponseHandler.removeErrorHandler(messageId);\r\n\t            }\r\n\t\r\n\t            return;\r\n\t        }\r\n\t\r\n\t        if(cwic.MessageResponseHandler.successHandlerExist(messageId))\r\n\t        {\r\n\t            cwic.Logger.debug('Success response for Message: ' + name, serverMessage);\r\n\t\r\n\t            var successHandler = cwic.MessageResponseHandler.getSuccessHandler(messageId);\r\n\t            successHandler(content);\r\n\t        }\r\n\t\r\n\t        if(m_MessageHandlers[name])\r\n\t        {\r\n\t            var messageHandler = m_MessageHandlers[name];\r\n\t            messageHandler(content);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    this.onChannelMessage = function(channelMessage)\r\n\t    {\r\n\t        if (channelMessage.name === 'ChannelDisconnect' || channelMessage.name === 'HostDisconnect')\r\n\t        {\r\n\t            cwic.Logger.error(\"Connection with add-on has been lost\", \"\");\r\n\t            var messageHandler = m_MessageHandlers['addonConnectionLost'];\r\n\t            if(messageHandler)\r\n\t            {\r\n\t                messageHandler();\r\n\t            }\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            cwic.Logger.debug(\"Unknown channel message: \" + channelMessage.name);\r\n\t        }\r\n\t    };\r\n\t}\r\n\t\r\n\tmodule.exports.MessageReceiver = new MessageReceiver();\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\tfunction MessageResponseHandler()\r\n\t{\r\n\t    var m_ErrorMessageHandlers   = {};\r\n\t    var m_SuccessMessageHandlers = {};\r\n\t\r\n\t    this.addErrorHandler = function(messageID, handler)\r\n\t    {\r\n\t        m_ErrorMessageHandlers[messageID] = handler;\r\n\t    };\r\n\t\r\n\t    this.addSuccessHandler = function(messageID, handler)\r\n\t    {\r\n\t        m_SuccessMessageHandlers[messageID] = handler;\r\n\t    };\r\n\t\r\n\t    this.removeErrorHandler = function(messageID)\r\n\t    {\r\n\t        delete m_ErrorMessageHandlers[messageID];\r\n\t    };\r\n\t\r\n\t    this.removeSuccessHandler = function(messageID)\r\n\t    {\r\n\t        delete m_SuccessMessageHandlers[messageID];\r\n\t    };\r\n\t\r\n\t    this.errorHandlerExists = function(messageID)\r\n\t    {\r\n\t        return m_ErrorMessageHandlers[messageID] ? true : false;\r\n\t    };\r\n\t\r\n\t    this.successHandlerExist = function(messageID)\r\n\t    {\r\n\t        return m_SuccessMessageHandlers[messageID] ? true : false;\r\n\t    };\r\n\t\r\n\t    this.getErrorHandler = function(messageID)\r\n\t    {\r\n\t        return m_ErrorMessageHandlers[messageID];\r\n\t    };\r\n\t\r\n\t    this.getSuccessHandler = function (messageID)\r\n\t    {\r\n\t        return m_SuccessMessageHandlers[messageID];\r\n\t    }\r\n\t}\r\n\t\r\n\t\r\n\tmodule.exports.MessageResponseHandler = new MessageResponseHandler();\r\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar UtilitiesModule = __webpack_require__(5);\r\n\t\r\n\tvar cwic = {\r\n\t    Utilities : UtilitiesModule.Utilities\r\n\t};\r\n\t\r\n\tvar LogLevels =\r\n\t{\r\n\t    debug   : 0,\r\n\t    info    : 1,\r\n\t    warning : 2,\r\n\t    error   : 3\r\n\t};\r\n\t\r\n\tfunction Logger()\r\n\t{\r\n\t}\r\n\t\r\n\tLogger.prototype.logLevel = 0;\r\n\t\r\n\tLogger.prototype.debug = function(message, context)\r\n\t{\r\n\t    context = context ? context : \"\";\r\n\t    if(this.logLevel <= LogLevels.debug)\r\n\t    {\r\n\t        var currentTime = new Date();\r\n\t        var timeStamp   =\r\n\t            ('0' + currentTime.getHours()).slice(-2) + ':' +\r\n\t            ('0' + currentTime.getMinutes()).slice(-2) + ':' +\r\n\t            ('0' + currentTime.getSeconds()).slice(-2) + '.' +\r\n\t            ('00' + currentTime.getMilliseconds()).slice(-3);\r\n\t\r\n\t        if(cwic.Utilities.getBrowserType() === \"InternetExplorer\")\r\n\t        {\r\n\t            console.log('[cwic][DEBUG][' + timeStamp + '] ' +  message, context);\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            console.log('%c[cwic][DEBUG][' + timeStamp + '] ' +  message, 'color: green', context);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tLogger.prototype.info = function(message, context)\r\n\t{\r\n\t    context = context ? context : \"\";\r\n\t    if(this.logLevel <= LogLevels.info)\r\n\t    {\r\n\t        var currentTime = new Date();\r\n\t        var timeStamp   =\r\n\t            ('0' + currentTime.getHours()).slice(-2) + ':' +\r\n\t            ('0' + currentTime.getMinutes()).slice(-2) + ':' +\r\n\t            ('0' + currentTime.getSeconds()).slice(-2) + '.' +\r\n\t            ('00' + currentTime.getMilliseconds()).slice(-3);\r\n\t\r\n\t        if(cwic.Utilities.getBrowserType() === \"InternetExplorer\")\r\n\t        {\r\n\t            console.log('[cwic][INFO ][' + timeStamp + '] ' + message, context);\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            console.log('%c[cwic][INFO ][' + timeStamp + '] ' + message, 'color: black', context);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\t\r\n\tLogger.prototype.warning = function(message, context)\r\n\t{\r\n\t    context = context ? context : \"\";\r\n\t    if(this.logLevel <= LogLevels.warning)\r\n\t    {\r\n\t        var currentTime = new Date();\r\n\t        var timeStamp   =\r\n\t            ('0' + currentTime.getHours()).slice(-2) + ':' +\r\n\t            ('0' + currentTime.getMinutes()).slice(-2) + ':' +\r\n\t            ('0' + currentTime.getSeconds()).slice(-2) + '.' +\r\n\t            ('00' + currentTime.getMilliseconds()).slice(-3);\r\n\t\r\n\t        if(cwic.Utilities.getBrowserType() === \"InternetExplorer\")\r\n\t        {\r\n\t            console.log('[cwic][WARNI][' + timeStamp + '] ' +  message, context);\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            console.log('%c[cwic][WARNI][' + timeStamp + '] ' + message, 'color: #FF8000', context);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\t\r\n\tLogger.prototype.error = function(message, context)\r\n\t{\r\n\t    context = context ? context : \"\";\r\n\t    if(this.logLevel <= LogLevels.error)\r\n\t    {\r\n\t        var currentTime = new Date();\r\n\t        var timeStamp   =\r\n\t            ('0' + currentTime.getHours()).slice(-2) + ':' +\r\n\t            ('0' + currentTime.getMinutes()).slice(-2) + ':' +\r\n\t            ('0' + currentTime.getSeconds()).slice(-2) + '.' +\r\n\t            ('00' + currentTime.getMilliseconds()).slice(-3);\r\n\t\r\n\t        if(cwic.Utilities.getBrowserType() === \"InternetExplorer\")\r\n\t        {\r\n\t            console.log('[cwic][ERROR][' + timeStamp + '] ' +  message, context);\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            console.log('%c[cwic][ERROR][' + timeStamp + '] ' + message, 'color: red', context);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tmodule.exports.Logger = new Logger();\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\tfunction Utilities()\r\n\t{\r\n\t}\r\n\t\r\n\tUtilities.prototype.getBrowserType = function()\r\n\t{\r\n\t    var type = 'Unknown';\r\n\t\r\n\t    if((navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf('OPR')) != -1 )\r\n\t    {\r\n\t        type = 'Opera';\r\n\t    }\r\n\t    else if(navigator.userAgent.indexOf(\"Chrome\") != -1 )\r\n\t    {\r\n\t        type = 'Chrome';\r\n\t    }\r\n\t    else if(navigator.userAgent.indexOf(\"Safari\") != -1)\r\n\t    {\r\n\t        type = 'Safari';\r\n\t    }\r\n\t    else if(navigator.userAgent.indexOf(\"Firefox\") != -1 )\r\n\t    {\r\n\t        type = 'Firefox';\r\n\t    }\r\n\t    else if((navigator.userAgent.indexOf(\"MSIE\") != -1 ) || (!!document.documentMode == true )) //IF IE > 10\r\n\t    {\r\n\t        type = 'InternetExplorer';\r\n\t    }\r\n\t\r\n\t    return type;\r\n\t};\r\n\t\r\n\tUtilities.prototype.getBrowserVersion = function()\r\n\t{\r\n\t    var N= navigator.appName, ua= navigator.userAgent, tem;\r\n\t    var M= ua.match(/(opera|chrome|safari|firefox|msie)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);\r\n\t    if(M && (tem= ua.match(/version\\/([\\.\\d]+)/i))!= null) M[2]= tem[1];\r\n\t    M= M? [M[1], M[2]]: [N, navigator.appVersion,'-?'];\r\n\t    return M[1];\r\n\t};\r\n\t\r\n\tUtilities.prototype.getOSType = function()\r\n\t{\r\n\t    var OSName = \"Unknown\";\r\n\t    if (window.navigator.userAgent.indexOf(\"Windows NT 10.0\")!= -1) OSName=\"Windows 10\";\r\n\t    if (window.navigator.userAgent.indexOf(\"Windows NT 6.2\") != -1) OSName=\"Windows 8\";\r\n\t    if (window.navigator.userAgent.indexOf(\"Windows NT 6.1\") != -1) OSName=\"Windows 7\";\r\n\t    if (window.navigator.userAgent.indexOf(\"Windows NT 6.0\") != -1) OSName=\"Windows Vista\";\r\n\t    if (window.navigator.userAgent.indexOf(\"Windows NT 5.1\") != -1) OSName=\"Windows XP\";\r\n\t    if (window.navigator.userAgent.indexOf(\"Windows NT 5.0\") != -1) OSName=\"Windows 2000\";\r\n\t    if (window.navigator.userAgent.indexOf(\"Mac\")!=-1) OSName=\"Mac\";\r\n\t\r\n\t    return OSName;\r\n\t};\r\n\t\r\n\tUtilities.prototype.generateUniqueId = function()\r\n\t{\r\n\t    return (new Date()).valueOf().toString() + Math.floor((Math.random() * 10000) + 1).toString();\r\n\t};\r\n\t\r\n\tmodule.exports.Utilities = new Utilities();\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * @enum SystemError {Enum}\r\n\t * @description\r\n\t * These errors are passed in API error handler functions.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tvar SystemError = {\r\n\t    /**\r\n\t     * Error occurred in add-on.\r\n\t     * @type {String}\r\n\t     */\r\n\t    NativeError : \"Error\",\r\n\t\r\n\t    /**\r\n\t     * System not started or fully operational.\r\n\t     * @type {String}\r\n\t     */\r\n\t    OperationFailed : \"OperationFailed\",\r\n\t\r\n\t    /**\r\n\t     * User has not authorized add-on through Access Control Dialogue.\r\n\t     * @type {String}\r\n\t     */\r\n\t    UserNotAuthorized : \"UserNotAuthorized\",\r\n\t\r\n\t    /**\r\n\t     * Invalid arguments passed.\r\n\t     * @type {String}\r\n\t     */\r\n\t    InvalidArguments : \"InvalidArguments\",\r\n\t\r\n\t    /**\r\n\t     * System has no capabilities to execute API call.\r\n\t     * @type {String}\r\n\t     */\r\n\t    CapabilityMissing : \"CapabilityMissing\",\r\n\t\r\n\t    /**\r\n\t     * More then one instance of Add-on is running.\r\n\t     * @type {String}\r\n\t     */\r\n\t    MoreThenOneInstanceRunning : \"MoreThenOneInstanceRunning\",\r\n\t\r\n\t    /**\r\n\t     * Invalid monitor has been used. (Monitor is no longer connected to local machine).\r\n\t     * @type {String}\r\n\t     */\r\n\t    InvalidMonitor : \"InvalidMonitor\",\r\n\t\r\n\t    /**\r\n\t     * Failed to execute operation on conversation that no longer exists.\r\n\t     * @type {String}\r\n\t     */\r\n\t    InvalidConversation : \"InvalidConversation\"\r\n\t};\r\n\t\r\n\tvar SystemErrorAliasMap = {\r\n\t    eSyntaxError       : \"NativeError\",\r\n\t    eOperationFailed   : \"OperationFailed\",\r\n\t    eNotUserAuthorized : \"UserNotAuthorized\",\r\n\t    eInvalidArgument   : \"InvalidArguments\",\r\n\t    eCapabilityMissing : \"CapabilityMissing\",\r\n\t    eLoggedInLock      : \"MoreThenOneInstanceRunning\",\r\n\t    eInvalidMonitor    : \"InvalidMonitor\",\r\n\t    eInvalidMonitorID  : \"InvalidMonitor\",\r\n\t    eInvalidCallID     : \"InvalidConversation\"\r\n\t};\r\n\t\r\n\tmodule.exports.SystemErrors = SystemErrorAliasMap;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\r\n\tvar MessageResponseHandlerModule = __webpack_require__(3);\r\n\tvar LogModule                    = __webpack_require__(4);\r\n\tvar UtilitiesModule              = __webpack_require__(5);\r\n\t\r\n\tvar cwic = {\r\n\t    MessageResponseHandler : MessageResponseHandlerModule.MessageResponseHandler,\r\n\t    Logger                 : LogModule.Logger,\r\n\t    Utilities              : UtilitiesModule.Utilities\r\n\t};\r\n\t\r\n\tfunction SystemException(message)\r\n\t{\r\n\t    this.message = message;\r\n\t}\r\n\t\r\n\tSystemException.prototype = Object.create(Error.prototype);\r\n\tSystemException.prototype.name = \"cwic.SystemException\";\r\n\tSystemException.prototype.constructor = SystemException;\r\n\t\r\n\t\r\n\tfunction MessageSender()\r\n\t{\r\n\t    var m_EventHandlers = [];\r\n\t}\r\n\t\r\n\tMessageSender.prototype.sendMessage = function(messageType, messageData, errorHandler, successHandler)\r\n\t{\r\n\t    if(this.plugin == null)\r\n\t    {\r\n\t        throw new SystemException();\r\n\t    }\r\n\t\r\n\t    var messageID = cwic.Utilities.generateUniqueId();\r\n\t\r\n\t    if(typeof errorHandler === 'function')\r\n\t    {\r\n\t        cwic.MessageResponseHandler.addErrorHandler(messageID, errorHandler);\r\n\t    }\r\n\t\r\n\t    if(typeof successHandler === 'function')\r\n\t    {\r\n\t        cwic.MessageResponseHandler.addSuccessHandler(messageID, successHandler);\r\n\t    }\r\n\t\r\n\t    var message = {\r\n\t        ciscoSDKClientMessage: {\r\n\t            'messageId': messageID,\r\n\t            'name': messageType,\r\n\t            'content': messageData || {}\r\n\t        }\r\n\t    };\r\n\t\r\n\t    this.plugin.sendMessage(message);\r\n\t};\r\n\t\r\n\tMessageSender.prototype.addEventHandler = function(eventName, eventHandler)\r\n\t{\r\n\t    this.eventHandlers[eventName] = eventHandler;\r\n\t};\r\n\t\r\n\tMessageSender.prototype.plugin = null;\r\n\tMessageSender.prototype.eventHandlers = [];\r\n\t\r\n\tmodule.exports.MessageSender = new MessageSender();\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\r\n\tvar MessageSenderModule = __webpack_require__(7);\r\n\t\r\n\t// Multimedia Modules\r\n\tvar DeviceModule = __webpack_require__(9);\r\n\t\r\n\tvar cwic = {\r\n\t    MessageSender : MessageSenderModule.MessageSender,\r\n\t    MediaDevice : DeviceModule.MediaDevice\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class Speaker\r\n\t * @classdesc Speaker device plugged into PC.\r\n\t * @extends {MediaDevice}\r\n\t * @constructor\r\n\t *\r\n\t * @description This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction Speaker(genericDevice)\r\n\t{\r\n\t    var deviceInfo = {\r\n\t        deviceID : genericDevice.clientPlayoutID,\r\n\t        hardwareID : genericDevice.hardwareID,\r\n\t        isSelected : genericDevice.isSelectedPlayoutDevice,\r\n\t        name : genericDevice.playoutName,\r\n\t        vendorID : genericDevice.vendorID\r\n\t    };\r\n\t\r\n\t    cwic.MediaDevice.call(this, deviceInfo);\r\n\t\r\n\t    this.volume = genericDevice.volume;\r\n\t}\r\n\t\r\n\tSpeaker.prototype = Object.create(cwic.MediaDevice.prototype);\r\n\tSpeaker.prototype.constructor = Speaker;\r\n\t\r\n\t/**\r\n\t * @memberof Speaker\r\n\t * @member volume\r\n\t * @description\r\n\t * Speaker's output volume level.\r\n\t *\r\n\t * @type {number}\r\n\t * @since 11.7.0\r\n\t */\r\n\tSpeaker.prototype.volume = 0;\r\n\t\r\n\t/**\r\n\t * @memberof Speaker\r\n\t * @method setVolume\r\n\t * @description\r\n\t * Sets a new output volume level of the ringer.\r\n\t *\r\n\t * @param volume {Number} - New volume level that will be set. Allowed values are 0 - 100.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t *\r\n\t * @throw Invalid Volume Value - Thrown if volume level value is less then 0 or more then 100.\r\n\t */\r\n\tSpeaker.prototype.setVolume = function(volume, errorHandler)\r\n\t{\r\n\t    if(volume < 0 || volume > 100)\r\n\t    {\r\n\t        throw Error(\"Invalid Volume Value\");\r\n\t    }\r\n\t\r\n\t    this.volume = volume;\r\n\t\r\n\t    var messageType = \"setCurrentSpeakerVolume\";\r\n\t    var messageContent = {\r\n\t        volume : volume\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\tmodule.exports.Speaker = Speaker;\r\n\t\r\n\t\r\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * @class MediaDevice\r\n\t *\r\n\t * @description\r\n\t * This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction MediaDevice(deviceInfo)\r\n\t{\r\n\t    this.deviceID   = deviceInfo.deviceID;\r\n\t    this.hardwareID = deviceInfo.hardwareID;\r\n\t    this.isSelected = deviceInfo.isSelected;\r\n\t    this.name       = deviceInfo.name;\r\n\t    this.vendorID   = deviceInfo.vendorID;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof MediaDevice\r\n\t * @memeber deviceID\r\n\t * @description\r\n\t * Unique device ID given by operating system.\r\n\t *\r\n\t * @type {String}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMediaDevice.prototype.deviceID = null;\r\n\t\r\n\t/**\r\n\t * @memberof MediaDevice\r\n\t * @memeber hardwareID\r\n\t * @description\r\n\t * Unique hardwareID of device.\r\n\t *\r\n\t * @type {String}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMediaDevice.prototype.hardwareID = null;\r\n\t\r\n\t/**\r\n\t * @memberof MediaDevice\r\n\t * @memeber isSelected\r\n\t * @description\r\n\t * Indicates whether this device is selected or not.\r\n\t *\r\n\t * @type {Boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMediaDevice.prototype.isSelected = null;\r\n\t\r\n\t/**\r\n\t * @memberof MediaDevice\r\n\t * @memeber name\r\n\t * @description\r\n\t * Name of the device.\r\n\t *\r\n\t * @type {String}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMediaDevice.prototype.name = null;\r\n\t\r\n\t/**\r\n\t * @memberof MediaDevice\r\n\t * @memeber vendorID\r\n\t * @description\r\n\t * Unique ID for device given by vendor.\r\n\t *\r\n\t * @type {String}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMediaDevice.prototype.vendorID = null;\r\n\t\r\n\tmodule.exports.MediaDevice = MediaDevice;\r\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\r\n\tvar MessageSenderModule = __webpack_require__(7);\r\n\t\r\n\t// Multimedia Modules\r\n\tvar DeviceModule = __webpack_require__(9);\r\n\t\r\n\tvar cwic = {\r\n\t    MessageSender : MessageSenderModule.MessageSender,\r\n\t    MediaDevice : DeviceModule.MediaDevice\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class Microphone\r\n\t * @classdesc Microphone device plugged into PC.\r\n\t * @extends {MediaDevice}\r\n\t * @constructor\r\n\t *\r\n\t * @description This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction Microphone(genericDevice)\r\n\t{\r\n\t    var deviceInfo = {\r\n\t        deviceID : genericDevice.recordingID,\r\n\t        hardwareID : genericDevice.hardwareID,\r\n\t        isSelected : genericDevice.isSelectedRecordingDevice,\r\n\t        name : genericDevice.recordingName,\r\n\t        vendorID : genericDevice.vendorID\r\n\t    };\r\n\t\r\n\t    cwic.MediaDevice.call(this, deviceInfo);\r\n\t\r\n\t    this.volume = genericDevice.volume;\r\n\t}\r\n\t\r\n\tMicrophone.prototype = Object.create(cwic.MediaDevice.prototype);\r\n\tMicrophone.prototype.constructor = Microphone;\r\n\t\r\n\t/**\r\n\t * @memberof Microphone\r\n\t * @member volume\r\n\t * @description\r\n\t * Microphone's input volume level.\r\n\t *\r\n\t * @type {number}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMicrophone.prototype.volume = 0;\r\n\t\r\n\t/**\r\n\t * @memberof Microphone\r\n\t * @method setVolume\r\n\t * @description\r\n\t * Sets a new input volume level of the microphone.\r\n\t *\r\n\t * @param volume {Number} - New volume level that will be set. Allowed values are 0 - 100.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Volume Value - Thrown if volume level value is less then 0 or more then 100.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tMicrophone.prototype.setVolume = function(volume, errorHandler)\r\n\t{\r\n\t    if(volume < 0 || volume > 100)\r\n\t    {\r\n\t        throw Error(\"Invalid Volume Value\");\r\n\t    }\r\n\t\r\n\t    this.volume = volume;\r\n\t\r\n\t    var messageType = \"setCurrentMicrophoneVolume\";\r\n\t    var messageContent = {\r\n\t        volume : volume\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t\r\n\tmodule.exports.Microphone = Microphone;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\tvar DeviceModule = __webpack_require__(9);\r\n\t\r\n\tvar cwic = {\r\n\t    MediaDevice : DeviceModule.MediaDevice\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class Camera\r\n\t * @classdesc Camera device plugged into PC.\r\n\t * @extends {MediaDevice}\r\n\t * @constructor\r\n\t *\r\n\t * @description This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction Camera(genericDevice)\r\n\t{\r\n\t    var deviceInfo = {\r\n\t        deviceID : genericDevice.captureID,\r\n\t        hardwareID : genericDevice.hardwareID,\r\n\t        isSelected : genericDevice.isSelectedCaptureDevice,\r\n\t        name : genericDevice.captureName,\r\n\t        vendorID : genericDevice.vendorID\r\n\t    };\r\n\t\r\n\t    cwic.MediaDevice.call(this, deviceInfo);\r\n\t}\r\n\t\r\n\tCamera.prototype = Object.create(cwic.MediaDevice.prototype);\r\n\tCamera.prototype.constructor = Camera;\r\n\t\r\n\tmodule.exports.Camera = Camera;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\r\n\tvar MessageSenderModule = __webpack_require__(7);\r\n\t\r\n\t// Multimedia Modules\r\n\tvar DeviceModule = __webpack_require__(9);\r\n\t\r\n\tvar cwic = {\r\n\t    MessageSender : MessageSenderModule.MessageSender,\r\n\t    MediaDevice : DeviceModule.MediaDevice\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class Ringer\r\n\t * @classdesc Ringer device plugged into PC. Any speaker device can also be a ringer device.\r\n\t * @extends {MediaDevice}\r\n\t * @constructor\r\n\t *\r\n\t * @description This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction Ringer(genericDevice)\r\n\t{\r\n\t    var deviceInfo = {\r\n\t        deviceID : genericDevice.ringerID,\r\n\t        hardwareID : genericDevice.hardwareID,\r\n\t        isSelected : genericDevice.isSelectedRingerDevice,\r\n\t        name : genericDevice.ringerName,\r\n\t        vendorID : genericDevice.vendorID\r\n\t    };\r\n\t\r\n\t    cwic.MediaDevice.call(this, deviceInfo);\r\n\t\r\n\t    this.volume = genericDevice.volume;\r\n\t}\r\n\t\r\n\tRinger.prototype = Object.create(cwic.MediaDevice.prototype);\r\n\tRinger.prototype.constructor = Ringer;\r\n\t\r\n\t/**\r\n\t * @memberof Ringer\r\n\t * @member volume\r\n\t * @description\r\n\t * Ringer's output volume level.\r\n\t *\r\n\t * @type {number}\r\n\t * @since 11.7.0\r\n\t */\r\n\tRinger.prototype.volume = 0;\r\n\t\r\n\t/**\r\n\t * @memberof Ringer\r\n\t * @method setVolume\r\n\t * @description\r\n\t * Sets a new output volume level of the ringer.\r\n\t *\r\n\t * @param volume {Number} - New volume level that will be set. Allowed values are 0 - 100.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Volume Value - Thrown if volume level value is less then 0 or more then 100.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tRinger.prototype.setVolume = function(volume, errorHandler)\r\n\t{\r\n\t    if(volume < 0 || volume > 100)\r\n\t    {\r\n\t        throw Error(\"Invalid Volume Value\");\r\n\t    }\r\n\t\r\n\t    this.volume = volume;\r\n\t\r\n\t    var messageType = \"setCurrentRingerVolume\";\r\n\t    var messageContent = {\r\n\t        volume : volume\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\tmodule.exports.Ringer = Ringer;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n\t// Required Modules\r\n\t\r\n\t/**\r\n\t * @class Ringtone\r\n\t * @classdesc Sound that will be played on incoming telephony conversation.\r\n\t * @constructor\r\n\t *\r\n\t * @description This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction Ringtone(name)\r\n\t{\r\n\t    this.name = name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof Ringtone\r\n\t * @member name\r\n\t * @description Name of the ringtone.\r\n\t * @type {string}\r\n\t * @since 11.7.0\r\n\t */\r\n\tRingtone.prototype.name = \"unknown\";\r\n\t\r\n\tmodule.exports.Ringtone = Ringtone;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * @class Monitor\r\n\t * @classdesc\r\n\t * Monitor currently connected to PC.\r\n\t * @constructor\r\n\t *\r\n\t * @description This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction Monitor(monitorInfo)\r\n\t{\r\n\t    this.id = monitorInfo.ID;\r\n\t    this.name = monitorInfo.name;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof Monitor\r\n\t * @meber id\r\n\t * @description\r\n\t * Unique monitor ID.\r\n\t * @type {string}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMonitor.prototype.id = \"Unknown\";\r\n\t\r\n\t/**\r\n\t * @memberof Monitor\r\n\t * @member name\r\n\t * @description\r\n\t * Name of the monitor.\r\n\t * @type {string}\r\n\t * @since 11.7.0\r\n\t */\r\n\tMonitor.prototype.name = \"Unknown\";\r\n\t\r\n\tmodule.exports.Monitor = Monitor;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\r\n\tvar MessageReceiverModule = __webpack_require__(2);\r\n\tvar MessageSenderModule   = __webpack_require__(7);\r\n\t\r\n\t// Telephony Modules.\r\n\tvar TelephonyControllerCapabilitiesModule = __webpack_require__(16);\r\n\tvar TelephonyConnectionStateModule = __webpack_require__(17);\r\n\tvar TelephonyConversationModule = __webpack_require__(18);\r\n\tvar TelephonyDeviceModule       = __webpack_require__(21);\r\n\tvar SoftPhoneModule             = __webpack_require__(22);\r\n\tvar DeskPhoneModule             = __webpack_require__(23);\r\n\tvar RemotePhoneModule           = __webpack_require__(24);\r\n\t\r\n\t// Utils Modules\r\n\tvar LoggerModule = __webpack_require__(4);\r\n\t\r\n\tvar cwic = {\r\n\t    TelephonyControllerCapabilities : TelephonyControllerCapabilitiesModule.TelephonyControllerCapabilities,\r\n\t    TelephonyConnectionStateMap : TelephonyConnectionStateModule.TelephonyConnectionStateMap,\r\n\t    TelephonyConversation : TelephonyConversationModule.TelephonyConversation,\r\n\t    TelephonyDevice       : TelephonyDeviceModule.TelephonyDevice,\r\n\t    SoftPhone             : SoftPhoneModule.SoftPhone,\r\n\t    DeskPhone             : DeskPhoneModule.Deskphone,\r\n\t    RemotePhone           : RemotePhoneModule.RemotePhone,\r\n\t\r\n\t    MessageSender         : MessageSenderModule.MessageSender,\r\n\t    MessageReceiver       : MessageReceiverModule.MessageReceiver,\r\n\t    Logger                : LoggerModule.Logger\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class TelephonyController\r\n\t * @constructor\r\n\t */\r\n\tfunction TelephonyController()\r\n\t{\r\n\t    var m_EventHandlers = {};\r\n\t\r\n\t    cwic.MessageReceiver.addMessageHandler('telephonydeviceschange', onTelephonyDeviceListChanged.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('connectionstatuschange', onConnectionStateChanged.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('connectionfailure', onConnectionFailure.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('conversationCallStateChanged', onConversationCallStateChanged.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('conversationStateChanged', onConversationStateChanged.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('audioCallPickupNotification', onAudioCallPickupNotification.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('visualCallPickupNotification', onVisualCallPickupNotification.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('callPickupError', onCallPickupError.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('telephonyservicechange', onCapabilitiesChanged.bind(this));\r\n\t\r\n\t    function onTelephonyDeviceListChanged(content)\r\n\t    {\r\n\t        var index;\r\n\t        var telephonyDevices = content.devices;\r\n\t\r\n\t        this.telephonyDevices.length = 0;\r\n\t\r\n\t        for(index = 0; index < telephonyDevices.length; ++index)\r\n\t        {\r\n\t            var device = telephonyDevices[index];\r\n\t            var controlMode = device.controlMode;\r\n\t\r\n\t            switch(controlMode)\r\n\t            {\r\n\t                case \"Deskphone\":\r\n\t                {\r\n\t                    var deskPhone = new cwic.DeskPhone(telephonyDevices[index]);\r\n\t                    this.telephonyDevices.push(deskPhone);\r\n\t                    break;\r\n\t                }\r\n\t                case \"Softphone\":\r\n\t                {\r\n\t                    var softPhone = new cwic.SoftPhone(telephonyDevices[index]);\r\n\t                    this.telephonyDevices.push(softPhone);\r\n\t                    break;\r\n\t                }\r\n\t                case \"ExtendConnect\":\r\n\t                {\r\n\t                    var remotePhone = new cwic.RemotePhone(telephonyDevices[index]);\r\n\t                    this.telephonyDevices.push(remotePhone);\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t\r\n\t            var eventHandler = m_EventHandlers['onTelephonyDeviceListChanged'];\r\n\t            if(eventHandler)\r\n\t            {\r\n\t                eventHandler();\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onConnectionStateChanged(state)\r\n\t    {\r\n\t        this.connectionState = cwic.TelephonyConnectionStateMap[state];\r\n\t\r\n\t        var eventHandler = m_EventHandlers['onConnectionStateChanged'];\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler(this.connectionState);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onConnectionFailure(content)\r\n\t    {\r\n\t        var connectionFailure = content;\r\n\t        cwic.Logger.error(\"Failed to connect with CUCM or connection has been broken. Reason: \" + connectionFailure);\r\n\t\r\n\t        var eventHandler = m_EventHandlers['onConnectionFailure'];\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler(connectionFailure);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onConversationStateChanged(content)\r\n\t    {\r\n\t        var eventHandler = m_EventHandlers['onConversationUpdated'];\r\n\t\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            var telephonyConversation = new cwic.TelephonyConversation(content);\r\n\t            eventHandler(telephonyConversation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onConversationCallStateChanged(content)\r\n\t    {\r\n\t        var telephonyConversation = new cwic.TelephonyConversation(content);\r\n\t        var eventHandler;\r\n\t\r\n\t        switch(telephonyConversation.callState)\r\n\t        {\r\n\t            case 'OffHook':\r\n\t                eventHandler = m_EventHandlers['onConversationOutgoing'];\r\n\t                break;\r\n\t            case 'Ringin':\r\n\t                eventHandler = m_EventHandlers['onConversationIncoming'];\r\n\t                break;\r\n\t            case 'OnHook':\r\n\t                eventHandler = m_EventHandlers['onConversationEnded'];\r\n\t                break;\r\n\t            case 'Connected':\r\n\t                eventHandler = m_EventHandlers['onConversationStarted'];\r\n\t                break;\r\n\t            default:\r\n\t                eventHandler = m_EventHandlers['onConversationUpdated'];\r\n\t        }\r\n\t\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler(telephonyConversation);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onVisualCallPickupNotification(content)\r\n\t    {\r\n\t        var notificationInfo = content.notificationInfo;\r\n\t\r\n\t        var eventHandler = m_EventHandlers['onVisualCallPickupNotification'];\r\n\t\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler(notificationInfo);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onAudioCallPickupNotification(content)\r\n\t    {\r\n\t        var isAudioEnabled = content.isAudioEnabled;\r\n\t\r\n\t        var eventHandler = m_EventHandlers['onAudioCallPickupNotification'];\r\n\t\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler(isAudioEnabled);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onCallPickupError(content)\r\n\t    {\r\n\t\r\n\t    }\r\n\t\r\n\t    function onCapabilitiesChanged(content)\r\n\t    {\r\n\t        var telephonyCapabilities = new cwic.TelephonyControllerCapabilities(content);\r\n\t        this.capabilities = telephonyCapabilities;\r\n\t\r\n\t        this.recentGroupCallPickupNumbers = content.recentGroupCallPickupNumbers ? content.recentGroupCallPickupNumbers : [];\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @memberof TelephonyController\r\n\t     * @method addEventHandler\r\n\t     * @description Add handler function for Telephony Controller's event.\r\n\t     *\r\n\t     * @param eventName {String} - Name of the event.\r\n\t     * @param handler {Function} - Function that will be called when event is fired.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.addEventHandler = function(eventName, handler)\r\n\t    {\r\n\t        m_EventHandlers[eventName] = handler;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof TelephonyController\r\n\t     * @method removeEventHandler\r\n\t     *\r\n\t     * @description Remove handler function for TelephonyController's event.\r\n\t     *\r\n\t     * @param eventName {String} - Name of the event.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.removeEventHandler = function(eventName)\r\n\t    {\r\n\t        delete m_EventHandlers[eventName];\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof TelephonyController\r\n\t     * @method refreshTelephonyDeviceList\r\n\t     *\r\n\t     * @description Send request to client to refresh telephony device list.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.refreshTelephonyDeviceList = function()\r\n\t    {\r\n\t        var messageType    = \"getAvailableDevices\";\r\n\t        var messageData    = {};\r\n\t        var errorHandler   = null;\r\n\t        var successHandler = onTelephonyDeviceListChanged.bind(this);\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler, successHandler);\r\n\t    };\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyController\r\n\t * @property telephonyDevices\r\n\t *\r\n\t * @description\r\n\t * List of available telephony devices.\r\n\t * @type {TelephonyDevice[]}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyController.prototype.telephonyDevices = [];\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyController\r\n\t * @member connectionState\r\n\t *\r\n\t * @description\r\n\t * Current connection state with CUCM.\r\n\t * @type {TelephonyConnectionState}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyController.prototype.connectionState = \"Disconnected\";\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyController\r\n\t * @member capabilities\r\n\t * @description\r\n\t * List of telephony controller capabilities.\r\n\t * @type {TelephonyControllerCapabilities}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyController.prototype.capabilities = null;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyController\r\n\t * @member recentGroupCallPickupNumbers\r\n\t * @description\r\n\t * List of recently dialed group pickup numbers\r\n\t * @type {String[]}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyController.prototype.recentGroupCallPickupNumbers = [];\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyController\r\n\t * @method TelephonyController#getConnectedTelephonyDevice\r\n\t * @description Retrieves telephony device that is currently connected with CUCM.\r\n\t *\r\n\t * @returns {TelephonyDevice} Currently connected telephony device.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyController.prototype.getConnectedTelephonyDevice = function()\r\n\t{\r\n\t    var telephonyDevice = null;\r\n\t\r\n\t    for(var index in this.telephonyDevices)\r\n\t    {\r\n\t        if(this.telephonyDevices[index].isSelected)\r\n\t        {\r\n\t            telephonyDevice = this.telephonyDevices[index];\r\n\t            break;\r\n\t        }\r\n\t    }\r\n\t    return telephonyDevice;\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyController\r\n\t * @method startAudioConversation\r\n\t *\r\n\t * @description\r\n\t * Starts new audio conversation. Before calling this function it is necessary to add 'onConversationStarted' event\r\n\t * handler through addEventHandler in order to receive TelephonyConversation object.\r\n\t *\r\n\t * @param number {String} - Number that will be called to start a conversation.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyController.prototype.startAudioConversation = function(number, errorHandler)\r\n\t{\r\n\t    var messageType = \"originate\";\r\n\t    var messageData = {\r\n\t        recipient : number,\r\n\t        videoDirection : \"RecvOnly\"\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyController\r\n\t * @method startVideoConversation\r\n\t *\r\n\t * @description\r\n\t * Starts new video conversation. Before calling this function it is necessary add to 'onConversationStarted' event\r\n\t * handler through addEventHandler in order to receive TelephonyConversation object.\r\n\t *\r\n\t * @param number {String} - Number that will be called to start a conversation.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyController.prototype.startVideoConversation = function(number, errorHandler)\r\n\t{\r\n\t    var messageType = \"originate\";\r\n\t    var messageData = {\r\n\t        recipient : number,\r\n\t        videoDirection : \"sendRecv\"\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyController\r\n\t * @method callPickup\r\n\t * @description\r\n\t * Pick up incoming call in call pickup group in which currently connected telephony device's line is associated with.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyController.prototype.callPickup = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"callPickup\";\r\n\t    var messageData = {};\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyController\r\n\t * @method groupCallPickup\r\n\t * @description\r\n\t * Can be used for both direct call pickup and group call pickup. Group call pickup, picks up incoming call in another\r\n\t * call pickup group. Group number is specified passed as parameter. Direct call pickup, picks up incoming call on the\r\n\t * specified directory number. Directory number is specified as parameter.\r\n\t *\r\n\t * @param number - Group number if used for group call pickup. Directory number if used for direct call pick up.\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyController.prototype.groupCallPickup = function(number, errorHandler)\r\n\t{\r\n\t    var messageType = \"groupCallPickup\";\r\n\t    var messageData = {\r\n\t        pickupNumber: number\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyController\r\n\t * @method otherGroupPickup\r\n\t * @description\r\n\t * Pick up incoming call, in a group that is associated with group in which currently connected telephony device's line\r\n\t * is associated with.\r\n\t *\r\n\t * @param [errorHandler] - Called if error has occurred in add-on, passes {@link SystemError}.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyController.prototype.otherGroupPickup = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"otherGroupPickup\";\r\n\t    var messageData = {};\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\tmodule.exports.TelephonyController = new TelephonyController();\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * @class TelephonyControllerCapabilities\r\n\t * @classdesc\r\n\t * List of telephony capabilities.\r\n\t *\r\n\t * @description This class cannot be instantiated.\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction TelephonyControllerCapabilities(capabilites)\r\n\t{\r\n\t    this.isHuntGroupEnabled = capabilites.isHuntGroupEnabled;\r\n\t    this.isCallPickupEnabled = capabilites.isCallPickupEnabled;\r\n\t    this.isGroupCallPickupEnabled = capabilites.isGroupCallPickupEnabled;\r\n\t    this.isOtherGroupPickupEnabled = capabilites.isOtherGroupPickupEnabled;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyControllerCapabilities\r\n\t * @member isHuntGroupEnabled\r\n\t * @description Indicates whether hunt group feature is enabled or not.\r\n\t * @type {boolean}\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyControllerCapabilities.prototype.isHuntGroupEnabled = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyControllerCapabilities\r\n\t * @member isCallPickupEnabled\r\n\t * @description Indicates whether call pickup feature is enabled or not.\r\n\t * @type {boolean}\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyControllerCapabilities.prototype.isCallPickupEnabled = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyControllerCapabilities\r\n\t * @member isGroupCallPickupEnabled\r\n\t * @description Indicates whether group call pickup feature is enabled or not.\r\n\t * @type {boolean}\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyControllerCapabilities.prototype.isGroupCallPickupEnabled = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyControllerCapabilities\r\n\t * @member isOtherGroupPickupEnabled\r\n\t * @description Indicates whether other group pickup feature is enabled or not.\r\n\t * @type {boolean}\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyControllerCapabilities.prototype.isOtherGroupPickupEnabled = false;\r\n\t\r\n\tmodule.exports.TelephonyControllerCapabilities = TelephonyControllerCapabilities;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * @enum TelephonyConnectionState {Enum}\r\n\t * @description\r\n\t * Represents connection state between CUCM and telephony device.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tvar TelephonyConnectionState = {\r\n\t    /**\r\n\t     * Connection is established with CUCM.\r\n\t     * @type {String}\r\n\t     */\r\n\t    Connected : \"Connected\",\r\n\t\r\n\t    /**\r\n\t     * Establishing connection with CUCM.\r\n\t     * @type {String}\r\n\t     */\r\n\t    Connecting : \"Connecting\",\r\n\t\r\n\t    /**\r\n\t     * Disconnected from CUCM.\r\n\t     * @type {String}\r\n\t     */\r\n\t    Disconnected : \"Disconnected\"\r\n\t};\r\n\t\r\n\tvar TelephonyConnectionStateMap = {\r\n\t    \"eReady\"                : \"Connected\",\r\n\t    \"eIdle\"                 : \"Disconnected\",\r\n\t    \"eRegistering\"          : \"Connecting\",\r\n\t    \"eConnectionTerminated\" : \"Disconnected\"\r\n\t};\r\n\t\r\n\tmodule.exports.TelephonyConnectionStateMap = TelephonyConnectionStateMap;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\r\n\tvar MessageReceiverModule = __webpack_require__(2);\r\n\tvar MessageSenderModule   = __webpack_require__(7);\r\n\t\r\n\t// TelephonyModules\r\n\tvar TelephonyConversationStatesModule = __webpack_require__(19);\r\n\tvar TelephonyConversationCapabilitiesModule = __webpack_require__(20);\r\n\t\r\n\tvar cwic = {\r\n\t    MessageSender   : MessageSenderModule.MessageSender,\r\n\t    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n\t\r\n\t    TelephonyConversationState : TelephonyConversationStatesModule.TelephonyConversationStates,\r\n\t    TelephonyConversationCapabilities : TelephonyConversationCapabilitiesModule.TelephonyConversationCapabilities\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class TelephonyConversation\r\n\t *\r\n\t * @static\r\n\t * @since 11.7.0\r\n\t *\r\n\t * @classdesc\r\n\t * Telephony conversation class can be used to manipulate incoming, ongoing and outcoming conversations. It is the actual\r\n\t * representation of one telephony call.\r\n\t *\r\n\t */\r\n\tfunction TelephonyConversation(conversation)\r\n\t{\r\n\t    this.ID = conversation.callId;\r\n\t\r\n\t    // Mapping of video direction to canStartVideo capability\r\n\t    // TODO: Do this in addon\r\n\t    var canStartVideo = {\r\n\t        Inactive : true,\r\n\t        SendRecv : false,\r\n\t        SendOnly : false,\r\n\t        RecvOnly : true\r\n\t    };\r\n\t\r\n\t    // Mapping of video direction to canStopVideo capability\r\n\t    // TODO: Do this in addon\r\n\t    var canStopVideo = {\r\n\t        Inactive : false,\r\n\t        SendRecv : true,\r\n\t        SendOnly : true,\r\n\t        RecvOnly : false\r\n\t    };\r\n\t\r\n\t    this.capabilities = new cwic.TelephonyConversationCapabilities(conversation.capabilities);\r\n\t    this.capabilities.canStartVideo = canStartVideo[conversation.videoDirection];\r\n\t    this.capabilities.canStopVideo = canStopVideo[conversation.videoDirection];\r\n\t\r\n\t    this.callState = conversation.callState;\r\n\t    this.states = new cwic.TelephonyConversationState(conversation);\r\n\t\r\n\t    // Participant objects\r\n\t    this.localParticipant = conversation.localParticipant;\r\n\t    this.maxParticipants  = conversation.maxParticipants;\r\n\t    this.participants     = conversation.participants;\r\n\t\r\n\t\r\n\t\r\n\t    this.videoDirection   = conversation.videoDirection;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @member states\r\n\t * @description\r\n\t * List of different active/inactive conversation states.\r\n\t *\r\n\t * @type {TelephonyConversationStates}\r\n\t */\r\n\tTelephonyConversation.prototype.states = null;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @member capabilities\r\n\t * @description\r\n\t * List of capable actions that telephony conversation can perform.\r\n\t *\r\n\t * @type {TelephonyConversationCapabilities}\r\n\t */\r\n\tTelephonyConversation.prototype.capabilities = null;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @member callState\r\n\t * @description\r\n\t * Current call state of telephony conversation.\r\n\t *\r\n\t * @type {String}\r\n\t */\r\n\tTelephonyConversation.prototype.callState = null;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method answerAudio\r\n\t * @description\r\n\t * Answers incoming telephony conversation with audio.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.answerAudio = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"answer\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method answerVideo\r\n\t * @description\r\n\t * Answers incoming telephony conversation with video.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.answerVideo = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"answer\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID,\r\n\t        videoDirection : 'SendRecv'\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method reject\r\n\t * @description\r\n\t * Rejects(Immediate Divert) incoming telephony conversation.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.reject = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"iDivert\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method end\r\n\t * @description\r\n\t * Ends telephony conversation/\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.end = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"endCall\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method hold\r\n\t * @description\r\n\t * Puts telephony conversation on hold.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.hold = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"hold\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method resume\r\n\t * @description\r\n\t * Resumes telephony conversation that was previously been put on hold.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.resume = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"resume\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method startVideo\r\n\t * @description\r\n\t * Start sending video to other participants.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.startVideo = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"setVideoDirection\";\r\n\t    var messageContent = {\r\n\t        callId: this.ID,\r\n\t        videoDirection: \"SendRecv\"\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method stopVideo\r\n\t * @description\r\n\t * Stop sending video to to other participants.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.stopVideo = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"setVideoDirection\";\r\n\t    var messageContent = {\r\n\t        callId: this.ID,\r\n\t        videoDirection: \"RecvOnly\"\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method muteAudio\r\n\t * @description\r\n\t * Mute audio on the telephony conversation.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.muteAudio = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"mute\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID,\r\n\t        muteVideo: false,\r\n\t        muteAudio: true\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method unmuteAudio\r\n\t * @description\r\n\t * Unmute audio on the telephony conversation.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.unmuteAudio = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"unmute\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID,\r\n\t        unmuteAudio: true\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method muteVideo\r\n\t * @description\r\n\t * Mute video on the telephony conversation. When video is muted remote side will still receive video but it will\r\n\t * only see 'frozen' frame.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.muteVideo = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"mute\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID,\r\n\t        muteVideo: true,\r\n\t        muteAudio: false\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method unmuteVideo\r\n\t * @description\r\n\t * Unmute video on the telephony conversation.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.unmuteVideo = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"unmute\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID,\r\n\t        unmuteVideo: true\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method transferConversation\r\n\t * @description\r\n\t * Initiates conversation transfer to another directory number. In order for transfer to be complete, successive call to\r\n\t * completeTransfer() must be made.\r\n\t *\r\n\t * @param number {Number} - Number to witch conversation will be transferred.\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t *\r\n\t * @see completeTransfer\r\n\t */\r\n\tTelephonyConversation.prototype.transferConversation = function(number, errorHandler)\r\n\t{\r\n\t    var messageType = \"transferCall\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID,\r\n\t        transferToNumber : number\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method completeTransfer\r\n\t * @description\r\n\t * Completes telephony conversation transfer that was previously initiated.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t *\r\n\t * @see transferConversation\r\n\t */\r\n\tTelephonyConversation.prototype.completeTransfer = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"completeTransfer\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method merge\r\n\t * @description\r\n\t * Merge two telephony conversations in conference conversation.\r\n\t *\r\n\t * @param conversation {TelephonyConversation} - Conversation that will be merged.\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Object - Thrown if conversation is not instance of {@link TelephonyConversation}.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.merge = function(conversation, errorHandler)\r\n\t{\r\n\t    if(!(conversation instanceof TelephonyConversation))\r\n\t    {\r\n\t        throw Error(\"Invalid Object\");\r\n\t    }\r\n\t\r\n\t    var messageType = \"joinCalls\";\r\n\t    var messageContent = {\r\n\t        callId : this.ID,\r\n\t        joinCallId : conversation.ID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method startScreenShare\r\n\t * @description\r\n\t * Starts sharing of the screen. If this function is called and no screen has been selected for sharing through\r\n\t * MultimediaController.selectMonitor(), default screen will be selected for sharing. Defaulted screen is the first\r\n\t * screen retrieved when monitors are being enumerated during plugin initialization or the previously set monitor\r\n\t * through MultimediaController.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t *\r\n\t * @see MultimedaiController\r\n\t */\r\n\tTelephonyConversation.prototype.startScreenShare = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"requestDesktopShare\";\r\n\t    var messageContent = {\r\n\t        callId: this.ID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method stopScreenShare\r\n\t * @description\r\n\t * Stops sharing of the screen.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.stopScreenShare = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"releaseDesktopShare\";\r\n\t    var messageContent = {\r\n\t        callId: this.ID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method sendDTMF\r\n\t * @description\r\n\t * Send one or more DTMF characters.\r\n\t *\r\n\t * @param dtmfDigit{String} - DTMF characters that will be sent.\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.sendDTMF = function(dtmfDigit, errorHandler)\r\n\t{\r\n\t    var messageType = \"sendDTMF\";\r\n\t    var messageContent = {\r\n\t        callId: this.ID,\r\n\t        digit: dtmfDigit\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method startRemoteCameraAction\r\n\t * @description\r\n\t * Starts remote camera action.\r\n\t * Once this method is called remote camera will continuously perform specified action. To stop specified\r\n\t * action {@link TelephonyConversation.stopRemoteCameraAction} needs to be called.\r\n\t *\r\n\t * @param action{String} - Action to will be started. For supported camera actions please see {@link RemoteCameraAction}\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.startRemoteCameraAction = function (action, errorHandler)\r\n\t{\r\n\t    var messageType = \"startFECCAction\";\r\n\t    var messageContent = {\r\n\t        callId: this.ID,\r\n\t        action: action\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent,errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversation\r\n\t * @method stopRemoteCameraAction\r\n\t * @description\r\n\t * Stops remote camera action previously started with {@link TelephonyConversation.startRemoteCameraAction}.\r\n\t *\r\n\t * @param action{String} - Action to will be stopped. For supported camera actions please see {@link RemoteCameraAction}\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversation.prototype.stopRemoteCameraAction = function (action, errorHandler)\r\n\t{\r\n\t    var messageType = \"stopFECCAction\";\r\n\t    var messageContent = {\r\n\t        callId: this.ID,\r\n\t        action: action\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n\t};\r\n\t\r\n\texports.TelephonyConversation = TelephonyConversation;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * @class TelephonyConversationStates\r\n\t * @static\r\n\t *\r\n\t * @description\r\n\t * Represents different conversation states that can be present or not.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction TelephonyConversationStates(conversation)\r\n\t{\r\n\t    this.isAudioMuted = conversation.audioMuted;\r\n\t    this.isVideoMuted = conversation.videoMuted;\r\n\t    this.isLocalSharing = conversation.isLocalSharing;\r\n\t    this.isRemoteSharing = conversation.isRemoteSharing;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @property isAudioMuted\r\n\t * @description\r\n\t * Indicates if audio is muted or not.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationStates.prototype.isAudioMuted = false;\r\n\t\r\n\t/**\r\n\t * @property isVideoMuted\r\n\t * @description\r\n\t * Indicates if video is muted or not.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationStates.prototype.isVideoMuted = false;\r\n\t\r\n\t/**\r\n\t * @property isLocalSharing\r\n\t * @description\r\n\t * Indicates if screen is shared or not.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationStates.prototype.isLocalSharing = false;\r\n\t\r\n\t/**\r\n\t * @property isRemoteSharing\r\n\t * @description\r\n\t * Indicates if screen is shared by remote participant or not.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationStates.prototype.isRemoteSharing = false;\r\n\t\r\n\t\r\n\tmodule.exports.TelephonyConversationStates = TelephonyConversationStates;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * @class TelephonyConversationCapabilities\r\n\t * @static\r\n\t * @description\r\n\t * List of capabilities that telephony conversation can perform.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction TelephonyConversationCapabilities(capabilities)\r\n\t{\r\n\t    this.canAnswer              = capabilities.canAnswerCall;\r\n\t    this.canEnd                 = capabilities.canEndCall;\r\n\t    this.canReject              = capabilities.canRejectCall;\r\n\t    this.canHold                = capabilities.canHold;\r\n\t    this.canResume              = capabilities.canResume;\r\n\t    this.canMerge               = capabilities.canJoinAcrossLine;\r\n\t    this.canTransfer            = capabilities.canDirectTransfer;\r\n\t    this.canMuteAudio           = capabilities.canMuteAudio;\r\n\t    this.canUnmuteAudio         = capabilities.canUnmuteAudio;\r\n\t    this.canMuteVideo           = capabilities.canMuteVideo;\r\n\t    this.canUnmuteVideo         = capabilities.canUnmuteVideo;\r\n\t    this.canStartScreenShare    = capabilities.canRequestShare;\r\n\t    this.canStopScreenShare     = capabilities.canReleaseShare;\r\n\t    this.canSendDTMF            = capabilities.canSendDigit;\r\n\t    this.canControlRemoteCamera = capabilities.canFarEndCameraControl;\r\n\t    this.canCameraTiltUp        = capabilities.canTiltUp;\r\n\t    this.canCameraTiltDown      = capabilities.canTiltDown;\r\n\t    this.canCameraPanLeft       = capabilities.canPanLeft;\r\n\t    this.canCameraPanRight      = capabilities.canPanRight;\r\n\t    this.canCameraZoomIn        = capabilities.canZoomIn;\r\n\t    this.canCameraZoomOut       = capabilities.canZoomOut;\r\n\t    this.canUpdateVideo = capabilities.canUpdateVideoCapability;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canAnswer\r\n\t * @description\r\n\t * If true telephony conversation can be answered;\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canAnswer = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canEnd\r\n\t * @description\r\n\t * If true telephony conversation can be ended.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canEnd = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canReject\r\n\t * @description\r\n\t * If true telephony conversation can be rejected (Immediate Divert).\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canReject = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canHold\r\n\t * @description\r\n\t * If true telephony conversation can be put on hold.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canHold = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canResume\r\n\t * @description\r\n\t * If true telephony conversation previously put on hold can be resumed.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canResume = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canMerge\r\n\t * @description\r\n\t * If true telephony conversation can be merged with another one and form a conference conversation.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canMerge = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canTransfer\r\n\t * @description\r\n\t * If true telephony conversation can be transferred to another number.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canTransfer = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canMuteAudio\r\n\t * @description\r\n\t * If true telephony conversation's audio can be muted.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canMuteAudio = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canUnmuteAudio\r\n\t * @description\r\n\t * If true telephony conversation's audio can be unmuted.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canUnmuteAudio = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canMuteVideo\r\n\t * @description\r\n\t * If true telephony conversation's video can be muted.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canMuteVideo = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canUnmuteVideo\r\n\t * @description\r\n\t * If true telephony conversation's video can be unmuted.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canUnmuteVideo = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canUpdateVideo\r\n\t * @description\r\n\t * If true telephony conversation's video can be started or stopped. This capability is\r\n\t * used in combination with [canStartVideo]{@link TelephonyConversationCapabilities#canStartVideo} and\r\n\t * [canStopVideo]{@link TelephonyConversationCapabilities#canStopVideo} capabilities\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canUpdateVideo = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canStartVideo\r\n\t * @description\r\n\t * If true telephony conversation's video can be started.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canStartVideo = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canStopVideo\r\n\t * @description\r\n\t * If true telephony conversation's video can be stopped.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canStopVideo = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canStopScreenShare\r\n\t * @description\r\n\t * If true telephony conversation can stop screen share.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canStopScreenShare = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canStartScreenShare\r\n\t * @description\r\n\t * If true telephony conversation can start screen share.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canStartScreenShare = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canSendDTMF\r\n\t * @description\r\n\t * If true telephony conversation can send DTMF digits.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canSendDTMF = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canControlRemoteCamera\r\n\t * @description\r\n\t * If true remote camera can be controlled.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canControlRemoteCamera = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canCameraTiltUp\r\n\t * @description\r\n\t * If true remote camera can be tilted up.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canCameraTiltUp = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canCameraTiltDown\r\n\t * @description\r\n\t * If true remote camera can be tilted down.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canCameraTiltDown = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canCameraPanLeft\r\n\t * @description\r\n\t * If true remote camera can be panned left.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canCameraPanLeft = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canCameraPanRight\r\n\t * @description\r\n\t * If true remote camera can be panned right.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canCameraPanRight = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canCameraZoomIn\r\n\t * @description\r\n\t * If true remote camera can zoom in.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canCameraZoomIn = false;\r\n\t\r\n\t/**\r\n\t * @memberof TelephonyConversationCapabilities\r\n\t * @member canCameraZoomOut\r\n\t * @description\r\n\t * If true remote camera can zoom out.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tTelephonyConversationCapabilities.prototype.canCameraZoomOut = false;\r\n\t\r\n\tmodule.exports.TelephonyConversationCapabilities = TelephonyConversationCapabilities;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\n\tvar MessageSenderModule = __webpack_require__(7);\n\t\n\tvar cwic = {\n\t    MessageSender : MessageSenderModule.MessageSender\n\t};\n\t\n\t/**\n\t * @class TelephonyDevice\n\t * @classdesc\n\t * Telephony Device represents abstraction of actual phone device.\n\t *\n\t * @description\n\t * This class cannot be instantiated.\n\t *\n\t * @since 11.7.0\n\t */\n\tfunction TelephonyDevice(device)\n\t{\n\t    this.name                 = device.name;\n\t    this.controlMode          = device.controlMode;\n\t    this.description          = device.description;\n\t    this.type                 = device.modelDescription;\n\t    this.lineDirectoryNumbers = device.lineDNs;\n\t    this.activeLine           = device.activeLineNumber;\n\t    this.isSelected           = device.isSelected;\n\t    this.huntGroupState       = device.huntGroupState;\n\t    this.guid                 = device.guid;\n\t}\n\t\n\t/**\n\t * @memberof TelephonyDevice\n\t * @member name\n\t * @description\n\t * Name of telephony device. Reflects the value set on CUCM.\n\t *\n\t * @type {String}\n\t * @since 11.7.0\n\t */\n\tTelephonyDevice.prototype.name = null;\n\t\n\t/**\n\t * @memberof TelephonyDevice\n\t * @member controlMode\n\t * @description\n\t * Mod in which telephony device is controlled: SoftPhone, DeskPhone, RemotePhone\n\t *\n\t * @type {String}\n\t * @since 11.7.0\n\t */\n\tTelephonyDevice.prototype.controlMode = null;\n\t\n\t/**\n\t * @memberof TelephonyDevice\n\t * @member description\n\t * @description\n\t * Telephony device's description. Reflects the value set on CUCM.\n\t * @type {String}\n\t * @since 11.7.0\n\t */\n\tTelephonyDevice.prototype.description = null;\n\t\n\t/**\n\t * @memberof TelephonyDevice\n\t * @member type\n\t * @description\n\t * Telephony device's type. Reflects the value set on CUCM.\n\t * @type {String}\n\t * @since 11.7.0\n\t */\n\tTelephonyDevice.prototype.type = null;\n\t\n\t/**\n\t * @memberof TelephonyDevice\n\t * @member lineDirectoryNumbers\n\t * @description\n\t * Line directory numbers associated with this device. This property is set only when device is connected to CUCM.\n\t * List of available lines reflects the ones set up on CUCM.\n\t *\n\t * @type {Array}\n\t * @since 11.7.0\n\t */\n\tTelephonyDevice.prototype.lineDirectoryNumbers = null;\n\t\n\t/**\n\t * @memberof TelephonyDevice\n\t * @member activeLine\n\t * @description\n\t * Line that is used by telephony device when it is connected to CUCM.\n\t *\n\t * @type {String}\n\t * @since 11.7.0\n\t */\n\tTelephonyDevice.prototype.activeLine = null;\n\t\n\t/**\n\t * @memberof TelephonyDevice\n\t * @member isSelected\n\t * @description\n\t * Tells whether telephony device is connected to CUCM or not.\n\t *\n\t * @type {Boolean}\n\t * @since 11.7.0\n\t */\n\tTelephonyDevice.prototype.isSelected = false;\n\t\n\t/**\n\t * @memberof TelephonyDevice\n\t * @member huntGroupState\n\t * @description\n\t * Telephony device's current hunt group state.\n\t *\n\t * @type {String}\n\t * @since 11.7.0\n\t */\n\tTelephonyDevice.prototype.huntGroupState = null;\n\t\n\t/**\n\t * @memberof TelephonyDevice\n\t * @member guid\n\t * @description\n\t * Telephony device's GUID.\n\t *\n\t * @type {String}\n\t * @since 11.7.0\n\t */\n\tTelephonyDevice.prototype.guid = null;\n\t\n\t/**\n\t * @memberof TelephonyDevice\n\t * @method connect\n\t * @description\n\t * Connect telephony device to CUCM.\n\t *\n\t * @since 11.7.0\n\t */\n\tTelephonyDevice.prototype.connect = function(){};\n\t\n\t/**\n\t * @memberof TelephonyDevice\n\t * @method huntGroupLogin\n\t * @description\n\t * Login telephony device to hunt group.\n\t *\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\n\t * @since 11.7.0\n\t */\n\tTelephonyDevice.prototype.huntGroupLogin = function(errorHandler)\n\t{\n\t    if(this.huntGroupState === \"LoggedOut\")\n\t    {\n\t        var messageType = \"toggleHuntGroupLogin\";\n\t        var messageData = {\n\t            deviceGuid : this.guid\n\t        };\n\t\n\t        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\n\t    }\n\t};\n\t\n\t/**\n\t * @memberof TelephonyDevice\n\t * @method huntGroupLogout\n\t * @description\n\t * Logout telephony device from hunt group.\n\t *\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\n\t * @since 11.7.0\n\t */\n\tTelephonyDevice.prototype.huntGroupLogout = function(errorHandler)\n\t{\n\t    if(this.huntGroupState === \"LoggedIn\")\n\t    {\n\t        var messageType = \"toggleHuntGroupLogin\";\n\t        var messageData = {\n\t            deviceGuid : this.guid\n\t        };\n\t\n\t        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\n\t    }\n\t};\n\t\n\tmodule.exports.TelephonyDevice = TelephonyDevice;\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Required Modules\r\n\tvar TelephonyDeviceModule = __webpack_require__(21);\r\n\t\r\n\t// System Modules\r\n\tvar MessageSenderModule = __webpack_require__(7);\r\n\t\r\n\tvar cwic = {\r\n\t    TelephonyDevice : TelephonyDeviceModule.TelephonyDevice,\r\n\t    MessageSender   : MessageSenderModule.MessageSender\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class SoftPhone\r\n\t * @extends {TelephonyDevice}\r\n\t * @classdesc SoftPhone represents software telephony device.\r\n\t *\r\n\t * @description This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction SoftPhone(device)\r\n\t{\r\n\t    cwic.TelephonyDevice.call(this, device)\r\n\t}\r\n\t\r\n\tSoftPhone.prototype = Object.create(cwic.TelephonyDevice.prototype);\r\n\tSoftPhone.prototype.constructor = SoftPhone;\r\n\t\r\n\t\r\n\t/**\r\n\t * @memberof SoftPhone\r\n\t * @method connect\r\n\t * @description\r\n\t * Connect to and register softphone device with CUCM. If force registration is set to true, and this device is\r\n\t * registered elsewhere, device will first be disconnected then connected again.\r\n\t *\r\n\t * @param isForceRegistration {Boolean} - Flag that tells whether its a force registration or not.\r\n\t * @throw Invalid Number Of Arguments - Thrown if isForceRegistration is not specified.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tSoftPhone.prototype.connect = function(isForceRegistration)\r\n\t{\r\n\t    if(arguments.length !== 1)\r\n\t    {\r\n\t        throw Error(\"Invalid Number of Arguments\");\r\n\t    }\r\n\t\r\n\t    var messageType = \"connect\";\r\n\t    var messageData = {\r\n\t        phoneMode: \"Softphone\",\r\n\t        deviceName: this.name,\r\n\t        lineDN: \"\",\r\n\t        forceRegistration: isForceRegistration\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData);\r\n\t};\r\n\t\r\n\t// Module Exports\r\n\tmodule.exports.SoftPhone = SoftPhone;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Telephony Modules\r\n\tvar TelephonyDeviceModule = __webpack_require__(21);\r\n\t\r\n\t// System Modules\r\n\tvar MessageSenderModule = __webpack_require__(7);\r\n\t\r\n\t\r\n\tvar cwic = {\r\n\t    TelephonyDevice : TelephonyDeviceModule.TelephonyDevice,\r\n\t    MessageSender   : MessageSenderModule.MessageSender\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * @class DeskPhone\r\n\t * @extends {TelephonyDevice}\r\n\t * @classdesc\r\n\t * Deskphone represents physical telephony device. Along with all capabilities of telephony device it can also change\r\n\t * active line.\r\n\t *\r\n\t * @description This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction DeskPhone(device)\r\n\t{\r\n\t    cwic.TelephonyDevice.call(this, device)\r\n\t}\r\n\t\r\n\tDeskPhone.prototype = Object.create(cwic.TelephonyDevice.prototype);\r\n\tDeskPhone.prototype.constructor = DeskPhone;\r\n\t\r\n\t/**\r\n\t * @memberof DeskPhone\r\n\t * @method selectLine\r\n\t * @description\r\n\t * Change active line to a new one.\r\n\t *\r\n\t * @param line {String} - A line that will be selected.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tDeskPhone.prototype.selectLine = function(line)\r\n\t{\r\n\t    var messageType = \"connect\";\r\n\t    var messageData = {\r\n\t        phoneMode: \"Softphone\",\r\n\t        deviceName: this.name,\r\n\t        lineDN: line,\r\n\t        forceRegistration: false\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof DeskPhone\r\n\t * @method connect\r\n\t * @description\r\n\t * Connect to and register deskphone device with CUCM. If force registration is set to true, and this device is\r\n\t * registered elsewhere, device will first be disconnected then connected again.\r\n\t *\r\n\t * @param isForceRegistration {Boolean} - Flag that tells whether its a force registration or not.\r\n\t *\r\n\t * @throw Invalid Number Of Arguments - Thrown if isForceRegistration is not specified.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tDeskPhone.prototype.connect = function(isForceRegistration)\r\n\t{\r\n\t    if(arguments.length !== 1)\r\n\t    {\r\n\t        throw Error(\"Invalid number of arguments\");\r\n\t    }\r\n\t\r\n\t    var messageType = \"connect\";\r\n\t    var messageData = {\r\n\t        phoneMode: \"Softphone\",\r\n\t        deviceName: this.name,\r\n\t        lineDN: \"\",\r\n\t        forceRegistration: isForceRegistration\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData);\r\n\t};\r\n\t\r\n\t// Module Exports\r\n\tmodule.exports.Deskphone = DeskPhone;\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Required Modules\r\n\tvar telephonyDeviceModule = __webpack_require__(21);\r\n\t\r\n\t// System Modules\r\n\tvar MessageSenderModule = __webpack_require__(7);\r\n\t\r\n\tvar cwic = {\r\n\t    TelephonyDevice     : telephonyDeviceModule.TelephonyDevice,\r\n\t    MessageSender       : MessageSenderModule.MessageSender\r\n\t};\r\n\t\r\n\tRemotePhone.prototype = Object.create(cwic.TelephonyDevice.prototype);\r\n\tRemotePhone.prototype.constructor = RemotePhone;\r\n\t\r\n\t/**\r\n\t * @class RemotePhone\r\n\t * @extends {TelephonyDevice}\r\n\t * @classdesc\r\n\t * RemotePhone represents remote device that can be connected to CUCM through \"Extened&Connect\" feature.\r\n\t *\r\n\t * @description\r\n\t * This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction RemotePhone(device)\r\n\t{\r\n\t    cwic.TelephonyDevice.call(this, device);\r\n\t\r\n\t    var m_Number = \"\";\r\n\t\r\n\t    this.getNumber = function()\r\n\t    {\r\n\t        return m_Number;\r\n\t    };\r\n\t\r\n\t    this.setNumber = function(number)\r\n\t    {\r\n\t        m_Number = number;\r\n\t    };\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof RemotePhone\r\n\t * @method connect\r\n\t * @description\r\n\t * Connect to and register deskphone device with CUCM. If force registration is set to true, and this device is\r\n\t * registered elsewhere, device will first be disconnected then connected again.\r\n\t *\r\n\t * @param number (String} - Number that will be associated with this device (Represents remoteDestinationNumber on CUCM).\r\n\t * @param isForceRegistration {Boolean} - Flag that tells whether its a force registration or not.\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Number Of Arguments - Thrown if isForceRegistration is not specified.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tRemotePhone.prototype.connect = function(number, isForceRegistration, errorHandler)\r\n\t{\r\n\t    if(arguments.length !== 2)\r\n\t    {\r\n\t        throw Error(\"Invalid Number of Arguments\");\r\n\t    }\r\n\t\r\n\t    var messageType = \"selectRemoteDestination\";\r\n\t    var messageData = {\r\n\t        deviceName : this.name,\r\n\t        remoteDestinationNumber : number,\r\n\t        forceRegistration : isForceRegistration\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof RemotePhone\r\n\t * @method deleteNumber\r\n\t * @description\r\n\t * Delete remote number used for remote phone. Doing this will also disconnect from and unregister remote phone from\r\n\t * the CUCM.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tRemotePhone.prototype.deleteNumber = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"deleteRemoteDestination\";\r\n\t    var messageData = {};\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t\r\n\t// Module Exports\r\n\tmodule.exports.RemotePhone = RemotePhone;\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Required Modules\r\n\tvar MessageReceiverModule = __webpack_require__(2);\r\n\tvar MessageSenderModule   = __webpack_require__(7);\r\n\tvar LoggerModule          = __webpack_require__(4);\r\n\tvar AuthenticationEnumModule = __webpack_require__(26);\r\n\t\r\n\t\r\n\tvar cwic = {\r\n\t    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n\t    MessageSender   : MessageSenderModule.MessageSender,\r\n\t    Logger          : LoggerModule.Logger,\r\n\t    AuthenticationState : AuthenticationEnumModule.AuthenticationState,\r\n\t    AuthenticationError : AuthenticationEnumModule.AuthenticationError,\r\n\t    AuthenticationStateMap : AuthenticationEnumModule.AuthenticationStateMap,\r\n\t    AuthenticationErrorMap : AuthenticationEnumModule.AuthenticationErrorMap\r\n\t};\r\n\t\r\n\t\r\n\t/**\r\n\t * @class LoginController\r\n\t * @constructor\r\n\t */\r\n\tfunction LoginController()\r\n\t{\r\n\t    var m_EventHandlers = {};\r\n\t    var m_CTIServers    = [];\r\n\t    var m_CCMCIPServers = [];\r\n\t    var m_TFTPServers   = [];\r\n\t    var m_SSORedirectURL = \"\";\r\n\t    this.signInType    = \"Unknown\";\r\n\t\r\n\t    cwic.MessageReceiver.addMessageHandler('lifecyclestatechanged', onLoginStateChanged.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('userprofilecredentialsrequired', onCredentialsRequired.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('userprofileemailaddressrequired', onEmailRequired.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('loggedin', onLoggedIn.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('authenticationresult', onAuthenticationResults.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('ssonavigateto', onSSONavigateRequired);\r\n\t\r\n\t    function onEmailRequired()\r\n\t    {\r\n\t        if(this.signInType == \"Manual\")\r\n\t        {\r\n\t            this.setEmail('dummy@jsdk.com');\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            cwic.Logger.info(\"E-mail address is required.\");\r\n\t            var eventHandler = m_EventHandlers['onEmailRequired'];\r\n\t            if(eventHandler)\r\n\t            {\r\n\t                // TODO Add additional logic here\r\n\t                eventHandler();\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onCredentialsRequired()\r\n\t    {\r\n\t        cwic.Logger.info(\"Credentials are required.\");\r\n\t        var eventHandler = m_EventHandlers['onCredentialsRequired'];\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onLoginStateChanged(content)\r\n\t    {\r\n\t        var lifecycleState = content;\r\n\t        var eventHandler   = null;\r\n\t        var loginState     = \"\";\r\n\t\r\n\t        switch(lifecycleState)\r\n\t        {\r\n\t            case \"SIGNEDOUT\" :\r\n\t            {\r\n\t                eventHandler = m_EventHandlers['onSignedOut'];\r\n\t                loginState = \"Signed Out\";\r\n\t                break;\r\n\t            }\r\n\t            case \"SIGNINGOUT\" :\r\n\t            {\r\n\t                eventHandler = m_EventHandlers['onSigningOut'];\r\n\t                loginState = \"Signing Out\";\r\n\t                break;\r\n\t            }\r\n\t            case \"SIGNEDIN\" :\r\n\t            {\r\n\t                eventHandler = m_EventHandlers['onSignedIn'];\r\n\t                loginState = \"Signed In\";\r\n\t                break;\r\n\t            }\r\n\t            case \"SIGNINGIN\" :\r\n\t            {\r\n\t                eventHandler = m_EventHandlers['onSigningIn'];\r\n\t                loginState = \"Signing In\";\r\n\t                break;\r\n\t            }\r\n\t            case \"DISCOVERING\" :\r\n\t            {\r\n\t                eventHandler = m_EventHandlers['onServiceDiscovering'];\r\n\t                loginState = \"Discovering Services\";\r\n\t                break;\r\n\t            }\r\n\t            case \"RESETTING\" :\r\n\t            {\r\n\t                eventHandler = m_EventHandlers['onDataResetting'];\r\n\t                loginState = \"Resetting User Data\";\r\n\t                break;\r\n\t            }\r\n\t        }\r\n\t\r\n\t        cwic.Logger.info(\"Login state has changed to: \" + loginState + \".\");\r\n\t\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onAuthenticationResults(content)\r\n\t    {\r\n\t        var authenticationResult = content.result;\r\n\t\r\n\t        var eventParam  = \"\";\r\n\t        var eventHandler = null;\r\n\t\r\n\t        switch(authenticationResult)\r\n\t        {\r\n\t            case \"\":\r\n\t            case \"eNoError\":\r\n\t                eventHandler = m_EventHandlers[\"onAuthenticationStateChanged\"];\r\n\t                eventParam = cwic.AuthenticationStateMap[content.status];\r\n\t                cwic.Logger.info(\"Authentication state has changed to: \" + eventParam);\r\n\t                break;\r\n\t            case \"eFailed\":\r\n\t                eventHandler = m_EventHandlers[\"onAuthenticationFailed\"];\r\n\t                eventParam = cwic.AuthenticationErrorMap[content.status];\r\n\t                cwic.Logger.warning(\"Authentication failed! Reason: \" + eventParam);\r\n\t                break;\r\n\t        }\r\n\t\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler(eventParam);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onLoggedIn()\r\n\t    {\r\n\t        var eventHandler = m_EventHandlers['onLoggedIn'];\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onSSONavigateRequired(content)\r\n\t    {\r\n\t        cwic.Logger.info(\"SSO Navigation required.\");\r\n\t        var eventHandler = m_EventHandlers['onSSONavigationRequired'];\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            // Not a valid URL for sdk client that is received from JCF.\r\n\t            // We need to replace client_id parameter in SSOUrl with a valid client ID.\r\n\t            var SSOUrl = content;\r\n\t\r\n\t            // Regex for finding client id.\r\n\t            var regex = new RegExp(\"client_id=[A-Za-z0-9]*\");\r\n\t\r\n\t            // Valid client id for SDK client.\r\n\t            var SSOClientID = 'C69908c4f345729af0a23cdfff1d255272de942193e7d39171ddd307bc488d7a1';\r\n\t\r\n\t            var url = SSOUrl.replace(regex, \"client_id=\" + SSOClientID);\r\n\t\r\n\t            if(m_SSORedirectURL !== \"\")\r\n\t            {\r\n\t                url += \"&redirect_uri=\" + encodeURIComponent(m_SSORedirectURL);\r\n\t            }\r\n\t\r\n\t            eventHandler(url);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @memberof LoginController\r\n\t     * @method addEventHandler\r\n\t     * @description Add handler function for Login Controller's event.\r\n\t     *\r\n\t     * @param eventName {String} - Name of the event.\r\n\t     * @param eventHandler {Function} - Function that will be called when event is fired.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.addEventHandler = function(eventName, eventHandler)\r\n\t    {\r\n\t        m_EventHandlers[eventName] = eventHandler;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof LoginController\r\n\t     * @method removeEventHandler\r\n\t     * @description Remove handler function for Login Controller's event.\r\n\t     *\r\n\t     * @param eventName {String} - Name of the event for which handler will be removed.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.removeEventHandler = function(eventName)\r\n\t    {\r\n\t        delete m_EventHandlers[eventName];\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof LoginController\r\n\t     * @method setSSORedirectURL\r\n\t     * @description\r\n\t     * Set URL that will be used as a redirection once a successful authentication has been performed with\r\n\t     * identity provider.\r\n\t     *\r\n\t     * @param redirectURL {String} - URL that will be set.\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.setSSORedirectURL = function(redirectURL)\r\n\t    {\r\n\t        m_SSORedirectURL = redirectURL;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof LoginController\r\n\t     * @method setCTIServers\r\n\t     * @description\r\n\t     * Set up to a maximum of 3 CTI servers.\r\n\t     *\r\n\t     * @param CTIServers {Array} - List of CTI servers to be set\r\n\t     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t     *\r\n\t     * @throw Invalid Object - Thrown if CTIServers is not an array.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.setCTIServers = function(CTIServers, errorHandler)\r\n\t    {\r\n\t        if(!(CTIServers instanceof Array))\r\n\t        {\r\n\t            throw Error(\"Invaild Object\");\r\n\t        }\r\n\t        if(CTIServers.length > 3)\r\n\t        {\r\n\t            throw \"Server List Size Exceeds Maximum Value.\"\r\n\t        }\r\n\t\r\n\t        m_CTIServers = CTIServers;\r\n\t\r\n\t        var messageType = \"setProperty\";\r\n\t        var messageData = {CtiAddressList : CTIServers};\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof LoginController\r\n\t     * @method setTFTPServers\r\n\t     * @description\r\n\t     * Set up to a maximum of 3 TFTP servers.\r\n\t     *\r\n\t     * @param TFTPServers {Array} - List of TFTP servers to be set\r\n\t     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t     *\r\n\t     * @throw Invalid Object - Thrown if TFTPServers is not an array.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.setTFTPServers = function(TFTPServers, errorHandler)\r\n\t    {\r\n\t        if(!(TFTPServers instanceof Array))\r\n\t        {\r\n\t            throw Error(\"Invaild Object\");\r\n\t        }\r\n\t        if(TFTPServers.length > 3)\r\n\t        {\r\n\t            throw \"Server List Size Exceeds Maximum Value.\"\r\n\t        }\r\n\t\r\n\t        m_TFTPServers = TFTPServers;\r\n\t        var messageType = \"setProperty\";\r\n\t        var messageData = {TftpAddressList : TFTPServers};\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof LoginController\r\n\t     * @method setCUCMPServers\r\n\t     * @description\r\n\t     * Set up to a maximum of 3 CUCM servers.\r\n\t     *\r\n\t     * @param CUCMServers {Array} - List of CUCM servers to be set\r\n\t     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t     *\r\n\t     * @throw Invalid Object - Thrown if CUCMServers is not an array.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.setCUCMServers = function (CUCMServers, errorHandler)\r\n\t    {\r\n\t        if(!(CUCMServers instanceof Array))\r\n\t        {\r\n\t            throw Error(\"Invaild Object\");\r\n\t        }\r\n\t        if(CUCMServers.length > 3)\r\n\t        {\r\n\t            throw \"Server List Size Exceeds Maximum Value.\"\r\n\t        }\r\n\t\r\n\t        m_CCMCIPServers = CUCMServers;\r\n\t        var messageType = \"setProperty\";\r\n\t        var messageData = {CcmcipAddressList : CUCMServers};\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t    };\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof LoginController\r\n\t * @method signIn\r\n\t * @description\r\n\t * Performs manual sign in. In order for sign in to be successful credentials and servers needs to be setup properly.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tLoginController.prototype.signIn = function(errorHandler)\r\n\t{\r\n\t    this.signInType = \"Manual\";\r\n\t\r\n\t    var messageType = \"startSignIn\";\r\n\t    var messageData = {\r\n\t        manualSettings : true\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof LoginController\r\n\t * @method signOut\r\n\t * @description\r\n\t * Perform sign out.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tLoginController.prototype.signOut = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"logout\";\r\n\t    var messageData = {};\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof LoginController\r\n\t * @method startDiscovery\r\n\t * @description\r\n\t * Start service discovery lifecycle.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tLoginController.prototype.startDiscovery = function(errorHandler)\r\n\t{\r\n\t    this.signInType = \"Discovery\";\r\n\t    var messageType = \"startSignIn\";\r\n\t    var messageData = {\r\n\t        manualSettings : false\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof LoginController\r\n\t * @method setEmail\r\n\t * @description\r\n\t * Set email address that will be used for service discovery. Should be called when \"onEmailRequired\" event is fired.\r\n\t *\r\n\t * @param email {String} - E-mail address to be set.\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tLoginController.prototype.setEmail = function(email, errorHandler)\r\n\t{\r\n\t    var messageType = \"setUserProfileEmailAddress\";\r\n\t    var messageData = {\r\n\t        email : email\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof LoginController\r\n\t * @method setCredentials\r\n\t * @description\r\n\t * Set credentials that will be used in login process. Should be called when \"onCredentialsRequired\" event is fired.\r\n\t *\r\n\t * @param username {String} - Username to be set.\r\n\t * @param password {String} - Password to be set.\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tLoginController.prototype.setCredentials = function(username, password, errorHandler)\r\n\t{\r\n\t    var messageType = \"setUserCredentials\";\r\n\t    var messageData = {\r\n\t        username: username,\r\n\t        password: password\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof LoginController\r\n\t * @method resetUserData\r\n\t * @description\r\n\t * Erases all user specific data that was cached in add-on.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tLoginController.prototype.resetUserData = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"resetData\";\r\n\t    var messageData = {};\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof LoginController\r\n\t * @method setSSOTokenUri\r\n\t * @description\r\n\t * Set SSO token uri that was retrieved from identity provided.\r\n\t *\r\n\t * @param uri {String} - Token uri that will be set.\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tLoginController.prototype.setSSOTokenURI = function(uri, errorHandler)\r\n\t{\r\n\t    var messageType = \"ssoNavigationCompleted\";\r\n\t    var messageData = {\r\n\t        result: 200,\r\n\t        url: uri,\r\n\t        document: ''\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof LoginController\r\n\t * @method cancelSSO\r\n\t * @description\r\n\t * Cancel ongoing SSO procedure.\r\n\t *\r\n\t * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t * @since 11.7.0\r\n\t */\r\n\tLoginController.prototype.cancelSSO = function(errorHandler)\r\n\t{\r\n\t    var messageType = \"cancelSingleSignOn\";\r\n\t    var messageData = {};\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\tmodule.exports.LoginController = new LoginController();\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * @enum AuthenticationState {Enum}\r\n\t * @description\r\n\t * Different authentication states that can occur when trying to connect to CUCM.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tvar AuthenticationState = {\r\n\t    /**\r\n\t     * Initial state before authentication attempt has occurred.\r\n\t     * @type {String}\r\n\t     */\r\n\t    NotAuthenticated : \"NotAuthenticated\",\r\n\t\r\n\t    /**\r\n\t     * Authentication with CUCM is in progress.\r\n\t     * @type {String}\r\n\t     */\r\n\t    InProgress       : \"InProgress\",\r\n\t\r\n\t    /**\r\n\t     * Successfully authenticated with CUCM.\r\n\t     * @type {String}\r\n\t     */\r\n\t    Authenticated    : \"Authenticated\"\r\n\t};\r\n\t\r\n\t/**\r\n\t * @enum AuthenticationError {Enum}\r\n\t * @description\r\n\t * Different authentication errors that can occur during authentication process with CUCM.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tvar AuthenticationError = {\r\n\t    /**\r\n\t     *  The last attempt at authentication with CUCM failed because of invalid configuration. The CCMIP server\r\n\t     *  was incorrect.\r\n\t     *  @type {String}\r\n\t     */\r\n\t    InvalidConfig             : \"InvalidConfiguration\",\r\n\t\r\n\t    /**\r\n\t     * The last attempt at authentication with CUCM failed because the users credentials are incorrect.\r\n\t     * @type {String}\r\n\t     */\r\n\t    InvalidCredentials        : \"InvalidCredentials\",\r\n\t\r\n\t    /**\r\n\t     * The last attempt at authentication with CUCM failed because the authentication token was invalid.\r\n\t     * @type {String}\r\n\t     */\r\n\t    InvalidToken              : \"InvalidToken\",\r\n\t\r\n\t    /**\r\n\t     * The last attempt at authentication with CUCM failed because the user rejected an invalid server certificate.\r\n\t     * @type {String}\r\n\t     */\r\n\t    ServerCertificateRejected : \"ServerCertificateRejected\",\r\n\t\r\n\t    /**\r\n\t     * The last attempt at authentication with CUCM failed because of an error with the client's certificate.\r\n\t     * @type {String}\r\n\t     */\r\n\t    ClientCertificateError    : \"ClientCertificateError\",\r\n\t\r\n\t    /**\r\n\t     * The last attempt at authentication with CUCM failed because no credentials are configured.\r\n\t     * @type {String}\r\n\t     */\r\n\t    NoCredentialsConfigured   : \"NoCredentialsConfigured\",\r\n\t\r\n\t    /**\r\n\t     * Unable to connect to CUCM.\r\n\t     * @type {String}\r\n\t     */\r\n\t    CouldNotConnect           : \"CouldNotConnect\",\r\n\t\r\n\t    /**\r\n\t     * The last attempt at authentication failed.\r\n\t     * @type {String}\r\n\t     */\r\n\t    Failed                    : \"Failed\",\r\n\t\r\n\t    /**\r\n\t     * TLS/SSL Connection Error.\r\n\t     * @type {String}\r\n\t     */\r\n\t    SSLConnectError           : \"SSLConnectionError\",\r\n\t\r\n\t    /**\r\n\t     * Unknown authentication failure.\r\n\t     * @type {String}\r\n\t     */\r\n\t    Unknown                   : \"Unknown\"\r\n\t};\r\n\t\r\n\tvar AuthenticationStateMap  = {\r\n\t    eAuthenticated   : \"Authenticated\",\r\n\t    eInProgress      : \"InProgress\",\r\n\t    eNotAuthenticated: \"NotAuthenticated\"\r\n\t};\r\n\t\r\n\tvar AuthenticationErrorMap = {\r\n\t    eNoServersConfigured       : \"InvalidConfiguration\",\r\n\t    eCredentialsRejected       : \"InvalidCredentials\",\r\n\t    eInvalidToken              : \"InvalidToken\",\r\n\t    eServerCertificateRejected : \"ServerCertificateRejected\",\r\n\t    eClientCertificateError    : \"ClientCertificateError\",\r\n\t    eNoCredentialsConfigured   : \"NoCredentialsConfigured\",\r\n\t    eCouldNotConnect           : \"CouldNotConnect\",\r\n\t    eFailed                    : \"Failed\",\r\n\t    eSSLConnectError           : \"SSLConnectionError\",\r\n\t    \"\"                         : \"Unknown\"\r\n\t};\r\n\t\r\n\tmodule.exports.AuthenticationState = AuthenticationState;\r\n\tmodule.exports.AuthenticationError = AuthenticationError;\r\n\tmodule.exports.AuthenticationStateMap = AuthenticationStateMap;\r\n\tmodule.exports.AuthenticationErrorMap = AuthenticationErrorMap;\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Required Modules\r\n\tvar MessageReceiverModule  = __webpack_require__(2);\r\n\tvar MessageSenderModule    = __webpack_require__(7);\r\n\tvar ChromeExtensionModule  = __webpack_require__(28);\r\n\tvar FirefoxExtensionModule = __webpack_require__(30);\r\n\tvar NPAPIPluginModule      = __webpack_require__(31);\r\n\tvar ActiveXControlModule   = __webpack_require__(32);\r\n\tvar VersionModule          = __webpack_require__(33);\r\n\tvar LoggerModule           = __webpack_require__(4);\r\n\tvar UtilitesModule         = __webpack_require__(5);\r\n\tvar SystemControllerCapabilitiesModule = __webpack_require__(34);\r\n\t\r\n\tvar cwic = {\r\n\t    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n\t    MessageSender   : MessageSenderModule.MessageSender,\r\n\t\r\n\t    ChromeExtension  : ChromeExtensionModule.ChromeExtension,\r\n\t    FirefoxExtension : FirefoxExtensionModule.FirefoxExtension,\r\n\t    NPAPIPlugin      : NPAPIPluginModule.NPAPIPlugin,\r\n\t    ActiveXControl   : ActiveXControlModule.ActiveXControl,\r\n\t\r\n\t    Logger  : LoggerModule.Logger,\r\n\t    Utilities : UtilitesModule.Utilities,\r\n\t    Version : VersionModule.Version,\r\n\t    version : VersionModule.cwicVersion,\r\n\t\r\n\t    SystemControllerCapabilities : SystemControllerCapabilitiesModule.SystemControllerCapabilities\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class SystemController\r\n\t * @classdesc\r\n\t * Controller responsible for initializing CWIC, and notifying of various system events. CWIC global capabilities can\r\n\t * also be retrieved once the CWIC has been initialized.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction SystemController()\r\n\t{\r\n\t    var m_EventHandlers = {};\r\n\t    var m_Capabilities  = {};\r\n\t    var m_ClientID      = cwic.Utilities.generateUniqueId();\r\n\t    var m_Version       = {};\r\n\t    var m_Plugin        = null;\r\n\t    this.cwicVersion = \"REL.MAJ.MIN.BUILD\";\r\n\t    this.addonVersion = \"Unknown\";\r\n\t    this.systemRelease = \"Unknown\";\r\n\t    this.platformOS = \"Unknown\";\r\n\t\r\n\t    cwic.MessageReceiver.addMessageHandler('init', onCwicInitialized.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('userauthorized', onUserAuthorized.bind(this));\r\n\t    cwic.MessageReceiver.addMessageHandler('addonConnectionLost', onAddonConnectionLost.bind(this));\r\n\t\r\n\t    function onCwicInitialized(content)\r\n\t    {\r\n\t        m_Capabilities = new cwic.SystemControllerCapabilities(content.capabilities);\r\n\t        this.addonVersion = content.version.plugin;\r\n\t        this.systemRelease = content.version.system_release;\r\n\t        this.platformOS = content.system.platform;\r\n\t\r\n\t        if(this.addonVersion !== this.cwicVersion)\r\n\t        {\r\n\t            cwic.Logger.warning(\"Cwic version and add-on version miss-match\");\r\n\t        }\r\n\t\r\n\t        cwic.Logger.info(\"System Initialized.\");\r\n\t\r\n\t        if(m_EventHandlers['onInitialized'])\r\n\t        {\r\n\t            var onInitializedCallback = m_EventHandlers['onInitialized'];\r\n\t            onInitializedCallback();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onUserAuthorized(content)\r\n\t    {\r\n\t        var eventName;\r\n\t        if(content === true)\r\n\t        {\r\n\t            eventName = 'onUserAuthorized';\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            eventName = 'onUserAuthorizationRejected';\r\n\t        }\r\n\t\r\n\t        var eventHandler = m_EventHandlers[eventName];\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function onAddonConnectionLost()\r\n\t    {\r\n\t        var eventHandler = m_EventHandlers['onAddonConnectionLost'];\r\n\t        m_Plugin.uninitialize();\r\n\t        m_Plugin = null;\r\n\t\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            eventHandler();\r\n\t        }\r\n\t    }\r\n\t\r\n\t    function initialize(errorHandler)\r\n\t    {\r\n\t        cwic.Logger.info(\"System Initializing.\");\r\n\t\r\n\t        var browserType = cwic.Utilities.getBrowserType();\r\n\t\r\n\t        switch(browserType)\r\n\t        {\r\n\t            case \"Chrome\":\r\n\t                m_Plugin = new cwic.ChromeExtension();\r\n\t                break;\r\n\t            case \"Firefox\":\r\n\t                if(cwic.Utilities.getBrowserVersion() >= 50)\r\n\t                {\r\n\t                    m_Plugin = new cwic.FirefoxExtension(m_ClientID);\r\n\t                }\r\n\t                else\r\n\t                {\r\n\t                    m_Plugin = new cwic.NPAPIPlugin(m_ClientID);\r\n\t                }\r\n\t                break;\r\n\t            case \"Safari\":\r\n\t                m_Plugin = new cwic.NPAPIPlugin(m_ClientID);\r\n\t                break;\r\n\t            case \"InternetExplorer\":\r\n\t                m_Plugin = new cwic.ActiveXControl(m_ClientID);\r\n\t                break;\r\n\t            default:\r\n\t                throw Error(\"Unsupported Browser\");\r\n\t        }\r\n\t        cwic.Logger.info(\"Detected \" + browserType + \" browser.\");\r\n\t\r\n\t        m_Plugin.onInitializeError = errorHandler;\r\n\t        m_Plugin.initialize();\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @memberof SystemController\r\n\t     * @method getInstanceID\r\n\t     * @description\r\n\t     * Retrieve unique instance ID of CWIC library.\r\n\t     * @returns {String} Unique instance id.\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.getInstanceID = function ()\r\n\t    {\r\n\t        return m_ClientID;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof SystemController\r\n\t     * @method getCapabilities\r\n\t     * @description\r\n\t     * Retrieve CWIC capability list.\r\n\t     * @returns {SystemControllerCapabilities}.\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.getCapabilities = function()\r\n\t    {\r\n\t        return m_Capabilities;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof SystemController\r\n\t     * @method getVersion\r\n\t     * @description\r\n\t     * Retrieve CWIC library version.\r\n\t     *\r\n\t     * @returns {String}.\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.getVersion = function()\r\n\t    {\r\n\t        return m_Version;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof SystemController\r\n\t     * @method setLoggingLevel\r\n\t     * @description\r\n\t     * Set new logging level. Possible Values:\r\n\t     * <br>\r\n\t     * <ul>\r\n\t     *     <li> 0 - Debug, this logging level is used for debugging purposes of JSDK team.\r\n\t     *     <li> 1 - Info, default value for log level. Logs main CWIC events.\r\n\t     *     <li> 2 - Warning, logs errors that are not critical (the ones that could be expected of improper use of API)\r\n\t     *     <li> 3 - Error, logs critical errors\r\n\t     * </ul>\r\n\t     *\r\n\t     * @param level {Number} - Logging level that will be set.\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.setLoggingLevel = function(level)\r\n\t    {\r\n\t        cwic.Logger.logLevel = level;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof SystemController\r\n\t     * @method addEventHandler\r\n\t     * @description Add handler function for System Controller's event.\r\n\t     *\r\n\t     * @param eventName {String} - Name of the event.\r\n\t     * @param handler {Function} - Function that will be called when event is fired.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.addEventHandler = function(eventName, handlerFunction)\r\n\t    {\r\n\t        m_EventHandlers[eventName] = handlerFunction;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof SystemController\r\n\t     * @method removeEventHandler\r\n\t     *\r\n\t     * @description Remove handler function for System Controller's event.\r\n\t     *\r\n\t     * @param eventName {String} - Name of the event.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.removeEventHandler = function(eventName)\r\n\t    {\r\n\t        delete m_EventHandlers[eventName];\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof SystemController\r\n\t     * @method initialize\r\n\t     *\r\n\t     * @description\r\n\t     * Initializes CWIC library. Initializes NPAPI Plugin (Internet Explorer, Safara, Mozzila Firefox) or Chrome Plugin\r\n\t     * (Google Chrome). In order to use any other API call from library CWIC needs to be initialized first.\r\n\t     *\r\n\t     * @throw Unsupported Browser - Thrown if initialize is called in unsupported browser.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.initialize = function ()\r\n\t    {\r\n\t        if(document.hidden)\r\n\t        {\r\n\t            function onDocumentShown()\r\n\t            {\r\n\t                if(!document.hidden)\r\n\t                {\r\n\t                    initialize();\r\n\t                    document.removeEventListener('visibilitychange', onDocumentShown);\r\n\t                }\r\n\t            }\r\n\t\r\n\t            document.addEventListener('visibilitychange', onDocumentShown);\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            initialize(m_EventHandlers['onInitializationError']);\r\n\t        }\r\n\t    };\r\n\t}\r\n\t\r\n\tmodule.exports.SystemController = new SystemController();\r\n\t\r\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Required Modules\r\n\tvar ExtensionModule = __webpack_require__(29);\r\n\tvar MessageSenderModule = __webpack_require__(7);\r\n\tvar MessageReceiverModule = __webpack_require__(2);\r\n\tvar LoggerModule = __webpack_require__(4);\r\n\t\r\n\tvar cwic = {\r\n\t    Plugin : ExtensionModule.Plugin,\r\n\t    MessageSender : MessageSenderModule.MessageSender,\r\n\t    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n\t    Logger : LoggerModule.Logger\r\n\t};\r\n\t\r\n\tfunction ChromeExtension()\r\n\t{\r\n\t    this.type = \"ChromeExtension\";\r\n\t}\r\n\t\r\n\tChromeExtension.prototype = Object.create(cwic.Plugin.prototype);\r\n\tChromeExtension.prototype.constructor = ChromeExtension;\r\n\t\r\n\tChromeExtension.prototype.initialize = function()\r\n\t{\r\n\t    cwic.Logger.info('Initializing Chrome extension.');\r\n\t    var extension;\r\n\t    var extensionScript = document.createElement('script');\r\n\t  //  var extensionID     = \"ppbllmlcmhfnfflbkbinnhacecaankdh\";\r\n\t\tvar extensionID     = \"mbhnoblcplfcookpoennihpndjobapeo\";\r\n\t  \r\n\t    extensionScript.id      = extensionID;\r\n\t    extensionScript.src     = 'chrome-extension://' + extensionID + '/cwic_plugin.js';\r\n\t    extensionScript.onload  = onExtensionLoaded.bind(this);\r\n\t    extensionScript.onerror = onExtensionError.bind(this);\r\n\t\r\n\t    document.head.appendChild(extensionScript);\r\n\t\r\n\t    function onExtensionLoaded()\r\n\t    {\r\n\t        cwic.Logger.info('Chrome extension has been initialized.');\r\n\t        var extension = cwic_plugin;\r\n\t\r\n\t        this.version = extension.version;\r\n\t        this.sendMessage = extension.sendRequest;\r\n\t\r\n\t        var settings = {\r\n\t            //cwicExtId: 'ppbllmlcmhfnfflbkbinnhacecaankdh',\r\n\t\t\t\tcwicExtId: 'mbhnoblcplfcookpoennihpndjobapeo',\r\n\t            verbose: true\r\n\t        };\r\n\t\r\n\t        cwic.MessageSender.plugin = this;\r\n\t        extension.init(this.onMessageReceived.bind(this), settings);\r\n\t    }\r\n\t\r\n\t    function onExtensionError()\r\n\t    {\r\n\t        cwic.Logger.error('Failed to load Chrome extension! Extension is not installed!');\r\n\t\r\n\t        if(this.onInitializeError)\r\n\t        {\r\n\t            //var url = 'https://chrome.google.com/webstore/detail/cisco-web-communicator/ppbllmlcmhfnfflbkbinnhacecaankdh';\r\n\t\t\t\tvar url = 'https://chrome.google.com/webstore/detail/cisco-web-communicator/mbhnoblcplfcookpoennihpndjobapeo';\r\n\t\r\n\t            var errorInfo = {\r\n\t                errorType : \"ChromeExtension\",\r\n\t                errorData : {\r\n\t                    reason : \"ExtensionNotInstalled\",\r\n\t                    extensionURL : url\r\n\t                }\r\n\t            };\r\n\t\r\n\t            this.onInitializeError(errorInfo);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tChromeExtension.prototype.uninitialize = function()\r\n\t{\r\n\t    //var extensionID     = \"ppbllmlcmhfnfflbkbinnhacecaankdh\";\r\n\t\tvar extensionID     = \"mbhnoblcplfcookpoennihpndjobapeo\";\r\n\t    var extensionScript = document.getElementById(extensionID);\r\n\t\r\n\t    extensionScript.parentNode.removeChild(extensionScript);\r\n\t    cwic.MessageSender.plugin = null;\r\n\t    cwic_plugin = null;\r\n\t};\r\n\t\r\n\tChromeExtension.prototype.sendMessage = function(message)\r\n\t{\r\n\t    var extension = cwic_plugin;\r\n\t\r\n\t    cwic.Logger(\"Sending message: \", message);\r\n\t\r\n\t    extension.sendRequest(message);\r\n\t};\r\n\t\r\n\tChromeExtension.prototype.onMessageReceived = function(message)\r\n\t{\r\n\t    cwic.MessageReceiver.onMessageReceived(message);\r\n\t};\r\n\t\r\n\tmodule.exports.ChromeExtension = ChromeExtension;\r\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports) {\n\n\tfunction Plugin()\r\n\t{\r\n\t}\r\n\t\r\n\tPlugin.prototype.version = null;\r\n\tPlugin.prototype.sendMessage = null;\r\n\tPlugin.prototype.initialize = null;\r\n\tPlugin.prototype.type = \"Unknown\";\r\n\tPlugin.prototype.onInitializeError = null;\r\n\t\r\n\t\r\n\tmodule.exports.Plugin = Plugin;\r\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Required Modules\r\n\tvar ExtensionModule = __webpack_require__(29);\r\n\tvar MessageSenderModule = __webpack_require__(7);\r\n\tvar MessageReceiverModule = __webpack_require__(2);\r\n\tvar LoggerModule = __webpack_require__(4);\r\n\t\r\n\tvar cwic = {\r\n\t    Plugin : ExtensionModule.Plugin,\r\n\t    MessageSender : MessageSenderModule.MessageSender,\r\n\t    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n\t    Logger : LoggerModule.Logger\r\n\t};\r\n\t\r\n\tfunction FirefoxExtension(cwicID)\r\n\t{\r\n\t    this.type = \"FirefoxExtension\";\r\n\t    this.cwicID = cwicID;\r\n\t}\r\n\t\r\n\tFirefoxExtension.prototype = Object.create(cwic.Plugin.prototype);\r\n\tFirefoxExtension.prototype.constructor = FirefoxExtension;\r\n\t\r\n\tFirefoxExtension.prototype.isExtensionInstalled = function()\r\n\t{\r\n\t    var cwicEvent = null;\r\n\t    var extensionIsInstalled = false;\r\n\t\r\n\t    function extensionExistsCallback()\r\n\t    {\r\n\t        extensionIsInstalled = true;\r\n\t    }\r\n\t\r\n\t    window.addEventListener(\"cwic-extension-installed-response\", extensionExistsCallback);\r\n\t\r\n\t    cwicEvent = new CustomEvent('cwic-extension-installed', {detail : \"\"});\r\n\t    window.dispatchEvent(cwicEvent);\r\n\t\r\n\t    window.removeEventListener(\"cwic-extension-installed-response\", extensionExistsCallback);\r\n\t\r\n\t    return extensionIsInstalled;\r\n\t};\r\n\t\r\n\tFirefoxExtension.prototype.initialize = function()\r\n\t{\r\n\t    if(this.isExtensionInstalled())\r\n\t    {\r\n\t        window.addEventListener('cwic-addon-message', this.onMessageReceived.bind(this));\r\n\t        window.dispatchEvent(new CustomEvent('cwic-initialize', {detail : this.cwicID}));\r\n\t\r\n\t        cwic.Logger.info('Firefox extension has been initialized.');\r\n\t\r\n\t        cwic.MessageSender.plugin = this;\r\n\t        cwic.MessageSender.sendMessage('init', {});\r\n\t    }\r\n\t    else\r\n\t    {\r\n\t        cwic.Logger.error('Failed to load Firefox extension! Extension is not installed!');\r\n\t\r\n\t        if(this.onInitializeError)\r\n\t        {\r\n\t            var url = '';\r\n\t\r\n\t            var errorInfo = {\r\n\t                errorType : \"FirefoxExtension\",\r\n\t                errorData : {\r\n\t                    reason : \"ExtensionNotInstalled\",\r\n\t                    extensionURL : url\r\n\t                }\r\n\t            };\r\n\t\r\n\t            this.onInitializeError(errorInfo);\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tFirefoxExtension.prototype.sendMessage = function(message)\r\n\t{\r\n\t    message.client = {\r\n\t        'id': this.cwicID,\r\n\t        'url': window.location.href,\r\n\t        'hostname': window.location.hostname ? window.location.hostname : \"file://\",\r\n\t        'name': window.document.title\r\n\t    };\r\n\t\r\n\t    var cwicMessage = {\r\n\t        ciscoChannelMessage: message\r\n\t    };\r\n\t\r\n\t    var cwicMessageEvent = new CustomEvent('cwic-message', {detail : cwicMessage});\r\n\t    window.dispatchEvent(cwicMessageEvent);\r\n\t};\r\n\t\r\n\tFirefoxExtension.prototype.uninitialize = function()\r\n\t{\r\n\t};\r\n\t\r\n\tFirefoxExtension.prototype.onMessageReceived = function(message)\r\n\t{\r\n\t    //cwic.MessageReceiver.onMessageReceived(message.detail.ciscoChannelMessage);\r\n\t    cwic.MessageReceiver.onMessageReceived(message.detail.ciscoChannelMessage);\r\n\t};\r\n\t\r\n\tmodule.exports.FirefoxExtension = FirefoxExtension;\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Required Modules\r\n\tvar ExtensionModule = __webpack_require__(29);\r\n\tvar MessageReceiverModule = __webpack_require__(2);\r\n\tvar MessageSenderModule = __webpack_require__(7);\r\n\tvar LoggerModule = __webpack_require__(4);\r\n\t\r\n\tvar cwic = {\r\n\t    Plugin : ExtensionModule.Plugin,\r\n\t    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n\t    MessageSender : MessageSenderModule.MessageSender,\r\n\t    Logger : LoggerModule.Logger\r\n\t};\r\n\t\r\n\tfunction NPAPIPlugin(cwicID)\r\n\t{\r\n\t    this.type = \"NPAPIPlugin\";\r\n\t    this.cwicID = cwicID;\r\n\t}\r\n\t\r\n\tNPAPIPlugin.prototype = Object.create(cwic.Plugin.prototype);\r\n\tNPAPIPlugin.prototype.constructor = NPAPIPlugin;\r\n\t\r\n\tNPAPIPlugin.prototype.initialize = function()\r\n\t{\r\n\t    cwic.Logger.info('Initializing NPAPI plugin.');\r\n\t    var pluginName = 'application/x-ciscowebcommunicator';\r\n\t    var pluginMimeType = navigator.mimeTypes[pluginName];\r\n\t\r\n\t    if(!pluginMimeType)\r\n\t    {\r\n\t        cwic.Logger.error(\"Failed to load NPAPI Plugin.\");\r\n\t\r\n\t        if(this.onInitializeError)\r\n\t        {\r\n\t            var errorInfo = {\r\n\t                errorType : \"NPAPIPlugin\",\r\n\t                errorData : {\r\n\t                    reason : \"AddonNotInstalled\"\r\n\t                }\r\n\t            };\r\n\t\r\n\t            this.onInitializeError(errorInfo);\r\n\t        }\r\n\t    }\r\n\t    else\r\n\t    {\r\n\t        cwic.Logger.info('NPAPI plugin has been initialized.');\r\n\t        var plugin = document.createElement('object');\r\n\t\r\n\t\r\n\t        plugin.id   = \"cwic-plugin\";\r\n\t        plugin.type = \"application/x-ciscowebcommunicator\";\r\n\t\r\n\t        document.body.appendChild(plugin);\r\n\t\r\n\t        plugin.addEventListener('addonmessage', this.onMessageReceived.bind(this), false);\r\n\t\r\n\t        plugin.setClientId(this.cwicID);\r\n\t        plugin.setUrl(window.location.href);\r\n\t        plugin.setHostName(window.location.hostname ? window.location.hostname : \"file://\");\r\n\t        plugin.setAppName(window.document.title);\r\n\t\r\n\t        cwic.MessageSender.plugin = this;\r\n\t        cwic.MessageSender.sendMessage('init', {});\r\n\t    }\r\n\t};\r\n\t\r\n\tNPAPIPlugin.prototype.uninitialize = function()\r\n\t{\r\n\t    var pluginID = \"cwic-plugin\";\r\n\t    var plugin   = document.getElementById(pluginID);\r\n\t\r\n\t    document.body.removeChild(plugin)\r\n\t    //plugin.parentNode.removeChild(plugin);\r\n\t    cwic.MessageSender.plugin = null;\r\n\t};\r\n\t\r\n\tNPAPIPlugin.prototype.sendMessage = function(message)\r\n\t{\r\n\t    var npapiPlugin = document.getElementById('cwic-plugin');\r\n\t\r\n\t    message.client = {\r\n\t        'id': this.cwicID,\r\n\t        'url': window.location.href,\r\n\t        'hostname': window.location.hostname ? window.location.hostname : \"file://\",\r\n\t        'name': window.document.title\r\n\t    };\r\n\t\r\n\t    var npapiPluginMessage = {\r\n\t        ciscoChannelMessage: message\r\n\t    };\r\n\t\r\n\t    npapiPlugin.postMessage(JSON.stringify(npapiPluginMessage));\r\n\t};\r\n\t\r\n\tNPAPIPlugin.prototype.onMessageReceived = function(message)\r\n\t{\r\n\t    try\r\n\t    {\r\n\t        var clientMessage = JSON.parse(message);\r\n\t    }\r\n\t    catch (exception)\r\n\t    {\r\n\t        cwic.Logger.error(\"Failed to parse message received from Add-on!\");\r\n\t        return;\r\n\t    }\r\n\t    cwic.MessageReceiver.onMessageReceived(clientMessage.ciscoChannelMessage);\r\n\t};\r\n\t\r\n\tmodule.exports.NPAPIPlugin = NPAPIPlugin;\r\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Required Modules\r\n\tvar ExtensionModule = __webpack_require__(29);\r\n\tvar MessageReceiverModule = __webpack_require__(2);\r\n\tvar MessageSenderModule = __webpack_require__(7);\r\n\tvar LoggerModule = __webpack_require__(4);\r\n\t\r\n\tvar cwic = {\r\n\t    Plugin : ExtensionModule.Plugin,\r\n\t    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n\t    MessageSender : MessageSenderModule.MessageSender,\r\n\t    Logger : LoggerModule.Logger\r\n\t};\r\n\t\r\n\tfunction ActiveXControl(cwicID)\r\n\t{\r\n\t    this.type = \"ActiveXControl\";\r\n\t    this.cwicID = cwicID;\r\n\t}\r\n\t\r\n\tActiveXControl.prototype = Object.create(cwic.Plugin.prototype);\r\n\tActiveXControl.prototype.constructor = ActiveXControl;\r\n\t\r\n\tActiveXControl.prototype.initialize = function()\r\n\t{\r\n\t    if ('ActiveXObject' in window)\r\n\t    {\r\n\t        cwic.Logger.info('Initializing ActiveX control.');\r\n\t        try\r\n\t        {\r\n\t            // Try to load the ActiveX Control, throws exception if it fails.\r\n\t            var dummyActiveXControl = new ActiveXObject('CiscoSystems.CWCVideoCall');\r\n\t\r\n\t            cwic.Logger.info('ActiveX control initialized.');\r\n\t\r\n\t            var plugin = document.createElement('object');\r\n\t\r\n\t            plugin.id   = \"cwic-plugin\";\r\n\t            plugin.type = \"application/x-ciscowebcommunicator\";\r\n\t\r\n\t            document.body.appendChild(plugin);\r\n\t\r\n\t            plugin.attachEvent('onaddonmessage', this.onMessageReceived.bind(this));\r\n\t\r\n\t            plugin.setClientId(this.cwicID);\r\n\t            plugin.setUrl(window.location.href);\r\n\t            plugin.setHostName(window.location.hostname ? window.location.hostname : \"file://\");\r\n\t            plugin.setAppName(window.document.title);\r\n\t\r\n\t            cwic.MessageSender.plugin = this;\r\n\t            cwic.MessageSender.pluginType = \"ActiveXControl\";\r\n\t            cwic.MessageSender.sendMessage('init', {});\r\n\t        }\r\n\t        catch (exception)\r\n\t        {\r\n\t            cwic.Logger.error(\"Failed to load ActiveX control\");\r\n\t\r\n\t            if(this.onInitializeError)\r\n\t            {\r\n\t                var errorInfo = {\r\n\t                    errorType : \"ActiveXControl\",\r\n\t                    errorData : {\r\n\t                        reason : \"AddonNotInstalled\"\r\n\t                    }\r\n\t                };\r\n\t\r\n\t                this.onInitializeError(errorInfo);\r\n\t            }\r\n\t        }\r\n\t    }\r\n\t};\r\n\t\r\n\tActiveXControl.prototype.uninitialize = function()\r\n\t{\r\n\t    var pluginID = \"cwic-plugin\";\r\n\t    var plugin   = document.getElementById(pluginID);\r\n\t\r\n\t    plugin.parentNode.removeChild(plugin);\r\n\t    cwic.MessageSender.plugin = null;\r\n\t};\r\n\t\r\n\tActiveXControl.prototype.sendMessage = function(message)\r\n\t{\r\n\t    var activeXControl = document.getElementById('cwic-plugin');\r\n\t\r\n\t    message.client = {\r\n\t        'id': this.cwicID,\r\n\t        'url': window.location.href,\r\n\t        'hostname': window.location.hostname ? window.location.hostname : \"file://\",\r\n\t        'name': window.document.title\r\n\t    };\r\n\t\r\n\t    var activeXControlMessage = {\r\n\t        ciscoChannelMessage: message\r\n\t    };\r\n\t\r\n\t    activeXControl.postMessage(JSON.stringify(activeXControlMessage));\r\n\t};\r\n\t\r\n\tActiveXControl.prototype.onMessageReceived = function(message)\r\n\t{\r\n\t    try\r\n\t    {\r\n\t        var clientMessage = JSON.parse(message);\r\n\t        cwic.MessageReceiver.onMessageReceived(clientMessage.ciscoChannelMessage);\r\n\t    }\r\n\t    catch (exception)\r\n\t    {\r\n\t        //Add error handlig logic here or log message.\r\n\t    }\r\n\t};\r\n\t\r\n\tmodule.exports.ActiveXControl = ActiveXControl;\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports) {\n\n\tvar version = \"REL.MAJ.MIN.BUILD\";\r\n\t\r\n\tfunction Version(versionString)\r\n\t{\r\n\t    var versionNumbers = versionString.split('.');\r\n\t\r\n\t    this.release = versionNumbers[0];\r\n\t    this.major = versionNumbers[1];\r\n\t    this.minor = versionNumbers[2];\r\n\t    this.build = versionNumbers[3];\r\n\t}\r\n\t\r\n\tVersion.prototype.release = \"\";\r\n\tVersion.prototype.major = \"\";\r\n\tVersion.prototype.minor = \"\";\r\n\tVersion.prototype.build = \"\";\r\n\t\r\n\tmodule.exports.cwicVersion = new Version(version);\r\n\tmodule.exports.Version = Version;\r\n\t\r\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * @class SystemController\r\n\t * @constructor\r\n\t * @description\r\n\t * This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction SystemControllerCapabilities(capabilites)\r\n\t{\r\n\t    this.inBrowserVideoSupport            = capabilites.videoPluginObject;\r\n\t    this.ringtoneOnAllRingersSupport      = capabilites.ringOnAllDevices;\r\n\t    this.ringtoneSupport                  = capabilites.ringtoneSelection;\r\n\t    this.nativeWindowDockingSupport       = capabilites.externalWindowDocking;\r\n\t    this.nativeWindowDockingTargetSupport = capabilites.showingDockingTarget;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof SystemControllerCapabilities\r\n\t * @member inBrowserVideoSupport\r\n\t * @description\r\n\t * Indicates whether in-browser video window support exists or not.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tSystemControllerCapabilities.prototype.inBrowserVideoSupport = false;\r\n\t\r\n\t/**\r\n\t * @memberof SystemControllerCapabilities\r\n\t * @member ringtoneOnAllRingersSupport\r\n\t * @description\r\n\t * Indicates whether ringtone can played on all ringtones or not.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tSystemControllerCapabilities.prototype.ringtoneOnAllRingersSupport = false;\r\n\t\r\n\t/**\r\n\t * @memberof SystemControllerCapabilities\r\n\t * @member ringtoneSupport\r\n\t * @description\r\n\t * Indicates whether ringtone support exists or not.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tSystemControllerCapabilities.prototype.ringtoneSupport = false;\r\n\t\r\n\t/**\r\n\t * @memberof SystemControllerCapabilities\r\n\t * @member nativeWindowDockingSupport\r\n\t * @description\r\n\t * Indicates whether native window can be docked or not.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tSystemControllerCapabilities.prototype.nativeWindowDockingSupport = false;\r\n\t\r\n\t/**\r\n\t * @memberof SystemControllerCapabilities\r\n\t * @member nativeWindowDockingTargetSupport\r\n\t * @description\r\n\t * Indicates whether docking target for native window exists or not.\r\n\t *\r\n\t * @type {boolean}\r\n\t * @since 11.7.0\r\n\t */\r\n\tSystemControllerCapabilities.prototype.nativeWindowDockingTargetSupport = false;\r\n\t\r\n\tmodule.exports.SystemControllerCapabilities = SystemControllerCapabilities;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\r\n\tvar SystemControllerModule = __webpack_require__(27);\r\n\tvar MessageSenderModule    = __webpack_require__(7);\r\n\tvar MessageReceiverModule  = __webpack_require__(2);\r\n\t\r\n\t// Window Modules\r\n\tvar NativePreviewWindowModule = __webpack_require__(36);\r\n\tvar NativeScreenShareWindowModule = __webpack_require__(39);\r\n\tvar NativeConversationWindowModule = __webpack_require__(40);\r\n\tvar ScreenShareWindowModule = __webpack_require__(41);\r\n\tvar ConversationWindowModule = __webpack_require__(43);\r\n\tvar PreviewWindowModule = __webpack_require__(44);\r\n\t\r\n\tvar cwic = {\r\n\t    MessageSender    : MessageSenderModule.MessageSender,\r\n\t    MessageReceiver  : MessageReceiverModule.MessageReceiver,\r\n\t    SystemController : SystemControllerModule.SystemController,\r\n\t\r\n\t    NativeScreenShareWindow  : NativeScreenShareWindowModule.NativeScreenShareWindow,\r\n\t    NativePreviewWindow : NativePreviewWindowModule.NativePreviewWindow,\r\n\t    NativeConversationWindow : NativeConversationWindowModule.NativeConversationWindow,\r\n\t\r\n\t    ScreenShareWindow  : ScreenShareWindowModule.ScreenShareWindow,\r\n\t    ConversationWindow : ConversationWindowModule.ConversationWindow,\r\n\t    PreviewWindow      : PreviewWindowModule.PreviewWindow\r\n\t\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class WindowController\r\n\t * @classdesc\r\n\t * WindowController is responsible for managing native and in-browser video windows.\r\n\t *\r\n\t * @description\r\n\t * This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction WindowController()\r\n\t{\r\n\t    var m_NativePreviewWindow = cwic.NativePreviewWindow;\r\n\t    var m_NativeScreenShareWindow  = cwic.NativeScreenShareWindow;\r\n\t    var m_NativeConversationWindow = cwic.NativeConversationWindow;\r\n\t\r\n\t    cwic.MessageReceiver.addMessageHandler('dockexternalwindowneeded', dockNeeded);\r\n\t\r\n\t    function dockNeeded(content)\r\n\t    {\r\n\t        var dockElement = null;\r\n\t        var dockElementDOMWindow = null;\r\n\t        var nativeWindow = null;\r\n\t        switch(content.windowType)\r\n\t        {\r\n\t            case \"remote\":\r\n\t                dockElement = m_NativeConversationWindow.dockElement;\r\n\t                dockElementDOMWindow = m_NativeConversationWindow.dockElementDOMWindow;\r\n\t                nativeWindow = m_NativeConversationWindow;\r\n\t                break;\r\n\t            case \"preview\":\r\n\t                dockElement = m_NativePreviewWindow.dockElement;\r\n\t                dockElementDOMWindow = m_NativePreviewWindow.dockElementDOMWindow;\r\n\t                nativeWindow = m_NativePreviewWindow;\r\n\t                break;\r\n\t            case \"share\":\r\n\t                dockElement = m_NativeScreenShareWindow.dockElement;\r\n\t                dockElementDOMWindow = m_NativeScreenShareWindow.dockElementDOMWindow;\r\n\t                nativeWindow = m_NativeScreenShareWindow;\r\n\t                break;\r\n\t        }\r\n\t\r\n\t        if(dockElement && dockElementDOMWindow)\r\n\t        {\r\n\t            nativeWindow.dock(dockElement, dockElementDOMWindow);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @memberof WindowController\r\n\t     * @method getNativePreviewWindow\r\n\t     * @description\r\n\t     * Retrieve native window that renders local camera feed.\r\n\t     *\r\n\t     * @returns {NativePreviewWindow}\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.getNativePreviewWindow = function()\r\n\t    {\r\n\t        return m_NativePreviewWindow;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof WindowController\r\n\t     * @method getNativeScreenShareWindow\r\n\t     * @description\r\n\t     * Retrieve native window that renders screen share video.\r\n\t     *\r\n\t     * @returns {NativeScreenShareWindow}\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.getNativeScreenShareWindow = function()\r\n\t    {\r\n\t        return m_NativeScreenShareWindow;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof WindowController\r\n\t     * @method getNativeConversationWindow\r\n\t     * @description\r\n\t     * Retrieve native window that renders conversation video.\r\n\t     *\r\n\t     * @returns {NativeConversationWindow}\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.getNativeConversationWindow = function()\r\n\t    {\r\n\t        return m_NativeConversationWindow;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof WindowController\r\n\t     * @method createVideoWindow\r\n\t     * @description\r\n\t     * Create video window object. In order to create a video window object, HTML element that will\r\n\t     * serve as container must be specified. This HTML element can be a part of the same DOMWindow in which CWIC is\r\n\t     * initialized or it can be a separate child window or IFrame.\r\n\t     *\r\n\t     * @param windowType {WindowType} - Type of video window it will be created.\r\n\t     * @param htmlElement {HTMLElement} - HTML element that will represent window container.\r\n\t     * @param [DOMWindow] {Window} - DOM window that owns HTML element\r\n\t     * @returns {ScreenShareWindow | PreviewWindow | ConversationWindow}\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     *\r\n\t     * @throw Invalud Window Type - Thrown if windowType parameter is invalid.\r\n\t     */\r\n\t    this.createVideoWindow = function(windowType, htmlElement, DOMWindow)\r\n\t    {\r\n\t        var videoWindow;\r\n\t\r\n\t        switch(windowType)\r\n\t        {\r\n\t            case 'ScreenShare':\r\n\t                videoWindow = new cwic.ScreenShareWindow(htmlElement, DOMWindow);\r\n\t                break;\r\n\t            case 'Preview':\r\n\t                videoWindow = new cwic.PreviewWindow(htmlElement, DOMWindow);\r\n\t                break;\r\n\t            case 'Conversation':\r\n\t                videoWindow = new cwic.ConversationWindow(htmlElement, DOMWindow);\r\n\t                break;\r\n\t            default:\r\n\t                throw \"Invalid Window Type\";\r\n\t        }\r\n\t\r\n\t        return videoWindow;\r\n\t    }\r\n\t}\r\n\t\r\n\tmodule.exports.WindowController = new WindowController();\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Required Modules\r\n\tvar NativeVideoWindowModule = __webpack_require__(37);\r\n\t\r\n\tvar cwic = {\r\n\t    NativeVideoWindow : NativeVideoWindowModule.NativeVideoWindow\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class NativePreviewWindow\r\n\t * @extends  NativeVideoWindow\r\n\t * @classdesc\r\n\t * Represents native video window in which camera's feed video is rendered.\r\n\t *\r\n\t * @description\r\n\t * This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction NativePreviewWindow()\r\n\t{\r\n\t    cwic.NativeVideoWindow.call(this, 'preview');\r\n\t}\r\n\t\r\n\tNativePreviewWindow.prototype = Object.create(cwic.NativeVideoWindow.prototype);\r\n\tNativePreviewWindow.prototype.constructor = NativePreviewWindow();\r\n\t\r\n\t\r\n\tmodule.exports.NativePreviewWindow = new NativePreviewWindow();\r\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\r\n\tvar MessageSenderModule    = __webpack_require__(7);\r\n\tvar SystemControllerModule = __webpack_require__(27);\r\n\t\r\n\t// Window Modules\r\n\tvar DockingWindowModule = __webpack_require__(38);\r\n\t\r\n\tvar cwic = {\r\n\t    MessageSender    : MessageSenderModule.MessageSender,\r\n\t    SystemController : SystemControllerModule.SystemController,\r\n\t\r\n\t    PreviewDockingWindow     : DockingWindowModule.PreviewDockingWindow,\r\n\t    RemoteDockingWindow      : DockingWindowModule.RemoteDockingWindow,\r\n\t    ScreenShareDockingWindow : DockingWindowModule.ScreenShareDockingWindow\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class NativeVideoWindow\r\n\t * @classdesc\r\n\t * Native video window represents, native window in which video is rendered. Depending on the browser and operating\r\n\t * system (OS) this window will have different capabilities.\r\n\t * On Google Chrome NPAPI support has been dropped so communication between Cisco Web Communicator and CWIC API is being\r\n\t * handled through Chromes's extensions. Chrome extension doesn't provide a way to render video from native application\r\n\t * directly into browser's web application like NPAPI does. In order to overcome this issue Native Video Window can be\r\n\t * docked/undocked to/from a specified HTML element that will act as a docking target in web browser application. This\r\n\t * way we simulate behaviour as if native video window is part of a HTML document. There are specific limitations with\r\n\t * this approach. Since native window acts as an overlay over specified HTML element, no child HTML elements will be\r\n\t * visible.\r\n\t *\r\n\t * <br>\r\n\t * @description\r\n\t * On Mozzila Firefox, Internet Explorer and Safari u can use regular VideoWindow as NPAPI support for these brwosers\r\n\t * still exits.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction NativeVideoWindow(windowType)\r\n\t{\r\n\t    var m_Type = windowType;\r\n\t\r\n\t    this.dockElement = null;\r\n\t    this.dockElementDOMWindow = null;\r\n\t\r\n\t\r\n\t    function getDockingWindow()\r\n\t    {\r\n\t        var dockingWindow = null;\r\n\t        switch(m_Type)\r\n\t        {\r\n\t            case \"preview\":\r\n\t                dockingWindow = cwic.PreviewDockingWindow;\r\n\t                break;\r\n\t            case \"remote\":\r\n\t                dockingWindow = cwic.RemoteDockingWindow;\r\n\t                break;\r\n\t            case \"share\":\r\n\t                dockingWindow = cwic.ScreenShareDockingWindow;\r\n\t                break;\r\n\t        }\r\n\t\r\n\t        return dockingWindow;\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @memberof NativeVideoWindow\r\n\t     * @method hide\r\n\t     * @description\r\n\t     * Hide native video window.\r\n\t     *\r\n\t     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.hide = function(errorHandler)\r\n\t    {\r\n\t        var messageType = 'hideExternalWindow';\r\n\t        var messageData = {\r\n\t            windowType : m_Type\r\n\t        };\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof NativeVideoWindow\r\n\t     * @method show\r\n\t     * @description\r\n\t     * Show native video window.\r\n\t     *\r\n\t     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.show = function(errorHandler)\r\n\t    {\r\n\t        var messageType;\r\n\t\r\n\t        if(m_Type === 'preview' || m_Type === 'share')\r\n\t        {\r\n\t            messageType = 'showPreviewInExternalWindow';\r\n\t        }\r\n\t        else\r\n\t        {\r\n\t            messageType = \"showExternalWindow\";\r\n\t        }\r\n\t\r\n\t        var messageData = {\r\n\t            windowType : m_Type\r\n\t        };\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof NativeVideoWindow\r\n\t     * @method showAlwaysOnTop\r\n\t     * @description\r\n\t     * Set native video window to be shown always on top of Z-order.\r\n\t     *\r\n\t     * @param isAlwaysOnTop {Boolean}\r\n\t     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.showAlwaysOnTop = function(isAlwaysOnTop, errorHandler)\r\n\t    {\r\n\t        var messageType = 'setExternalWindowAlwaysOnTop';\r\n\t        var messageData = {\r\n\t            alwaysOnTop: isAlwaysOnTop,\r\n\t            windowType: m_Type\r\n\t        };\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof NativeVideoWindow\r\n\t     * @method setTitle\r\n\t     * @description\r\n\t     * Set native video window's title.\r\n\t     *\r\n\t     * @param title {String} - Title that will be set\r\n\t     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.setTitle = function(title, errorHandler)\r\n\t    {\r\n\t        var messageType = 'setExternalWindowTitle';\r\n\t        var messageData = {\r\n\t            title : title,\r\n\t            windowType : m_Type\r\n\t        };\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof NativeVideoWindow\r\n\t     * @method setDockTargetColor\r\n\t     * @description\r\n\t     * Set the color of docking target. MAC OS only.\r\n\t     *\r\n\t     * @param red {Number} - Value of the red color 0-255\r\n\t     * @param green {Number} - Value of the green color 0-255\r\n\t     * @param blue {Number} - Value of the blue color 0-255\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     * @note Depricated as of 11.8.0 - Calling this function will have no effect.\r\n\t     *\r\n\t     * @throw No Capability - Thrown if there is no support for docking targer color.\r\n\t     */\r\n\t    this.setDockTargetColor = function(red, green, blue)\r\n\t    {\r\n\t        if (!cwic.SystemController.getCapabilities().nativeWindowDockingSupport ||\r\n\t            !cwic.SystemController.getCapabilities().nativeWindowDockingTargetSupport)\r\n\t        {\r\n\t            throw Error(\"No capability\");\r\n\t        }\r\n\t\r\n\t        var dockingWindow = getDockingWindow();\r\n\t        dockingWindow.setDockColor(red, green, blue);\r\n\t\r\n\t        var messageType = \"setDockTargetColor\";\r\n\t        var messageData = {\r\n\t            redValue: red,\r\n\t            greenValue: green,\r\n\t            blueValue: blue,\r\n\t            windowType: m_Type\r\n\t        };\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType, messageData);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof NativeVideoWindow\r\n\t     * @method dock\r\n\t     * @description\r\n\t     * Dock native video window to an HTML element of the specified DOM window.\r\n\t     *\r\n\t     * @param htmlElement {HTMLElement} - HTML element to which native video window will be docked\r\n\t     * @param DOMWindow {Window} - DOM window to which HTML Element belongs. If this parameter isn't specified\r\n\t     * current DOM window is used.\r\n\t     *\r\n\t     * @throws No Capability - Thrown if docking isn't supported.\r\n\t     * @throws Invalid HTML Element - Thrown if htmlElement parameter is not instance of HTMLElement.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.dock = function(htmlElement, DOMWindow)\r\n\t    {\r\n\t        if (!cwic.SystemController.getCapabilities().nativeWindowDockingSupport)\r\n\t        {\r\n\t            throw Error(\"No capability\");\r\n\t        }\r\n\t\r\n\t        var frame = DOMWindow ? DOMWindow : window;\r\n\t\r\n\t        if(!(htmlElement instanceof frame.HTMLElement))\r\n\t        {\r\n\t            throw Error(\"Invalid HTML Element\");\r\n\t        }\r\n\t\r\n\t        var dockingWindow = getDockingWindow();\r\n\t\r\n\t\r\n\t        dockingWindow.isDocked = true;\r\n\t\r\n\t        dockingWindow.externalWindowDocking = cwic.SystemController.getCapabilities().nativeWindowDockingSupport;\r\n\t        dockingWindow.showingDockingTarget = cwic.SystemController.getCapabilities().nativeWindowDockingTargetSupport;\r\n\t\r\n\t        dockingWindow.frame = frame;\r\n\t        dockingWindow.element = htmlElement;\r\n\t\r\n\t        this.dockElement = htmlElement;\r\n\t        this.dockElementDOMWindow = frame;\r\n\t\r\n\t        var position = dockingWindow.calculateNewPosition();\r\n\t        dockingWindow.sendMessageToAddOn(\"dockExternalWindow\", position, windowType);\r\n\t        dockingWindow.updatePosition();\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof NativeVideoWindow\r\n\t     * @method undock\r\n\t     * @description\r\n\t     * Undock native video window from HTML element.\r\n\t     *\r\n\t     * @throws No Capability - Thrown if docking isn't supported.\r\n\t     * @since 11.7.0\r\n\t     *\r\n\t     * @throw No Capability - Thrown if docking isn't supported.\r\n\t     */\r\n\t    this.undock = function()\r\n\t    {\r\n\t        if (!cwic.SystemController.getCapabilities().nativeWindowDockingSupport)\r\n\t        {\r\n\t            throw Error(\"No Capability\");\r\n\t        }\r\n\t\r\n\t        var dockingWindow = getDockingWindow();\r\n\t\r\n\t        //dockingWindow.hideDockingTarget();\r\n\t        dockingWindow.isDocked = false;\r\n\t\r\n\t        this.dockElement = null;\r\n\t        this.dockElementDOMWindow = null;\r\n\t\r\n\t        var messageType = 'undockExternalWindow';\r\n\t        var messageData = {\r\n\t            windowType: windowType\r\n\t        };\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType, messageData);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof NativeVideoWindow\r\n\t     * @method showControls\r\n\t     * @description\r\n\t     * Shows native video window controls.\r\n\t     *\r\n\t     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t     */\r\n\t    this.showControls = function(errorHandler)\r\n\t    {\r\n\t        var messageType = 'setExternalWindowShowControls';\r\n\t        var messageData = {\r\n\t            showControls : true,\r\n\t            windowType : m_Type\r\n\t        };\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType,messageData, errorHandler);\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof NativeVideoWindow\r\n\t     * @method hideControls\r\n\t     * @description\r\n\t     * Hides native video window controls.\r\n\t     *\r\n\t     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n\t     */\r\n\t    this.hideControls = function(errorHandler)\r\n\t    {\r\n\t        var messageType = 'setExternalWindowShowControls';\r\n\t        var messageData = {\r\n\t            showControls : false,\r\n\t            windowType : m_Type\r\n\t        };\r\n\t\r\n\t        cwic.MessageSender.sendMessage(messageType,messageData, errorHandler);\r\n\t    };\r\n\t}\r\n\t\r\n\tmodule.exports.NativeVideoWindow = NativeVideoWindow;\r\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\r\n\tvar MessageSenderModule = __webpack_require__(7);\r\n\tvar SystemControllerModule = __webpack_require__(27);\r\n\tvar UtilitiesModule = __webpack_require__(5);\r\n\t\r\n\tvar cwic = {\r\n\t    MessageSender : MessageSenderModule.MessageSender,\r\n\t    SystemController : SystemControllerModule.SystemController\r\n\t};\r\n\t\r\n\t\r\n\tfunction WindowPosition()\r\n\t{\r\n\t    this.top         = 0;\r\n\t    this.left        = 0;\r\n\t    this.height      = 0;\r\n\t    this.width       = 0;\r\n\t    this.cropTop     = 0;\r\n\t    this.cropLeft    = 0;\r\n\t    this.cropBottom  = 0;\r\n\t    this.cropRight   = 0;\r\n\t    this.cropHeight  = 0;\r\n\t    this.cropWidth   = 0;\r\n\t    this.scaleFactor = 1;\r\n\t}\r\n\t\r\n\tfunction DockingWindow(windowType)\r\n\t{\r\n\t    this.type     = windowType;\r\n\t    this.isDocked = true;\r\n\t    this.isVideoBeingReceived = false;\r\n\t    this.frame    = window;\r\n\t    this.element  = null;\r\n\t    this.position = new WindowPosition();\r\n\t\r\n\t    this.externalWindowDocking = false;\r\n\t    this.showingDockingTarget   = false;\r\n\t    this.scaleFactor = 1;\r\n\t\r\n\t    this.setDockColor = function(red, green, blue)\r\n\t    {\r\n\t        if(arguments.length !== 3)\r\n\t        {\r\n\t            throw \"Invalid number of arguments for color object\";\r\n\t        }\r\n\t    };\r\n\t\r\n\t\r\n\t    this.isPositionChanged = function(newPosition)\r\n\t    {\r\n\t        var positionChanged = !(\r\n\t            this.position.top        === newPosition.top &&\r\n\t            this.position.left       === newPosition.left &&\r\n\t            this.position.height     === newPosition.height &&\r\n\t            this.position.width      === newPosition.width &&\r\n\t            this.position.cropTop    === newPosition.cropTop &&\r\n\t            this.position.cropLeft   === newPosition.cropLeft &&\r\n\t            this.position.cropHeight === newPosition.cropHeight &&\r\n\t            this.position.cropWidth  === newPosition.cropWidth &&\r\n\t            this.position.scaleFactor === newPosition.scaleFactor\r\n\t        );\r\n\t\r\n\t        return positionChanged;\r\n\t    };\r\n\t\r\n\t    this.updatePosition = function ()\r\n\t    {\r\n\t        if (this.isDocked)\r\n\t        {\r\n\t            var newPosition = this.calculateNewPosition();\r\n\t\r\n\t            if(this.isPositionChanged(newPosition))\r\n\t            {\r\n\t                this.sendMessageToAddOn(\"dockUpdate\", newPosition, this.type);\r\n\t                this.position = newPosition;\r\n\t            }\r\n\t\r\n\t            window.setTimeout(this.updatePosition.bind(this), 10);\r\n\t        }\r\n\t    };\r\n\t\r\n\t    this.calculateNewPosition = function()\r\n\t    {\r\n\t        var elementRectangle = this.element.getBoundingClientRect();\r\n\t        var currentFrame = this.frame,\r\n\t            currentFrameHeight = currentFrame.innerHeight,\r\n\t            currentFrameWidth = currentFrame.innerWidth,\r\n\t            currentFrameRect,\r\n\t            parentFrameWidth,\r\n\t            parentFrameHeight,\r\n\t            frameBorderOffset = 0,\r\n\t            borderTopOffset = 0,\r\n\t            borderLeftOffset = 0,\r\n\t            paddingTopOffset = 0,\r\n\t            paddingLeftOffset = 0;\r\n\t\r\n\t        var position = new WindowPosition();\r\n\t        position.left = elementRectangle.left;\r\n\t        position.top = elementRectangle.top;\r\n\t        position.width = elementRectangle.width;\r\n\t        position.height = elementRectangle.height;\r\n\t        position.bottom = elementRectangle.bottom;\r\n\t        position.right = elementRectangle.right;\r\n\t\r\n\t        // we need to take into account the devicePixelRatio and the CSS zoom property\r\n\t        // it won't work if css zoom is set on some of parent elements\r\n\t        var scaleFactor = currentFrame.devicePixelRatio;\r\n\t\r\n\t        var scrollX = 0;\r\n\t        var scrollY = 0;\r\n\t\r\n\t        if (('ontouchstart' in window) && (navigator.maxTouchPoints > 1))\r\n\t        {\r\n\t\r\n\t            //running on touch-capable device\r\n\t            var inner = currentFrame.innerWidth;\r\n\t            var hasScrollbar = inner - currentFrame.document.documentElement.clientWidth;\r\n\t            this.lastZoomFactor = this.lastZoomFactor || 1;\r\n\t\r\n\t            // scrollbar width changes when zooming, we need to calculate it for each scale level\r\n\t            // on pinch zoom, hasScrollbar very quickly goes below zero, and we should skip that case (no scrollbars on pinch-zoom)\r\n\t            // ...basically just an aproximation which works currentlly\r\n\t            if (hasScrollbar > 0 || UtilitiesModule.Utilities.getOSType() == \"Windows 10\" ) {\r\n\t                inner -= hasScrollbar;\r\n\t            } else {\r\n\t                var scrollBarWidth = 21;\r\n\t                inner -= (scrollBarWidth / this.lastZoomFactor);\r\n\t            }\r\n\t\r\n\t            var pinchZoomCoefficient = currentFrame.document.documentElement.clientWidth / inner;\r\n\t\r\n\t            scaleFactor *= pinchZoomCoefficient;\r\n\t            this.lastZoomFactor = scaleFactor;\r\n\t\r\n\t            var scrollSizeX = currentFrame.document.body.clientWidth - currentFrame.innerWidth;\r\n\t            var scrollSizeY = currentFrame.document.body.clientHeight - currentFrame.innerHeight;\r\n\t\r\n\t            if (pinchZoomCoefficient > 1.01) {\r\n\t                scrollX = currentFrame.scrollX;\r\n\t                scrollY = currentFrame.scrollY;\r\n\t\r\n\t                // this is complex logic dealing with case when the page (pinchZoom=0) has scrollbars\r\n\t                // In that case, when the page is pinche-zoomed, scrollX and scrollY are no longer accurate in providing position of docking container\r\n\t                var diffY = scrollSizeY - scrollY;\r\n\t\r\n\t                // while diff is >0, position.top represent accurate top position\r\n\t                // when it goes below 0 (meaning that \"original\" scrollbar hit the end), position.top gets stuck and then diff value represent how much container is moved\r\n\t                if (diffY >= 0) {\r\n\t                    scrollY = 0;\r\n\t                } else {\r\n\t                    scrollY = Math.abs(diffY);\r\n\t                }\r\n\t\r\n\t                var diffX = scrollSizeX - scrollX;\r\n\t\r\n\t                if (diffX >= 0) {\r\n\t                    scrollX = 0;\r\n\t                } else {\r\n\t                    scrollX = Math.abs(diffX);\r\n\t                }\r\n\t\r\n\t                if (diffY >= 0) {\r\n\t                    this.initPosY = position.top + currentFrame.scrollY;\r\n\t                }\r\n\t\r\n\t                if (\r\n\t                    position.top > this.initPosY - scrollSizeY &&\r\n\t                    diffY < 0\r\n\t                ) {\r\n\t                    position.top = this.initPosY - scrollSizeY;\r\n\t                }\r\n\t\r\n\t                if (diffX >= 0) {\r\n\t                    this.initPosX = position.left + currentFrame.scrollX;\r\n\t                }\r\n\t\r\n\t                if (\r\n\t                    position.left > this.initPosX - scrollSizeX &&\r\n\t                    diffX < 0\r\n\t                ) {\r\n\t                    position.left = this.initPosX - scrollSizeX;\r\n\t                }\r\n\t            }\r\n\t\r\n\t        }\r\n\t\r\n\t        position.left -= scrollX;\r\n\t        position.top -= scrollY;\r\n\t\r\n\t        // calculating crop values for innermost iframe\r\n\t        position.cropTop  = (position.top < 0) ? Math.abs(position.top) : 0;\r\n\t        position.cropLeft = (position.left < 0) ? Math.abs(position.left) : 0;\r\n\t        position.cropBottom = Math.max(position.bottom - currentFrameHeight, 0);\r\n\t        position.cropRight  = Math.max(position.right - currentFrameWidth, 0);\r\n\t\r\n\t        while (currentFrame != currentFrame.top)\r\n\t        {\r\n\t            currentFrameRect = currentFrame.frameElement.getBoundingClientRect();\r\n\t            parentFrameWidth = currentFrame.parent.innerWidth;\r\n\t            parentFrameHeight = currentFrame.parent.innerHeight;\r\n\t\r\n\t            // !! converts to boolean: 0 and NaN map to false, the rest of the numbers map to true\r\n\t            if (currentFrame.frameElement.frameBorder === \"\" || !!parseInt(currentFrame.frameElement.frameBorder, 10))\r\n\t            {\r\n\t                // after testing on Chrome, whenever a frameBorder is present, it's size is 2px\r\n\t                frameBorderOffset = 2;\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t                frameBorderOffset = 0;\r\n\t            }\r\n\t\r\n\t            if (currentFrame.frameElement.style.borderTopWidth === \"\")\r\n\t            {\r\n\t                borderTopOffset = frameBorderOffset;\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t                borderTopOffset = parseInt(currentFrame.frameElement.style.borderTopWidth || 0, 10);\r\n\t            }\r\n\t\r\n\t            // take into account parent frame's offset first\r\n\t            var outerFrame = window.frameElement;\r\n\t            var framePaddingLeftOffset = 0;\r\n\t            var framePaddingTopOffset = 0;\r\n\t            if (outerFrame != null)\r\n\t            {\r\n\t                var outerFrameStyle = window.getComputedStyle(outerFrame,null);\r\n\t                if (outerFrameStyle != null)\r\n\t                {\r\n\t                    framePaddingLeftOffset += parseInt(outerFrameStyle.getPropertyValue(\"padding-left\") || 0, 10);\r\n\t                    framePaddingTopOffset += parseInt(outerFrameStyle.getPropertyValue(\"padding-top\") || 0, 10);\r\n\t                } \r\n\t            }    \r\n\t\r\n\t            paddingTopOffset = framePaddingTopOffset;\r\n\t\r\n\t            if (currentFrameRect.top < 0)\r\n\t            {\r\n\t                if (position.top + position.cropTop < 0)\r\n\t                {\r\n\t                    position.cropTop += Math.abs(currentFrameRect.top);\r\n\t                }\r\n\t                else if (Math.abs(currentFrameRect.top) - (position.top + position.cropTop + borderTopOffset + paddingTopOffset) > 0)\r\n\t                {\r\n\t                    position.cropTop += Math.abs(Math.abs(currentFrameRect.top) - (position.top + position.cropTop + borderTopOffset + paddingTopOffset));\r\n\t                }\r\n\t            }\r\n\t\r\n\t            if (currentFrameRect.top + borderTopOffset + paddingTopOffset + position.top + position.height - position.cropBottom > parentFrameHeight)\r\n\t            {\r\n\t                position.cropBottom = currentFrameRect.top + borderTopOffset + paddingTopOffset + position.top + position.height - parentFrameHeight;\r\n\t            }\r\n\t\r\n\t            position.top += currentFrameRect.top + borderTopOffset + paddingTopOffset;\r\n\t\r\n\t            if (currentFrame.frameElement.style.borderLeftWidth === \"\")\r\n\t            {\r\n\t                borderLeftOffset = frameBorderOffset;\r\n\t            }\r\n\t            else\r\n\t            {\r\n\t                borderLeftOffset = parseInt(currentFrame.frameElement.style.borderLeftWidth || 0, 10);\r\n\t            }\r\n\t\r\n\t            paddingLeftOffset = framePaddingLeftOffset;\r\n\t\r\n\t            if (currentFrameRect.left < 0)\r\n\t            {\r\n\t                if (position.left + position.cropLeft < 0)\r\n\t                {\r\n\t                    position.cropLeft += Math.abs(currentFrameRect.left);\r\n\t                }\r\n\t                else if (Math.abs(currentFrameRect.left) - (position.left + position.cropLeft + borderLeftOffset + paddingLeftOffset) > 0)\r\n\t                {\r\n\t                    position.cropLeft += Math.abs(Math.abs(currentFrameRect.left) - (position.left + position.cropLeft + borderLeftOffset + paddingLeftOffset));\r\n\t                }\r\n\t            }\r\n\t\r\n\t            if (currentFrameRect.left + borderLeftOffset + paddingLeftOffset + position.left + position.width - position.cropRight > parentFrameWidth)\r\n\t            {\r\n\t                position.cropRight = currentFrameRect.left + borderLeftOffset + paddingLeftOffset + position.left + position.width - parentFrameWidth;\r\n\t            }\r\n\t\r\n\t            position.left += currentFrameRect.left + borderLeftOffset + paddingLeftOffset;\r\n\t            currentFrame = currentFrame.parent;\r\n\t        }\r\n\t\r\n\t\r\n\t        position.cropLeft = (position.width > position.cropLeft) ? position.cropLeft : position.width;\r\n\t        position.cropTop  = (position.height > position.cropTop) ? position.cropTop : position.height;\r\n\t        position.cropWidth  = Math.max(position.width - (position.cropLeft + position.cropRight), 0);\r\n\t        position.cropHeight = Math.max(position.height - (position.cropTop + position.cropBottom), 0);\r\n\t\r\n\t        position.left        = Math.round(position.left);\r\n\t        position.top         = Math.round(position.top);// + offsetTop;\r\n\t        position.width       = Math.round(position.width);\r\n\t        position.height      = Math.round(position.height);\r\n\t        position.cropleft    = Math.round(position.cropLeft);\r\n\t        position.cropTop     = Math.round(position.cropTop);\r\n\t        position.cropWidth   = Math.round(position.cropWidth);\r\n\t        position.cropHeight  = Math.round(position.cropHeight);\r\n\t\r\n\t        position.scaleFactor = scaleFactor;\r\n\t\r\n\t        if(UtilitiesModule.Utilities.getBrowserType() == \"Firefox\" && cwic.SystemController.platformOS == \"windows\")\r\n\t        {\r\n\t            position.top += Math.ceil(window.top.mozInnerScreenY);\r\n\t            position.left += Math.ceil(window.top.mozInnerScreenX);\r\n\t        }\r\n\t\r\n\t        position.browserHeight = window.outerHeight;\r\n\t        position.browserWidth  = window.outerWidth;\r\n\t        position.viewPortHeight = window.top.innerHeight;\r\n\t        position.viewPortWidth  = window.top.innerWidth;\r\n\t\r\n\t\r\n\t        return position;\r\n\t    };\r\n\t\r\n\t    this.sendMessageToAddOn = function (msgName, position, windowType)\r\n\t    {\r\n\t        var addOnMessageContent =\r\n\t        {\r\n\t            offsetX: position.left,\r\n\t            offsetY: position.top,\r\n\t            width: position.width,\r\n\t            height: position.height,\r\n\t            cropOffsetX: position.cropLeft,\r\n\t            cropOffsetY: position.cropTop,\r\n\t            cropWidth: position.cropWidth,\r\n\t            cropHeight: position.cropHeight,\r\n\t            scaleFactor: position.scaleFactor,\r\n\t            windowType: windowType,\r\n\t            browserHeight: position.browserHeight,\r\n\t            browserWidth: position.browserWidth,\r\n\t            viewPortHeight : position.viewPortHeight,\r\n\t            viewPortWidth : position.viewPortWidth\r\n\t        };\r\n\t\r\n\t        if (msgName === \"dockExternalWindow\")\r\n\t        {\r\n\t            addOnMessageContent.title = this.frame.top.document.title ||\r\n\t                (this.frame.top.location.host + this.frame.top.location.pathname + this.frame.top.location.search);\r\n\t        }\r\n\t\r\n\t\r\n\t        cwic.MessageSender.sendMessage(msgName, addOnMessageContent);\r\n\t    };\r\n\t\r\n\t    this.hasDockingCapabilities = function ()\r\n\t    {\r\n\t        var caps;\r\n\t        try\r\n\t        {\r\n\t            caps = cwic.SystemController.getCapabilities().nativeWindowDockingSupport;\r\n\t        }\r\n\t        catch (e)\r\n\t        {\r\n\t            caps = null;\r\n\t        }\r\n\t\r\n\t        return caps;\r\n\t    };\r\n\t}\r\n\t\r\n\tmodule.exports.PreviewDockingWindow      = new DockingWindow(\"preview\");\r\n\tmodule.exports.RemoteDockingWindow       = new DockingWindow(\"remote\");\r\n\tmodule.exports.ScreenShareDockingWindow  = new DockingWindow(\"share\");\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Required Modules\r\n\tvar NativeVideoWindowModule = __webpack_require__(37);\r\n\t\r\n\tvar cwic = {\r\n\t    NativeVideoWindow : NativeVideoWindowModule.NativeVideoWindow\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class NativeScreenShareWindow\r\n\t * @extends  NativeVideoWindow\r\n\t * @classdesc\r\n\t * Represents native video window in which screen share video is rendered.\r\n\t *\r\n\t * @description\r\n\t * This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction NativeScreenShareWindow()\r\n\t{\r\n\t    cwic.NativeVideoWindow.call(this, 'share');\r\n\t}\r\n\t\r\n\tNativeScreenShareWindow.prototype = Object.create(cwic.NativeVideoWindow.prototype);\r\n\tNativeScreenShareWindow.prototype.constructor = NativeScreenShareWindow();\r\n\t\r\n\t\r\n\tmodule.exports.NativeScreenShareWindow = new NativeScreenShareWindow();\r\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Required Modules\r\n\tvar NativeVideoWindowModule = __webpack_require__(37);\r\n\tvar MessageSenderModule     = __webpack_require__(7);\r\n\t\r\n\tvar cwic = {\r\n\t    NativeVideoWindow : NativeVideoWindowModule.NativeVideoWindow,\r\n\t    MessageSender     : MessageSenderModule.MessageSender\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class NativeConversationWindow\r\n\t * @extends  NativeVideoWindow\r\n\t * @classdesc\r\n\t * Represents native video window in which telephony conversation video is rendered.\r\n\t *\r\n\t * @description\r\n\t * This class cannot be instantiated.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction NativeConversationWindow()\r\n\t{\r\n\t    cwic.NativeVideoWindow.call(this, 'remote');\r\n\t}\r\n\t\r\n\tNativeConversationWindow.prototype = Object.create(cwic.NativeVideoWindow.prototype);\r\n\tNativeConversationWindow.prototype.constructor = new NativeConversationWindow();\r\n\t\r\n\t\r\n\t/**\r\n\t * @memberof NativeConversationWindow\r\n\t * @method showVideoForConversation\r\n\t * @description\r\n\t * Show video for given telephony conversation.\r\n\t *\r\n\t * @param conversation {TelephonyConversation} - Telephony conversation for which video will be rendered.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tNativeConversationWindow.prototype.showVideoForConversation = function(conversation, errorHandler)\r\n\t{\r\n\t    var messageType = 'showCallInExternalWindow';\r\n\t    var messageData = {\r\n\t        callId: conversation.ID\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof NativeConversationWindow\r\n\t * @method showSelfView\r\n\t * @description\r\n\t * Show self-view video.\r\n\t *\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tNativeConversationWindow.prototype.showSelfView = function(errorHandler)\r\n\t{\r\n\t    var messageType = 'setExternalWindowShowSelfViewPip';\r\n\t    var messageData = {\r\n\t        showSelfViewPip: 'true'\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof NativeConversationWindow\r\n\t * @method hideSelfView\r\n\t * @description\r\n\t * Hide self-view video.\r\n\t *\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tNativeConversationWindow.prototype.hideSelfView = function(errorHandler)\r\n\t{\r\n\t    var messageType = 'setExternalWindowShowSelfViewPip';\r\n\t    var messageData = {\r\n\t        showSelfViewPip: false\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof NativeConversationWindow\r\n\t * @method showSelfViewBorder\r\n\t * @description\r\n\t * Show border for self-view video.\r\n\t *\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tNativeConversationWindow.prototype.showSelfViewBorder = function(errorHandler)\r\n\t{\r\n\t    var messageType = 'setExternalWindowShowSelfViewPipBorder';\r\n\t    var messageData = {\r\n\t        showSelfViewPipBorder: true\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof NativeConversationWindow\r\n\t * @method hideSelfViewBorder\r\n\t * @description\r\n\t * Hide border for self-view video.\r\n\t *\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tNativeConversationWindow.prototype.hideSelfViewBorder = function(errorHandler)\r\n\t{\r\n\t    var messageType = 'setExternalWindowShowSelfViewPipBorder';\r\n\t    var messageData = {\r\n\t        showSelfViewPipBorder: false\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof NativeConversationWindow\r\n\t * @method setSelfViewPosition\r\n\t * @description\r\n\t * Set position of self-view video relative to conversation window.\r\n\t *\r\n\t * @param left {Number} - Distance from left edge of window in percentages.\r\n\t * @param top {Number} - Distance from top edge of window in percentages.\r\n\t * @param right {Number} - Distance from right edge of window in percentages.\r\n\t * @param bottom {Number} - Distance from bottom edge of window in percentages.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tNativeConversationWindow.prototype.setSelfViewPosition = function(left, top, right, bottom, errorHandler)\r\n\t{\r\n\t    var messageType = 'setExternalWindowSelfViewPipPosition';\r\n\t    var messageData = {\r\n\t        pipLeft  : left,\r\n\t        pipTop   : top,\r\n\t        pipRight : right,\r\n\t        pipBottom: bottom\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\tmodule.exports.NativeConversationWindow = new NativeConversationWindow();\r\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Window Modules\n\tvar VideoWindowModule = __webpack_require__(42);\n\t\n\t// Telephony Modules\n\tvar TelephonyConversationModule = __webpack_require__(18);\n\t\n\t\n\tvar cwic = {\n\t    VideoWindow : VideoWindowModule.VideoWindow,\n\t    TelephonyConversation : TelephonyConversationModule.TelephonyConversation\n\t};\n\t\n\t/**\n\t * @class ScreenShareWindow\n\t * @classdesc\n\t * In-browser video window in which incoming screen share for specified {@link TelephonyConversation} is rendered.\n\t *\n\t * @description\n\t * It is instantiated through [WindowController.createVideoWindow()]{@link WindowController.createVideoWindow}.\n\t * @since 11.7.0\n\t */\n\tfunction ScreenShareWindow(htmlElement, DOMWindow)\n\t{\n\t    var m_VideoWindow = new cwic.VideoWindow(htmlElement, DOMWindow);\n\t\n\t    /**\n\t     * @memberof ScreenShareWindow\n\t     * @method showForConversation\n\t     * @description\n\t     * Start rendering screen share video for specified conversation.\n\t     *\n\t     * @param conversation {TelephonyConversation} - Telephony conversation for which video rendering will start.\n\t     * @since 11.7.0\n\t     */\n\t    this.showForConversation = function(conversation)\n\t    {\n\t        var methodName = 'addShareWindow';\n\t\n\t        m_VideoWindow.element.style.width  = \"100%\";\n\t        m_VideoWindow.element.style.height = \"100%\";\n\t        m_VideoWindow.executeMethod(methodName, conversation.ID);\n\t    };\n\t\n\t    /**\n\t     * @memberof ScreenShareWindow\n\t     * @method hidForConversation\n\t     * @description\n\t     * Stop rendering screen share video for specified conversation.\n\t     *\n\t     * @param conversation {TelephonyConversation} - Telephony conversation for which video rendering will stop.\n\t     * @since 11.7.0\n\t     */\n\t    this.hideForConversation = function(conversation)\n\t    {\n\t        var methodName = 'removeShareWindow';\n\t\n\t        m_VideoWindow.element.style.width  = \"0%\";\n\t        m_VideoWindow.element.style.height = \"0%\";\n\t        m_VideoWindow.executeMethod(methodName, conversation.ID);\n\t    };\n\t}\n\t\n\tmodule.exports.ScreenShareWindow = ScreenShareWindow;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\n\tvar SystemControllerModule = __webpack_require__(27);\n\tvar UtilitiesModule = __webpack_require__(5);\n\t//// Utilities Modules\n\t//var generateUniqueID = require('../utils/generateUniqueId');\n\t\n\tvar cwic = {\n\t    SystemController : SystemControllerModule.SystemController,\n\t    Utilities : UtilitiesModule.Utilities\n\t};\n\t\n\t/**\n\t * @class VideoWindow\n\t * @classdesc\n\t * Video window represents window in which video will be rendered. This class can only be used in following Browsers:\n\t * <br>\n\t * <ul>\n\t *     <li> Mozzile Firefox\n\t *     <li> Internet Explorer\n\t *     <li> Safari\n\t * </ul>\n\t * <br>\n\t *\n\t * @param htmlElement {HTMLElement} - Element in which video will be rendered.\n\t * @param [DOMWindow] {Window} - DOM window that is a parent of HTML element.\n\t *\n\t * @throw Invalid HTML Type - Thrown if HTML element is invalid.\n\t * @throw Element Requires ID - Thrown if HTML element doesn't have ID.\n\t */\n\tfunction VideoWindow(htmlElement, DOMWindow)\n\t{\n\t    var domWindow = DOMWindow ? DOMWindow : window;\n\t\n\t    if(!(htmlElement instanceof domWindow.HTMLElement))\n\t    {\n\t        throw Error(\"Invalid HTML Type\");\n\t    }\n\t\n\t    if(!htmlElement.id)\n\t    {\n\t        throw Error(\"Element Requires ID\");\n\t    }\n\t\n\t    var videoWindow = domWindow.document.createElement(\"object\");\n\t    videoWindow.type = 'application/x-cisco-cwc-videocall';\n\t    videoWindow.id   = 'videoWindow-' + htmlElement.id + cwic.Utilities.generateUniqueId();\n\t    videoWindow.style.width  = \"0%\";\n\t    videoWindow.style.height = \"0%\";\n\t\n\t    htmlElement.appendChild(videoWindow);\n\t    \n\t    this.element = videoWindow;\n\t\n\t    this.executeMethod = function(methodName, callID)\n\t    {\n\t        var clientID  = cwic.SystemController.getInstanceID();\n\t        var messageID = cwic.Utilities.generateUniqueId();\n\t        var url       = window.location.href;\n\t        var hostname  = window.location.hostname;\n\t        var name      = window.document.title;\n\t\n\t        var messageParameters = [messageID, clientID, url, hostname, name];\n\t\n\t        if(callID)\n\t        {\n\t            messageParameters.unshift(callID);\n\t        }\n\t\n\t        videoWindow[methodName].apply(this, messageParameters);\n\t    };\n\t\n\t    this.executeMethod('configure');\n\t}\n\t\n\tmodule.exports.VideoWindow = VideoWindow;\n\t\n\t\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Window Modules\n\tvar VideoWindowModule = __webpack_require__(42);\n\t\n\t// Telephony Modules\n\tvar TelephonyConversationModule = __webpack_require__(18);\n\t\n\t\n\tvar cwic = {\n\t    VideoWindow : VideoWindowModule.VideoWindow,\n\t    TelephonyConversation : TelephonyConversationModule.TelephonyConversation\n\t};\n\t\n\t/**\n\t * @class ConversationWindow\n\t * @classdesc\n\t * In-browser video window in which [Telephony Conversation's]{@link TelephonyConversation} conversation video\n\t * (incoming video from remote participant) is rendered.\n\t *\n\t * @description\n\t * It is instantiated through [WindowController.createVideoWindow()]{@link WindowController.createVideoWindow}.\n\t * @since 11.7.0\n\t */\n\tfunction ConversationWindow(htmlElement, DOMWindow)\n\t{\n\t    var m_VideoWindow = new cwic.VideoWindow(htmlElement, DOMWindow);\n\t\n\t    /**\n\t     * @memberof ConversationWindow\n\t     * @method showForConversation\n\t     * @description\n\t     * Start rendering video for specified conversation.\n\t     *\n\t     * @param conversation {TelephonyConversation} - Telephony conversation for which video rendering will start.\n\t     * @since 11.7.0\n\t     */\n\t    this.showForConversation = function(conversation)\n\t    {\n\t        var methodName = 'addWindowToCall';\n\t\n\t        m_VideoWindow.element.style.width  = \"100%\";\n\t        m_VideoWindow.element.style.height = \"100%\";\n\t        m_VideoWindow.executeMethod(methodName, conversation.ID);\n\t\n\t        var methodName = 'startRemoteVideo';\n\t        \n\t        m_VideoWindow.executeMethod(methodName, conversation.ID);\n\t    };\n\t\n\t    /**\n\t     * @memberof ConversationWindow\n\t     * @method hideForConversation\n\t     * @description\n\t     * Stop rendering video for specified conversation.\n\t     *\n\t     * @param conversation {TelephonyConversation} - Telephony conversation for which video rendering will stop.\n\t     * @since 11.7.0\n\t     */\n\t    this.hideForConversation = function(conversation)\n\t    {\n\t        var methodName = 'removeWindowFromCall';\n\t\n\t        m_VideoWindow.element.style.width  = \"0%\";\n\t        m_VideoWindow.element.style.height = \"0%\";\n\t        m_VideoWindow.executeMethod(methodName, conversation.ID);\n\t    };\n\t}\n\t\n\tmodule.exports.ConversationWindow = ConversationWindow;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// Window Modules\n\tvar VideoWindowModule = __webpack_require__(42);\n\t\n\tvar cwic = {\n\t    VideoWindow: VideoWindowModule.VideoWindow\n\t};\n\t\n\t/**\n\t * @class PreviewWindow\n\t * @classdesc\n\t * In-browser video window in which local camera feed is rendered.\n\t *\n\t * @description\n\t * It is instantiated through [WindowController.createVideoWindow()]{@link WindowController.createVideoWindow}.\n\t * @since 11.7.0\n\t */\n\tfunction PreviewWindow(htmlElement, DOMWindow)\n\t{\n\t    var m_VideoWindow = new cwic.VideoWindow(htmlElement, DOMWindow);\n\t\n\t    /**\n\t     * @memberof PreviewWindow\n\t     * @method show\n\t     * @description\n\t     * Show preview video window. Once shown, local camera feed will start being rendered.\n\t     *\n\t     * @since 11.7.0\n\t     */\n\t    this.show = function()\n\t    {\n\t        var methodName = 'addPreviewWindow';\n\t\n\t        m_VideoWindow.element.style.width  = \"100%\";\n\t        m_VideoWindow.element.style.height = \"100%\";\n\t        m_VideoWindow.executeMethod(methodName);\n\t    };\n\t\n\t    /**\n\t     * @memberof PreviewWindow\n\t     * @method hide\n\t     * @description\n\t     * Hide preview video window. Once hidden, local camera feed will stop being rendered.\n\t     *\n\t     * @since 11.7.0\n\t     */\n\t    this.hide = function()\n\t    {\n\t        var methodName = 'removePreviewWindow';\n\t\n\t        m_VideoWindow.element.style.width  = \"0%\";\n\t        m_VideoWindow.element.style.height = \"0%\";\n\t        m_VideoWindow.executeMethod(methodName);\n\t    };\n\t}\n\t\n\tmodule.exports.PreviewWindow = PreviewWindow;\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t// System Modules\r\n\tvar MessageReceiverModule = __webpack_require__(2);\r\n\tvar MessageSenderModule   = __webpack_require__(7);\r\n\t\r\n\t// Certificate Modules\r\n\tvar InvalidCertificateModule = __webpack_require__(46);\r\n\t\r\n\tvar cwic = {\r\n\t    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n\t    MessageSender   : MessageSenderModule.MessageSender,\r\n\t    InvalidCertificate : InvalidCertificateModule.InvalidCertificate\r\n\t};\r\n\t\r\n\t/**\r\n\t * @class CertificateController\r\n\t * @classdesc\r\n\t * Certificate controller is responsible for handling invalid certificates.\r\n\t *\r\n\t * @description This class cannot be instantiated.\r\n\t * @since 11.7.0\r\n\t */\r\n\tfunction CertificateController()\r\n\t{\r\n\t    var m_EventHandlers = {};\r\n\t\r\n\t    cwic.MessageReceiver.addMessageHandler('invalidcertificate', onInvalidCertificate)\r\n\t\r\n\t    function onInvalidCertificate(content)\r\n\t    {\r\n\t        var eventHandler = m_EventHandlers['onInvalidCertificate'];\r\n\t        if(eventHandler)\r\n\t        {\r\n\t            var invalidCertificate = new cwic.InvalidCertificate(content);\r\n\t\r\n\t            var reasons = [];\r\n\t            for(var index = 0; index<content.invalidReasons.length; index++)\r\n\t            {\r\n\t                reasons.push(content.invalidReasons[index].invalidReason);\r\n\t            }\r\n\t\r\n\t            eventHandler(invalidCertificate, reasons, content.allowUserToAccept);\r\n\t        }\r\n\t    }\r\n\t\r\n\t    /**\r\n\t     * @memberof CertificateController\r\n\t     * @method addEventHandler\r\n\t     * @description Add handler function for Certificate Controller's event.\r\n\t     *\r\n\t     * @param eventName {String} - Name of the event.\r\n\t     * @param handler {Function} - Function that will be called when event is fired.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.addEventHandler = function(eventName, eventHandler)\r\n\t    {\r\n\t        m_EventHandlers[eventName] = eventHandler;\r\n\t    };\r\n\t\r\n\t    /**\r\n\t     * @memberof CertificateController\r\n\t     * @method removeEventHandler\r\n\t     * @description Remove handler function for Certificate Controller's event.\r\n\t     *\r\n\t     * @param eventName {String} - Name of the event.\r\n\t     *\r\n\t     * @since 11.7.0\r\n\t     */\r\n\t    this.removeEventHandler = function(eventName)\r\n\t    {\r\n\t        delete m_EventHandlers[eventName];\r\n\t    };\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof CertificateController\r\n\t * @method acceptInvalidCertificate\r\n\t * @description\r\n\t * Accepts invalid certificate. Invalid certificate can be obtained through \"onInvalidCertificate\" event.\r\n\t *\r\n\t * @param certificate {InvalidCertificate} - Invalid certificate to be accepted.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Object - Thrown if certificate is not instance of {@link InvalidCertificate}.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tCertificateController.prototype.acceptInvalidCertificate = function (certificate, errorHandler)\r\n\t{\r\n\t    if(!(certificate instanceof cwic.InvalidCertificate))\r\n\t    {\r\n\t        throw Error(\"Invalid Object\");\r\n\t    }\r\n\t\r\n\t    var messageType = 'handleInvalidCertificate';\r\n\t    var messageData = {\r\n\t        certFingerprint: certificate.fingerprint,\r\n\t        accept : true\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\t/**\r\n\t * @memberof CertificateController\r\n\t * @method rejectInvalidCertificate\r\n\t * @description\r\n\t * Rejects invalid certificate. Invalid certificate can be obtained through \"onInvalidCertificate\" event.\r\n\t *\r\n\t * @param certificate {InvalidCertificate} - Invalid certificate to be accepted.\r\n\t * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n\t *\r\n\t * @throw Invalid Object - Thrown if certificate is not instance of {@link InvalidCertificate}.\r\n\t *\r\n\t * @since 11.7.0\r\n\t */\r\n\tCertificateController.prototype.rejectInvalidCertificate = function (certificate, errorHandler)\r\n\t{\r\n\t    if(!(certificate instanceof cwic.InvalidCertificate))\r\n\t    {\r\n\t        throw Error(\"Invalid Type\");\r\n\t    }\r\n\t\r\n\t    var messageType = 'handleInvalidCertificate';\r\n\t    var messageData = {\r\n\t        certFingerprint: certificate.fingerprint,\r\n\t        accept : false\r\n\t    };\r\n\t\r\n\t    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n\t};\r\n\t\r\n\tmodule.exports.CertificateController = new CertificateController();\r\n\t\r\n\t\r\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports) {\n\n\t/**\r\n\t * @class InvalidCertificate\r\n\t *\r\n\t * Invalid Certificate\r\n\t */\r\n\tfunction InvalidCertificate(data)\r\n\t{\r\n\t    this.subjectCN   = data.certSubjectCN;\r\n\t    this.fingerprint = data.certFingerprint;\r\n\t    this.identifier  = data.identifierToDisplay;\r\n\t    this.referenceID = data.referenceId;\r\n\t}\r\n\t\r\n\t/**\r\n\t * @memberof InvalidCertificate\r\n\t * @member subjectCN\r\n\t * @description\r\n\t * Certificate Name\r\n\t *\r\n\t * @type {string}\r\n\t * @since 11.7.0\r\n\t */\r\n\tInvalidCertificate.prototype.subjectCN = \"\";\r\n\t\r\n\t/**\r\n\t * @memberof InvalidCertificate\r\n\t * @member fingerprint\r\n\t * @description\r\n\t * Certificate fingerprint\r\n\t *\r\n\t * @type {string}\r\n\t * @since 11.7.0\r\n\t */\r\n\tInvalidCertificate.prototype.fingerprint = \"\";\r\n\t\r\n\t/**\r\n\t * @memberof InvalidCertificate\r\n\t * @member identifier\r\n\t * @description\r\n\t * Identity that provides the certificate.\r\n\t *\r\n\t * @type {string}\r\n\t * @since 11.7.0\r\n\t */\r\n\tInvalidCertificate.prototype.identifier = \"\";\r\n\t\r\n\t/**\r\n\t * @memberof InvalidCertificate\r\n\t * @member referenceID\r\n\t * @description\r\n\t * Identity of the certificate provider matching the certificate owner.\r\n\t *\r\n\t * @type {string}\r\n\t * @since 11.7.0\r\n\t */\r\n\tInvalidCertificate.prototype.referenceID = \"\";\r\n\t\r\n\tmodule.exports.InvalidCertificate = InvalidCertificate;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// cwic.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ebd3f4adef445fa64c94","// Loading all controller modules\r\nvar MultimediaControllerModule  = require('./Multimedia/MultimediaController');\r\nvar TelephonyControllerModule   = require('./Telephony/TelephonyController');\r\nvar LoginControllerModule       = require('./Login/LoginController');\r\nvar SystemControllerModule      = require('./System/SystemController');\r\nvar WindowControllerModule      = require('./Window/WindowController');\r\nvar CertificateControllerModule = require('./Certificate/CertificateController');\r\n\r\n// Exposing Controllers as public API\r\nmodule.exports.MultimediaController  = MultimediaControllerModule.MultimediaController;\r\nmodule.exports.TelephonyController   = TelephonyControllerModule.TelephonyController;\r\nmodule.exports.LoginController       = LoginControllerModule.LoginController;\r\nmodule.exports.SystemController      = SystemControllerModule.SystemController;\r\nmodule.exports.WindowController      = WindowControllerModule.WindowController;\r\nmodule.exports.CertificateController = CertificateControllerModule.CertificateController;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/main.js\n// module id = 0\n// module chunks = 0","// System Modules\r\nvar MessageReceiverModule = require('../System/MessageReceiver');\r\nvar MessageSenderModule   = require('../System/MessageSender');\r\n\r\n// Multimedia Modules\r\nvar SpeakerModule    = require('./Speaker.js');\r\nvar MicrophoneModule = require('./Microphone.js');\r\nvar CameraModule     = require('./Camera.js');\r\nvar RingerModule     = require('./Ringer.js');\r\nvar RingtoneModule   = require('./Ringtone.js');\r\nvar MonitorModule    = require('./Monitor.js');\r\n\r\n\r\nvar cwic = {\r\n    Speaker    : SpeakerModule.Speaker,\r\n    Microphone : MicrophoneModule.Microphone,\r\n    Camera     : CameraModule.Camera,\r\n    Ringer     : RingerModule.Ringer,\r\n    Ringtone   : RingtoneModule.Ringtone,\r\n    Monitor    : MonitorModule.Monitor,\r\n\r\n    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n    MessageSender   : MessageSenderModule.MessageSender\r\n};\r\n\r\n/**\r\n * @class MultimediaController\r\n *\r\n * @classdesc\r\n * Multimedia controller is responsible for managing [Media Devices]{@link MediaDevice}, [Ringtones]{@link Ringtone}\r\n * and [Monitors]{@link Monitor} that are used for screen share. <br>\r\n *\r\n * @description This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n *\r\n */\r\nfunction MultimediaController()\r\n{\r\n    this.speakerList    = [];\r\n    this.microphoneList = [];\r\n    this.ringerList     = [];\r\n    this.cameraList     = [];\r\n    this.ringtoneList   = [];\r\n    var m_EventHandlers  = {};\r\n\r\n    cwic.MessageReceiver.addMessageHandler('multimediacapabilitiesstarted', onCapabilitiesStarted.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('multimediacapabilitiesstopped', onCapabilitiesStopped.bind(this));\r\n\r\n    function onCapabilitiesStarted()\r\n    {\r\n        cwic.MessageReceiver.addMessageHandler('multimediadevicechange', mediaDeviceListChanged.bind(this));\r\n        cwic.MessageReceiver.addMessageHandler('ringtonechanged', onRingtoneChanged.bind(this));\r\n        this.refreshMediaDeviceList();\r\n        this.refreshRingtoneList();\r\n    }\r\n\r\n    function onCapabilitiesStopped()\r\n    {\r\n        cwic.MessageReceiver.removeMessageHandler('multimediadevicechange');\r\n\r\n        this.speakerList.length = 0;\r\n        this.cameraList.length = 0;\r\n        this.microphoneList.length = 0;\r\n        this.ringerList.length = 0;\r\n\r\n        var eventHandler = m_EventHandlers['onMediaDeviceListChanged'];\r\n\r\n        if(eventHandler)\r\n        {\r\n            eventHandler();\r\n        }\r\n    }\r\n\r\n    function mediaDeviceListChanged()\r\n    {\r\n        this.refreshMediaDeviceList();\r\n    }\r\n\r\n    function onMediaDeviceListChanged(content)\r\n    {\r\n        var deviceList = content.multimediadevices;\r\n\r\n        this.speakerList.length = 0;\r\n        this.cameraList.length = 0;\r\n        this.microphoneList.length = 0;\r\n        this.ringerList.length = 0;\r\n\r\n        for (var index = 0; index < deviceList.length; ++index)\r\n        {\r\n            var device = deviceList[index];\r\n\r\n            if (device.canPlayout === true)\r\n            {\r\n                var speaker = new cwic.Speaker(device);\r\n                this.speakerList.push(speaker);\r\n            }\r\n\r\n            if(device.canRecord === true)\r\n            {\r\n                var microphone = new cwic.Microphone(device);\r\n                this.microphoneList.push(microphone);\r\n            }\r\n\r\n            if(device.canCapture === true)\r\n            {\r\n                var camera = new cwic.Camera(device);\r\n                this.cameraList.push(camera);\r\n            }\r\n\r\n            if(device.canRing === true)\r\n            {\r\n                var ringer = new cwic.Ringer(device);\r\n                this.ringerList.push(ringer);\r\n            }\r\n        }\r\n\r\n        var eventHandler = m_EventHandlers['onMediaDeviceListChanged'];\r\n\r\n        if(eventHandler)\r\n        {\r\n            eventHandler();\r\n        }\r\n    }\r\n\r\n    function onRingtoneListChanged(content)\r\n    {\r\n        var ringtoneNames = content.ringtones;\r\n        this.ringtoneList = [];\r\n\r\n        for(var index=0; index<ringtoneNames.length; index++)\r\n        {\r\n            var ringtone = new cwic.Ringtone(ringtoneNames[index].name);\r\n            this.ringtoneList.push(ringtone);\r\n        }\r\n\r\n        var eventHandler = m_EventHandlers['onRingtoneListChanged'];\r\n        if(eventHandler)\r\n        {\r\n            eventHandler();\r\n        }\r\n    }\r\n\r\n    function onRingtoneChanged(content)\r\n    {\r\n        var ringtone = new cwic.Ringtone(content.ringtone);\r\n        var eventHandler = m_EventHandlers['onRingtoneChanged'];\r\n        if(eventHandler)\r\n        {\r\n            eventHandler(ringtone);\r\n        }\r\n    }\r\n\r\n    function onMonitorListChanged(content)\r\n    {\r\n        var monitorList = content.monitors;\r\n        var monitors = [];\r\n\r\n        for(var index=0; index < monitorList.length; ++index)\r\n        {\r\n            var monitor = new cwic.Monitor(monitorList[index]);\r\n            monitors.push(monitor);\r\n        }\r\n\r\n        var eventHandler = m_EventHandlers['onMonitorListChanged'];\r\n\r\n        if(eventHandler)\r\n        {\r\n            eventHandler(monitors);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @memberof MultimediaController\r\n     * @method refreshMediaDeviceList\r\n     * @description\r\n     * Refresh the list of available media devices:\r\n     *  - Speakers\r\n     *  - Microphones\r\n     *  - Ringers\r\n     *  - Cameras\r\n     *\r\n     * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n     * @since 11.7.0\r\n     */\r\n    this.refreshMediaDeviceList = function(errorHandler)\r\n    {\r\n        var messageName    = \"getMultimediaDevices\";\r\n        var messageData    = {};\r\n        var successHandler = onMediaDeviceListChanged.bind(this);\r\n\r\n        cwic.MessageSender.sendMessage(messageName, messageData, errorHandler, successHandler);\r\n    };\r\n\r\n    /**\r\n     * @memberof MultimediaController\r\n     * @method refreshRingtoneList\r\n     * @description\r\n     * Refresh the list of available ringtones.\r\n     *\r\n     * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n     * @since 11.7.0\r\n     */\r\n    this.refreshRingtoneList = function(errorHandler)\r\n    {\r\n        var messageType = \"getAvailableRingtones\";\r\n        var messageData = {};\r\n        var successHandler = onRingtoneListChanged.bind(this);\r\n\r\n        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler, successHandler);\r\n    };\r\n\r\n    /**\r\n     * @memberof MultimediaController\r\n     * @method refreshMonitorList\r\n     * @description\r\n     * Refresh the list of connected monitors.\r\n     *\r\n     * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n     * @since 11.7.0\r\n     */\r\n    this.refreshMonitorList = function(errorHandler)\r\n    {\r\n        var messageType    = \"getMonitorList\";\r\n        var messageData    = {};\r\n        var successHandler = onMonitorListChanged.bind(this);\r\n\r\n        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler, successHandler);\r\n    };\r\n\r\n    /**\r\n     * @memberof MultimediaController\r\n     * @method addEventHandler\r\n     * @description\r\n     * Add handler function for multimedia controller's events.\r\n     *\r\n     * @param eventName {String} - Name of the event.\r\n     * @param eventHandler {Function} - Function that will be called when event is fired.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.addEventHandler = function(eventName, eventHandler)\r\n    {\r\n        m_EventHandlers[eventName] = eventHandler;\r\n    };\r\n\r\n    /**\r\n     * @memberof MultimediaController\r\n     * @method removeEventHandler\r\n     * @description\r\n     * Remove handler function for multimedia controller's event.\r\n     *\r\n     * @param eventName {String} - Name of the event.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.removeEventHandler = function(eventName)\r\n    {\r\n        delete m_EventHandlers[eventName];\r\n    };\r\n}\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @member speakerList\r\n * @description\r\n * List of available speakers.\r\n *\r\n * @type {Speaker[]}\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.speakerList = [];\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @member ringerList\r\n * @description\r\n * List of available ringers.\r\n *\r\n * @type {Ringer[]}\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.ringerList = [];\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @member microphoneList\r\n * @description\r\n * List of available microphones.\r\n *\r\n * @type {Microphone[]}\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.microphoneList = [];\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @member cameraList\r\n * @description\r\n * List of available cameras.\r\n *\r\n * @type {Camera[]}\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.cameraList = [];\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @member ringtoneList\r\n * @description\r\n * List of available ringtones.\r\n *\r\n * @type {Array}\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.ringtoneList = [];\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @method selectSpeaker\r\n * @description\r\n * Select new active speaker.\r\n *\r\n * @param speaker {Speaker} - Speaker that will be set as active.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Object - Thrown if speaker is not instance of {@link Speaker}.\r\n *\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.selectSpeaker = function(speaker, errorHandler)\r\n{\r\n    if(!(speaker instanceof cwic.Speaker))\r\n    {\r\n        throw Error(\"Invalid Object\");\r\n    }\r\n\r\n    var messageType = 'setPlayoutDevice';\r\n    var messageData = {\r\n        'clientPlayoutID' : speaker.deviceID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @method selectMicrophone\r\n * @description\r\n * Select new active microphone.\r\n *\r\n * @param microphone {Microphone} - Microphone that will be set as active.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Object - Thrown if microphone is not instance of {@link Microphone}.\r\n *\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.selectMicrophone = function(microphone, errorHandler)\r\n{\r\n    if(!(microphone instanceof cwic.Microphone))\r\n    {\r\n        throw Error(\"Invalid Object\");\r\n    }\r\n\r\n    var messageType = \"setRecordingDevice\";\r\n    var messageData = {\r\n        'clientRecordingID' : microphone.deviceID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @method selectCamera\r\n * @description\r\n * Select new active camera.\r\n *\r\n * @param camera {Camera} - Camera that will be set as active.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Object - Thrown if camera is not instance of {@link Camera}.\r\n *\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.selectCamera = function(camera, errorHandler)\r\n{\r\n    if(!(camera instanceof cwic.Camera))\r\n    {\r\n        throw Error(\"Invalid Object\");\r\n    }\r\n\r\n    var messageType = \"setCaptureDevice\";\r\n    var messageData = {\r\n        'clientCaptureID' : camera.deviceID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @method selectRinger\r\n * @description\r\n * Select new active camera.\r\n *\r\n * @param ringer {Ringer} - Ringer that will be set as active.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Object - Thrown if ringer is not instance of {@link Ringer}.\r\n *\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.selectRinger = function(ringer, errorHandler)\r\n{\r\n    if(!(ringer instanceof cwic.Ringer))\r\n    {\r\n        throw Error(\"Invalid Object\")\r\n    }\r\n\r\n    var messageType = \"setRingerDevice\";\r\n    var messageData = {\r\n        'clientRingerID' : ringer.deviceID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @method playRingtoneOnAllRingers\r\n * @description\r\n * On incoming call, ringtone will be played on all ringer devices. Calling this method will ignore any ringer device\r\n * previously set as active. Once a new ringer device is set as active ringtone will then only play on active ringer\r\n * device.\r\n *\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n */\r\nMultimediaController.prototype.playRingtoneOnAllRingers = function(errorHandler)\r\n{\r\n    var messageType = \"setPlayRingerOnAllDevices\";\r\n    var messageData = {};\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @method selectRingtone\r\n * @description\r\n * Select new active ringtone for incoming calls.\r\n *\r\n * @param ringtone {Ringtone} - Ringtone that will be set as active.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Object - Thrown if ringtone is not instance of {@link Ringtone}.\r\n *\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.selectRingtone = function (ringtone, errorHandler)\r\n{\r\n    if (!(ringtone instanceof cwic.Ringtone))\r\n    {\r\n        throw Error(\"Invalid Object\");\r\n    }\r\n\r\n    var messageType = \"setCurrentRingtone\";\r\n    var messageData = {\r\n        'ringtone' : ringtone.name\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @method selectMonitor\r\n * @description\r\n * Select new active monitor that will be used for screen sharing.\r\n *\r\n * @param monitor {Monitor} - Monitor that will be set as active.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Object - Thrown if monitor is not instance of {@link Monitor}.\r\n *\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.selectMonitor = function(monitor, errorHandler)\r\n{\r\n    if(!(monitor instanceof cwic.Monitor))\r\n    {\r\n        throw Error(\"Invalid Object\");\r\n    }\r\n\r\n    var messageType = \"selectMonitor\";\r\n    var messageData = {\r\n        monitorID : monitor.id\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @method highlightMonitor\r\n * @description\r\n * Highlights monitor by displaying border around its edges.\r\n *\r\n * @param monitor {Monitor} - Monitor that will be highlighted.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Object - Thrown if monitor is not instance of {@link Monitor}.\r\n *\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.highlightMonitor = function (monitor, errorHandler)\r\n{\r\n    if(!(monitor instanceof cwic.Monitor))\r\n    {\r\n        throw Error(\"Invalid Object\");\r\n    }\r\n\r\n    var messageType = \"showMonitorBorderIndicator\";\r\n    var messageData = {\r\n        monitorID : monitor.id\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @method unHighlightMonitor\r\n * @description\r\n * UnHighlights current highlighted monitor by hiding border around its edges.\r\n *\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.unHighlightMonitor = function(errorHandler)\r\n{\r\n    var messageType = \"hideMonitorBorderIndicator\";\r\n    var messageData = {};\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof MultimediaController\r\n * @method setMonitorHighlightColor\r\n * @description\r\n * Set new monitor highlight color.\r\n *\r\n * @param red - Red color value.\r\n * @param green - Green color value.\r\n * @param blue - blue color value.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nMultimediaController.prototype.setMonitorHighlightColor = function(red, green, blue, errorHandler)\r\n{\r\n    var messageType = \"setMonitorBorderIndicatorColor\";\r\n    var messageData = {\r\n        redValue : red,\r\n        greenValue : green,\r\n        blueValue : blue\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n\r\n\r\nmodule.exports.MultimediaController = new MultimediaController();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Multimedia/MultimediaController.js\n// module id = 1\n// module chunks = 0","// System Modules\r\nvar MessageResponseHandlerModule = require('./MessageResponseHandler');\r\nvar LoggerModule                 = require('../Utils/Logger');\r\nvar SystemErrorsModule           = require('./SystemErrors');\r\n\r\nvar cwic = {\r\n    MessageResponseHandler : MessageResponseHandlerModule.MessageResponseHandler,\r\n    Logger                 : LoggerModule.Logger,\r\n    SystemErrors           : SystemErrorsModule.SystemErrors\r\n};\r\n\r\n\r\nfunction MessageReceiver()\r\n{\r\n    var m_MessageHandlers = {};\r\n\r\n    this.addMessageHandler = function(messageType, handlerFunction)\r\n    {\r\n        m_MessageHandlers[messageType] = handlerFunction;\r\n    };\r\n\r\n    this.removeMessageHandler = function(messageType)\r\n    {\r\n        delete m_MessageHandlers[messageType];\r\n    };\r\n\r\n    this.onMessageReceived = function(message)\r\n    {\r\n        if (message.ciscoSDKServerMessage)\r\n        {\r\n            this.onServerMessageReceived(message.ciscoSDKServerMessage);\r\n        }\r\n        else if(message.ciscoChannelServerMessage)\r\n        {\r\n            this.onChannelMessage(message.ciscoChannelServerMessage);\r\n        }\r\n        else\r\n        {\r\n            cwic.Logger.error('Unknown message from plugin: ', message);\r\n        }\r\n    };\r\n\r\n    this.onServerMessageReceived = function(serverMessage)\r\n    {\r\n        var content   = serverMessage.content;\r\n        var error     = serverMessage.error;\r\n        var messageId = serverMessage.replyToMessageId;\r\n        var name      = serverMessage.name;\r\n\r\n        cwic.Logger.debug('Received Message: ' + name, serverMessage);\r\n\r\n        if(error)\r\n        {\r\n            cwic.Logger.debug('Error response for Message: ' + name, serverMessage);\r\n\r\n            if(cwic.MessageResponseHandler.errorHandlerExists(messageId))\r\n            {\r\n                var errorHandler = cwic.MessageResponseHandler.getErrorHandler(messageId);\r\n                errorHandler(cwic.SystemErrors[error]);\r\n                cwic.MessageResponseHandler.removeErrorHandler(messageId);\r\n            }\r\n\r\n            return;\r\n        }\r\n\r\n        if(cwic.MessageResponseHandler.successHandlerExist(messageId))\r\n        {\r\n            cwic.Logger.debug('Success response for Message: ' + name, serverMessage);\r\n\r\n            var successHandler = cwic.MessageResponseHandler.getSuccessHandler(messageId);\r\n            successHandler(content);\r\n        }\r\n\r\n        if(m_MessageHandlers[name])\r\n        {\r\n            var messageHandler = m_MessageHandlers[name];\r\n            messageHandler(content);\r\n        }\r\n    };\r\n\r\n    this.onChannelMessage = function(channelMessage)\r\n    {\r\n        if (channelMessage.name === 'ChannelDisconnect' || channelMessage.name === 'HostDisconnect')\r\n        {\r\n            cwic.Logger.error(\"Connection with add-on has been lost\", \"\");\r\n            var messageHandler = m_MessageHandlers['addonConnectionLost'];\r\n            if(messageHandler)\r\n            {\r\n                messageHandler();\r\n            }\r\n        }\r\n        else\r\n        {\r\n            cwic.Logger.debug(\"Unknown channel message: \" + channelMessage.name);\r\n        }\r\n    };\r\n}\r\n\r\nmodule.exports.MessageReceiver = new MessageReceiver();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/MessageReceiver.js\n// module id = 2\n// module chunks = 0","function MessageResponseHandler()\r\n{\r\n    var m_ErrorMessageHandlers   = {};\r\n    var m_SuccessMessageHandlers = {};\r\n\r\n    this.addErrorHandler = function(messageID, handler)\r\n    {\r\n        m_ErrorMessageHandlers[messageID] = handler;\r\n    };\r\n\r\n    this.addSuccessHandler = function(messageID, handler)\r\n    {\r\n        m_SuccessMessageHandlers[messageID] = handler;\r\n    };\r\n\r\n    this.removeErrorHandler = function(messageID)\r\n    {\r\n        delete m_ErrorMessageHandlers[messageID];\r\n    };\r\n\r\n    this.removeSuccessHandler = function(messageID)\r\n    {\r\n        delete m_SuccessMessageHandlers[messageID];\r\n    };\r\n\r\n    this.errorHandlerExists = function(messageID)\r\n    {\r\n        return m_ErrorMessageHandlers[messageID] ? true : false;\r\n    };\r\n\r\n    this.successHandlerExist = function(messageID)\r\n    {\r\n        return m_SuccessMessageHandlers[messageID] ? true : false;\r\n    };\r\n\r\n    this.getErrorHandler = function(messageID)\r\n    {\r\n        return m_ErrorMessageHandlers[messageID];\r\n    };\r\n\r\n    this.getSuccessHandler = function (messageID)\r\n    {\r\n        return m_SuccessMessageHandlers[messageID];\r\n    }\r\n}\r\n\r\n\r\nmodule.exports.MessageResponseHandler = new MessageResponseHandler();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/MessageResponseHandler.js\n// module id = 3\n// module chunks = 0","var UtilitiesModule = require('./Utilities');\r\n\r\nvar cwic = {\r\n    Utilities : UtilitiesModule.Utilities\r\n};\r\n\r\nvar LogLevels =\r\n{\r\n    debug   : 0,\r\n    info    : 1,\r\n    warning : 2,\r\n    error   : 3\r\n};\r\n\r\nfunction Logger()\r\n{\r\n}\r\n\r\nLogger.prototype.logLevel = 0;\r\n\r\nLogger.prototype.debug = function(message, context)\r\n{\r\n    context = context ? context : \"\";\r\n    if(this.logLevel <= LogLevels.debug)\r\n    {\r\n        var currentTime = new Date();\r\n        var timeStamp   =\r\n            ('0' + currentTime.getHours()).slice(-2) + ':' +\r\n            ('0' + currentTime.getMinutes()).slice(-2) + ':' +\r\n            ('0' + currentTime.getSeconds()).slice(-2) + '.' +\r\n            ('00' + currentTime.getMilliseconds()).slice(-3);\r\n\r\n        if(cwic.Utilities.getBrowserType() === \"InternetExplorer\")\r\n        {\r\n            console.log('[cwic][DEBUG][' + timeStamp + '] ' +  message, context);\r\n        }\r\n        else\r\n        {\r\n            console.log('%c[cwic][DEBUG][' + timeStamp + '] ' +  message, 'color: green', context);\r\n        }\r\n    }\r\n};\r\n\r\nLogger.prototype.info = function(message, context)\r\n{\r\n    context = context ? context : \"\";\r\n    if(this.logLevel <= LogLevels.info)\r\n    {\r\n        var currentTime = new Date();\r\n        var timeStamp   =\r\n            ('0' + currentTime.getHours()).slice(-2) + ':' +\r\n            ('0' + currentTime.getMinutes()).slice(-2) + ':' +\r\n            ('0' + currentTime.getSeconds()).slice(-2) + '.' +\r\n            ('00' + currentTime.getMilliseconds()).slice(-3);\r\n\r\n        if(cwic.Utilities.getBrowserType() === \"InternetExplorer\")\r\n        {\r\n            console.log('[cwic][INFO ][' + timeStamp + '] ' + message, context);\r\n        }\r\n        else\r\n        {\r\n            console.log('%c[cwic][INFO ][' + timeStamp + '] ' + message, 'color: black', context);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nLogger.prototype.warning = function(message, context)\r\n{\r\n    context = context ? context : \"\";\r\n    if(this.logLevel <= LogLevels.warning)\r\n    {\r\n        var currentTime = new Date();\r\n        var timeStamp   =\r\n            ('0' + currentTime.getHours()).slice(-2) + ':' +\r\n            ('0' + currentTime.getMinutes()).slice(-2) + ':' +\r\n            ('0' + currentTime.getSeconds()).slice(-2) + '.' +\r\n            ('00' + currentTime.getMilliseconds()).slice(-3);\r\n\r\n        if(cwic.Utilities.getBrowserType() === \"InternetExplorer\")\r\n        {\r\n            console.log('[cwic][WARNI][' + timeStamp + '] ' +  message, context);\r\n        }\r\n        else\r\n        {\r\n            console.log('%c[cwic][WARNI][' + timeStamp + '] ' + message, 'color: #FF8000', context);\r\n        }\r\n    }\r\n};\r\n\r\n\r\nLogger.prototype.error = function(message, context)\r\n{\r\n    context = context ? context : \"\";\r\n    if(this.logLevel <= LogLevels.error)\r\n    {\r\n        var currentTime = new Date();\r\n        var timeStamp   =\r\n            ('0' + currentTime.getHours()).slice(-2) + ':' +\r\n            ('0' + currentTime.getMinutes()).slice(-2) + ':' +\r\n            ('0' + currentTime.getSeconds()).slice(-2) + '.' +\r\n            ('00' + currentTime.getMilliseconds()).slice(-3);\r\n\r\n        if(cwic.Utilities.getBrowserType() === \"InternetExplorer\")\r\n        {\r\n            console.log('[cwic][ERROR][' + timeStamp + '] ' +  message, context);\r\n        }\r\n        else\r\n        {\r\n            console.log('%c[cwic][ERROR][' + timeStamp + '] ' + message, 'color: red', context);\r\n        }\r\n    }\r\n};\r\n\r\nmodule.exports.Logger = new Logger();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Utils/Logger.js\n// module id = 4\n// module chunks = 0","function Utilities()\r\n{\r\n}\r\n\r\nUtilities.prototype.getBrowserType = function()\r\n{\r\n    var type = 'Unknown';\r\n\r\n    if((navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf('OPR')) != -1 )\r\n    {\r\n        type = 'Opera';\r\n    }\r\n    else if(navigator.userAgent.indexOf(\"Chrome\") != -1 )\r\n    {\r\n        type = 'Chrome';\r\n    }\r\n    else if(navigator.userAgent.indexOf(\"Safari\") != -1)\r\n    {\r\n        type = 'Safari';\r\n    }\r\n    else if(navigator.userAgent.indexOf(\"Firefox\") != -1 )\r\n    {\r\n        type = 'Firefox';\r\n    }\r\n    else if((navigator.userAgent.indexOf(\"MSIE\") != -1 ) || (!!document.documentMode == true )) //IF IE > 10\r\n    {\r\n        type = 'InternetExplorer';\r\n    }\r\n\r\n    return type;\r\n};\r\n\r\nUtilities.prototype.getBrowserVersion = function()\r\n{\r\n    var N= navigator.appName, ua= navigator.userAgent, tem;\r\n    var M= ua.match(/(opera|chrome|safari|firefox|msie)\\/?\\s*(\\.?\\d+(\\.\\d+)*)/i);\r\n    if(M && (tem= ua.match(/version\\/([\\.\\d]+)/i))!= null) M[2]= tem[1];\r\n    M= M? [M[1], M[2]]: [N, navigator.appVersion,'-?'];\r\n    return M[1];\r\n};\r\n\r\nUtilities.prototype.getOSType = function()\r\n{\r\n    var OSName = \"Unknown\";\r\n    if (window.navigator.userAgent.indexOf(\"Windows NT 10.0\")!= -1) OSName=\"Windows 10\";\r\n    if (window.navigator.userAgent.indexOf(\"Windows NT 6.2\") != -1) OSName=\"Windows 8\";\r\n    if (window.navigator.userAgent.indexOf(\"Windows NT 6.1\") != -1) OSName=\"Windows 7\";\r\n    if (window.navigator.userAgent.indexOf(\"Windows NT 6.0\") != -1) OSName=\"Windows Vista\";\r\n    if (window.navigator.userAgent.indexOf(\"Windows NT 5.1\") != -1) OSName=\"Windows XP\";\r\n    if (window.navigator.userAgent.indexOf(\"Windows NT 5.0\") != -1) OSName=\"Windows 2000\";\r\n    if (window.navigator.userAgent.indexOf(\"Mac\")!=-1) OSName=\"Mac\";\r\n\r\n    return OSName;\r\n};\r\n\r\nUtilities.prototype.generateUniqueId = function()\r\n{\r\n    return (new Date()).valueOf().toString() + Math.floor((Math.random() * 10000) + 1).toString();\r\n};\r\n\r\nmodule.exports.Utilities = new Utilities();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Utils/Utilities.js\n// module id = 5\n// module chunks = 0","/**\r\n * @enum SystemError {Enum}\r\n * @description\r\n * These errors are passed in API error handler functions.\r\n *\r\n * @since 11.7.0\r\n */\r\nvar SystemError = {\r\n    /**\r\n     * Error occurred in add-on.\r\n     * @type {String}\r\n     */\r\n    NativeError : \"Error\",\r\n\r\n    /**\r\n     * System not started or fully operational.\r\n     * @type {String}\r\n     */\r\n    OperationFailed : \"OperationFailed\",\r\n\r\n    /**\r\n     * User has not authorized add-on through Access Control Dialogue.\r\n     * @type {String}\r\n     */\r\n    UserNotAuthorized : \"UserNotAuthorized\",\r\n\r\n    /**\r\n     * Invalid arguments passed.\r\n     * @type {String}\r\n     */\r\n    InvalidArguments : \"InvalidArguments\",\r\n\r\n    /**\r\n     * System has no capabilities to execute API call.\r\n     * @type {String}\r\n     */\r\n    CapabilityMissing : \"CapabilityMissing\",\r\n\r\n    /**\r\n     * More then one instance of Add-on is running.\r\n     * @type {String}\r\n     */\r\n    MoreThenOneInstanceRunning : \"MoreThenOneInstanceRunning\",\r\n\r\n    /**\r\n     * Invalid monitor has been used. (Monitor is no longer connected to local machine).\r\n     * @type {String}\r\n     */\r\n    InvalidMonitor : \"InvalidMonitor\",\r\n\r\n    /**\r\n     * Failed to execute operation on conversation that no longer exists.\r\n     * @type {String}\r\n     */\r\n    InvalidConversation : \"InvalidConversation\"\r\n};\r\n\r\nvar SystemErrorAliasMap = {\r\n    eSyntaxError       : \"NativeError\",\r\n    eOperationFailed   : \"OperationFailed\",\r\n    eNotUserAuthorized : \"UserNotAuthorized\",\r\n    eInvalidArgument   : \"InvalidArguments\",\r\n    eCapabilityMissing : \"CapabilityMissing\",\r\n    eLoggedInLock      : \"MoreThenOneInstanceRunning\",\r\n    eInvalidMonitor    : \"InvalidMonitor\",\r\n    eInvalidMonitorID  : \"InvalidMonitor\",\r\n    eInvalidCallID     : \"InvalidConversation\"\r\n};\r\n\r\nmodule.exports.SystemErrors = SystemErrorAliasMap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/SystemErrors.js\n// module id = 6\n// module chunks = 0","// System Modules\r\nvar MessageResponseHandlerModule = require('./MessageResponseHandler');\r\nvar LogModule                    = require('../Utils/Logger');\r\nvar UtilitiesModule              = require('../Utils/Utilities');\r\n\r\nvar cwic = {\r\n    MessageResponseHandler : MessageResponseHandlerModule.MessageResponseHandler,\r\n    Logger                 : LogModule.Logger,\r\n    Utilities              : UtilitiesModule.Utilities\r\n};\r\n\r\nfunction SystemException(message)\r\n{\r\n    this.message = message;\r\n}\r\n\r\nSystemException.prototype = Object.create(Error.prototype);\r\nSystemException.prototype.name = \"cwic.SystemException\";\r\nSystemException.prototype.constructor = SystemException;\r\n\r\n\r\nfunction MessageSender()\r\n{\r\n    var m_EventHandlers = [];\r\n}\r\n\r\nMessageSender.prototype.sendMessage = function(messageType, messageData, errorHandler, successHandler)\r\n{\r\n    if(this.plugin == null)\r\n    {\r\n        throw new SystemException();\r\n    }\r\n\r\n    var messageID = cwic.Utilities.generateUniqueId();\r\n\r\n    if(typeof errorHandler === 'function')\r\n    {\r\n        cwic.MessageResponseHandler.addErrorHandler(messageID, errorHandler);\r\n    }\r\n\r\n    if(typeof successHandler === 'function')\r\n    {\r\n        cwic.MessageResponseHandler.addSuccessHandler(messageID, successHandler);\r\n    }\r\n\r\n    var message = {\r\n        ciscoSDKClientMessage: {\r\n            'messageId': messageID,\r\n            'name': messageType,\r\n            'content': messageData || {}\r\n        }\r\n    };\r\n\r\n    this.plugin.sendMessage(message);\r\n};\r\n\r\nMessageSender.prototype.addEventHandler = function(eventName, eventHandler)\r\n{\r\n    this.eventHandlers[eventName] = eventHandler;\r\n};\r\n\r\nMessageSender.prototype.plugin = null;\r\nMessageSender.prototype.eventHandlers = [];\r\n\r\nmodule.exports.MessageSender = new MessageSender();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/MessageSender.js\n// module id = 7\n// module chunks = 0","// System Modules\r\nvar MessageSenderModule = require('../System/MessageSender');\r\n\r\n// Multimedia Modules\r\nvar DeviceModule = require(\"./Device\");\r\n\r\nvar cwic = {\r\n    MessageSender : MessageSenderModule.MessageSender,\r\n    MediaDevice : DeviceModule.MediaDevice\r\n};\r\n\r\n/**\r\n * @class Speaker\r\n * @classdesc Speaker device plugged into PC.\r\n * @extends {MediaDevice}\r\n * @constructor\r\n *\r\n * @description This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction Speaker(genericDevice)\r\n{\r\n    var deviceInfo = {\r\n        deviceID : genericDevice.clientPlayoutID,\r\n        hardwareID : genericDevice.hardwareID,\r\n        isSelected : genericDevice.isSelectedPlayoutDevice,\r\n        name : genericDevice.playoutName,\r\n        vendorID : genericDevice.vendorID\r\n    };\r\n\r\n    cwic.MediaDevice.call(this, deviceInfo);\r\n\r\n    this.volume = genericDevice.volume;\r\n}\r\n\r\nSpeaker.prototype = Object.create(cwic.MediaDevice.prototype);\r\nSpeaker.prototype.constructor = Speaker;\r\n\r\n/**\r\n * @memberof Speaker\r\n * @member volume\r\n * @description\r\n * Speaker's output volume level.\r\n *\r\n * @type {number}\r\n * @since 11.7.0\r\n */\r\nSpeaker.prototype.volume = 0;\r\n\r\n/**\r\n * @memberof Speaker\r\n * @method setVolume\r\n * @description\r\n * Sets a new output volume level of the ringer.\r\n *\r\n * @param volume {Number} - New volume level that will be set. Allowed values are 0 - 100.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n *\r\n * @throw Invalid Volume Value - Thrown if volume level value is less then 0 or more then 100.\r\n */\r\nSpeaker.prototype.setVolume = function(volume, errorHandler)\r\n{\r\n    if(volume < 0 || volume > 100)\r\n    {\r\n        throw Error(\"Invalid Volume Value\");\r\n    }\r\n\r\n    this.volume = volume;\r\n\r\n    var messageType = \"setCurrentSpeakerVolume\";\r\n    var messageContent = {\r\n        volume : volume\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\nmodule.exports.Speaker = Speaker;\r\n\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Multimedia/Speaker.js\n// module id = 8\n// module chunks = 0","/**\r\n * @class MediaDevice\r\n *\r\n * @description\r\n * This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction MediaDevice(deviceInfo)\r\n{\r\n    this.deviceID   = deviceInfo.deviceID;\r\n    this.hardwareID = deviceInfo.hardwareID;\r\n    this.isSelected = deviceInfo.isSelected;\r\n    this.name       = deviceInfo.name;\r\n    this.vendorID   = deviceInfo.vendorID;\r\n}\r\n\r\n/**\r\n * @memberof MediaDevice\r\n * @memeber deviceID\r\n * @description\r\n * Unique device ID given by operating system.\r\n *\r\n * @type {String}\r\n * @since 11.7.0\r\n */\r\nMediaDevice.prototype.deviceID = null;\r\n\r\n/**\r\n * @memberof MediaDevice\r\n * @memeber hardwareID\r\n * @description\r\n * Unique hardwareID of device.\r\n *\r\n * @type {String}\r\n * @since 11.7.0\r\n */\r\nMediaDevice.prototype.hardwareID = null;\r\n\r\n/**\r\n * @memberof MediaDevice\r\n * @memeber isSelected\r\n * @description\r\n * Indicates whether this device is selected or not.\r\n *\r\n * @type {Boolean}\r\n * @since 11.7.0\r\n */\r\nMediaDevice.prototype.isSelected = null;\r\n\r\n/**\r\n * @memberof MediaDevice\r\n * @memeber name\r\n * @description\r\n * Name of the device.\r\n *\r\n * @type {String}\r\n * @since 11.7.0\r\n */\r\nMediaDevice.prototype.name = null;\r\n\r\n/**\r\n * @memberof MediaDevice\r\n * @memeber vendorID\r\n * @description\r\n * Unique ID for device given by vendor.\r\n *\r\n * @type {String}\r\n * @since 11.7.0\r\n */\r\nMediaDevice.prototype.vendorID = null;\r\n\r\nmodule.exports.MediaDevice = MediaDevice;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Multimedia/Device.js\n// module id = 9\n// module chunks = 0","// System Modules\r\nvar MessageSenderModule = require('../System/MessageSender');\r\n\r\n// Multimedia Modules\r\nvar DeviceModule = require(\"./Device\");\r\n\r\nvar cwic = {\r\n    MessageSender : MessageSenderModule.MessageSender,\r\n    MediaDevice : DeviceModule.MediaDevice\r\n};\r\n\r\n/**\r\n * @class Microphone\r\n * @classdesc Microphone device plugged into PC.\r\n * @extends {MediaDevice}\r\n * @constructor\r\n *\r\n * @description This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction Microphone(genericDevice)\r\n{\r\n    var deviceInfo = {\r\n        deviceID : genericDevice.recordingID,\r\n        hardwareID : genericDevice.hardwareID,\r\n        isSelected : genericDevice.isSelectedRecordingDevice,\r\n        name : genericDevice.recordingName,\r\n        vendorID : genericDevice.vendorID\r\n    };\r\n\r\n    cwic.MediaDevice.call(this, deviceInfo);\r\n\r\n    this.volume = genericDevice.volume;\r\n}\r\n\r\nMicrophone.prototype = Object.create(cwic.MediaDevice.prototype);\r\nMicrophone.prototype.constructor = Microphone;\r\n\r\n/**\r\n * @memberof Microphone\r\n * @member volume\r\n * @description\r\n * Microphone's input volume level.\r\n *\r\n * @type {number}\r\n * @since 11.7.0\r\n */\r\nMicrophone.prototype.volume = 0;\r\n\r\n/**\r\n * @memberof Microphone\r\n * @method setVolume\r\n * @description\r\n * Sets a new input volume level of the microphone.\r\n *\r\n * @param volume {Number} - New volume level that will be set. Allowed values are 0 - 100.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Volume Value - Thrown if volume level value is less then 0 or more then 100.\r\n *\r\n * @since 11.7.0\r\n */\r\nMicrophone.prototype.setVolume = function(volume, errorHandler)\r\n{\r\n    if(volume < 0 || volume > 100)\r\n    {\r\n        throw Error(\"Invalid Volume Value\");\r\n    }\r\n\r\n    this.volume = volume;\r\n\r\n    var messageType = \"setCurrentMicrophoneVolume\";\r\n    var messageContent = {\r\n        volume : volume\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n\r\nmodule.exports.Microphone = Microphone;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Multimedia/Microphone.js\n// module id = 10\n// module chunks = 0","var DeviceModule = require(\"./Device\");\r\n\r\nvar cwic = {\r\n    MediaDevice : DeviceModule.MediaDevice\r\n};\r\n\r\n/**\r\n * @class Camera\r\n * @classdesc Camera device plugged into PC.\r\n * @extends {MediaDevice}\r\n * @constructor\r\n *\r\n * @description This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction Camera(genericDevice)\r\n{\r\n    var deviceInfo = {\r\n        deviceID : genericDevice.captureID,\r\n        hardwareID : genericDevice.hardwareID,\r\n        isSelected : genericDevice.isSelectedCaptureDevice,\r\n        name : genericDevice.captureName,\r\n        vendorID : genericDevice.vendorID\r\n    };\r\n\r\n    cwic.MediaDevice.call(this, deviceInfo);\r\n}\r\n\r\nCamera.prototype = Object.create(cwic.MediaDevice.prototype);\r\nCamera.prototype.constructor = Camera;\r\n\r\nmodule.exports.Camera = Camera;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Multimedia/Camera.js\n// module id = 11\n// module chunks = 0","// System Modules\r\nvar MessageSenderModule = require('../System/MessageSender');\r\n\r\n// Multimedia Modules\r\nvar DeviceModule = require(\"./Device\");\r\n\r\nvar cwic = {\r\n    MessageSender : MessageSenderModule.MessageSender,\r\n    MediaDevice : DeviceModule.MediaDevice\r\n};\r\n\r\n/**\r\n * @class Ringer\r\n * @classdesc Ringer device plugged into PC. Any speaker device can also be a ringer device.\r\n * @extends {MediaDevice}\r\n * @constructor\r\n *\r\n * @description This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction Ringer(genericDevice)\r\n{\r\n    var deviceInfo = {\r\n        deviceID : genericDevice.ringerID,\r\n        hardwareID : genericDevice.hardwareID,\r\n        isSelected : genericDevice.isSelectedRingerDevice,\r\n        name : genericDevice.ringerName,\r\n        vendorID : genericDevice.vendorID\r\n    };\r\n\r\n    cwic.MediaDevice.call(this, deviceInfo);\r\n\r\n    this.volume = genericDevice.volume;\r\n}\r\n\r\nRinger.prototype = Object.create(cwic.MediaDevice.prototype);\r\nRinger.prototype.constructor = Ringer;\r\n\r\n/**\r\n * @memberof Ringer\r\n * @member volume\r\n * @description\r\n * Ringer's output volume level.\r\n *\r\n * @type {number}\r\n * @since 11.7.0\r\n */\r\nRinger.prototype.volume = 0;\r\n\r\n/**\r\n * @memberof Ringer\r\n * @method setVolume\r\n * @description\r\n * Sets a new output volume level of the ringer.\r\n *\r\n * @param volume {Number} - New volume level that will be set. Allowed values are 0 - 100.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Volume Value - Thrown if volume level value is less then 0 or more then 100.\r\n *\r\n * @since 11.7.0\r\n */\r\nRinger.prototype.setVolume = function(volume, errorHandler)\r\n{\r\n    if(volume < 0 || volume > 100)\r\n    {\r\n        throw Error(\"Invalid Volume Value\");\r\n    }\r\n\r\n    this.volume = volume;\r\n\r\n    var messageType = \"setCurrentRingerVolume\";\r\n    var messageContent = {\r\n        volume : volume\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\nmodule.exports.Ringer = Ringer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Multimedia/Ringer.js\n// module id = 12\n// module chunks = 0","// Required Modules\r\n\r\n/**\r\n * @class Ringtone\r\n * @classdesc Sound that will be played on incoming telephony conversation.\r\n * @constructor\r\n *\r\n * @description This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction Ringtone(name)\r\n{\r\n    this.name = name;\r\n}\r\n\r\n/**\r\n * @memberof Ringtone\r\n * @member name\r\n * @description Name of the ringtone.\r\n * @type {string}\r\n * @since 11.7.0\r\n */\r\nRingtone.prototype.name = \"unknown\";\r\n\r\nmodule.exports.Ringtone = Ringtone;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Multimedia/Ringtone.js\n// module id = 13\n// module chunks = 0","/**\r\n * @class Monitor\r\n * @classdesc\r\n * Monitor currently connected to PC.\r\n * @constructor\r\n *\r\n * @description This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction Monitor(monitorInfo)\r\n{\r\n    this.id = monitorInfo.ID;\r\n    this.name = monitorInfo.name;\r\n}\r\n\r\n/**\r\n * @memberof Monitor\r\n * @meber id\r\n * @description\r\n * Unique monitor ID.\r\n * @type {string}\r\n * @since 11.7.0\r\n */\r\nMonitor.prototype.id = \"Unknown\";\r\n\r\n/**\r\n * @memberof Monitor\r\n * @member name\r\n * @description\r\n * Name of the monitor.\r\n * @type {string}\r\n * @since 11.7.0\r\n */\r\nMonitor.prototype.name = \"Unknown\";\r\n\r\nmodule.exports.Monitor = Monitor;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Multimedia/Monitor.js\n// module id = 14\n// module chunks = 0","// System Modules\r\nvar MessageReceiverModule = require('../System/MessageReceiver');\r\nvar MessageSenderModule   = require('../System/MessageSender');\r\n\r\n// Telephony Modules.\r\nvar TelephonyControllerCapabilitiesModule = require('./TelephonyControllerCapabilities');\r\nvar TelephonyConnectionStateModule = require('./TelephonyConnectionState');\r\nvar TelephonyConversationModule = require(\"./TelephonyConversation\");\r\nvar TelephonyDeviceModule       = require(\"./TelephonyDevice\");\r\nvar SoftPhoneModule             = require(\"./SoftPhone\");\r\nvar DeskPhoneModule             = require(\"./DeskPhone\");\r\nvar RemotePhoneModule           = require(\"./RemotePhone\");\r\n\r\n// Utils Modules\r\nvar LoggerModule = require('../Utils/Logger');\r\n\r\nvar cwic = {\r\n    TelephonyControllerCapabilities : TelephonyControllerCapabilitiesModule.TelephonyControllerCapabilities,\r\n    TelephonyConnectionStateMap : TelephonyConnectionStateModule.TelephonyConnectionStateMap,\r\n    TelephonyConversation : TelephonyConversationModule.TelephonyConversation,\r\n    TelephonyDevice       : TelephonyDeviceModule.TelephonyDevice,\r\n    SoftPhone             : SoftPhoneModule.SoftPhone,\r\n    DeskPhone             : DeskPhoneModule.Deskphone,\r\n    RemotePhone           : RemotePhoneModule.RemotePhone,\r\n\r\n    MessageSender         : MessageSenderModule.MessageSender,\r\n    MessageReceiver       : MessageReceiverModule.MessageReceiver,\r\n    Logger                : LoggerModule.Logger\r\n};\r\n\r\n/**\r\n * @class TelephonyController\r\n * @constructor\r\n */\r\nfunction TelephonyController()\r\n{\r\n    var m_EventHandlers = {};\r\n\r\n    cwic.MessageReceiver.addMessageHandler('telephonydeviceschange', onTelephonyDeviceListChanged.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('connectionstatuschange', onConnectionStateChanged.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('connectionfailure', onConnectionFailure.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('conversationCallStateChanged', onConversationCallStateChanged.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('conversationStateChanged', onConversationStateChanged.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('audioCallPickupNotification', onAudioCallPickupNotification.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('visualCallPickupNotification', onVisualCallPickupNotification.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('callPickupError', onCallPickupError.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('telephonyservicechange', onCapabilitiesChanged.bind(this));\r\n\r\n    function onTelephonyDeviceListChanged(content)\r\n    {\r\n        var index;\r\n        var telephonyDevices = content.devices;\r\n\r\n        this.telephonyDevices.length = 0;\r\n\r\n        for(index = 0; index < telephonyDevices.length; ++index)\r\n        {\r\n            var device = telephonyDevices[index];\r\n            var controlMode = device.controlMode;\r\n\r\n            switch(controlMode)\r\n            {\r\n                case \"Deskphone\":\r\n                {\r\n                    var deskPhone = new cwic.DeskPhone(telephonyDevices[index]);\r\n                    this.telephonyDevices.push(deskPhone);\r\n                    break;\r\n                }\r\n                case \"Softphone\":\r\n                {\r\n                    var softPhone = new cwic.SoftPhone(telephonyDevices[index]);\r\n                    this.telephonyDevices.push(softPhone);\r\n                    break;\r\n                }\r\n                case \"ExtendConnect\":\r\n                {\r\n                    var remotePhone = new cwic.RemotePhone(telephonyDevices[index]);\r\n                    this.telephonyDevices.push(remotePhone);\r\n                    break;\r\n                }\r\n            }\r\n\r\n            var eventHandler = m_EventHandlers['onTelephonyDeviceListChanged'];\r\n            if(eventHandler)\r\n            {\r\n                eventHandler();\r\n            }\r\n        }\r\n    }\r\n\r\n    function onConnectionStateChanged(state)\r\n    {\r\n        this.connectionState = cwic.TelephonyConnectionStateMap[state];\r\n\r\n        var eventHandler = m_EventHandlers['onConnectionStateChanged'];\r\n        if(eventHandler)\r\n        {\r\n            eventHandler(this.connectionState);\r\n        }\r\n    }\r\n\r\n    function onConnectionFailure(content)\r\n    {\r\n        var connectionFailure = content;\r\n        cwic.Logger.error(\"Failed to connect with CUCM or connection has been broken. Reason: \" + connectionFailure);\r\n\r\n        var eventHandler = m_EventHandlers['onConnectionFailure'];\r\n        if(eventHandler)\r\n        {\r\n            eventHandler(connectionFailure);\r\n        }\r\n    }\r\n\r\n    function onConversationStateChanged(content)\r\n    {\r\n        var eventHandler = m_EventHandlers['onConversationUpdated'];\r\n\r\n        if(eventHandler)\r\n        {\r\n            var telephonyConversation = new cwic.TelephonyConversation(content);\r\n            eventHandler(telephonyConversation);\r\n        }\r\n    }\r\n\r\n    function onConversationCallStateChanged(content)\r\n    {\r\n        var telephonyConversation = new cwic.TelephonyConversation(content);\r\n        var eventHandler;\r\n\r\n        switch(telephonyConversation.callState)\r\n        {\r\n            case 'OffHook':\r\n                eventHandler = m_EventHandlers['onConversationOutgoing'];\r\n                break;\r\n            case 'Ringin':\r\n                eventHandler = m_EventHandlers['onConversationIncoming'];\r\n                break;\r\n            case 'OnHook':\r\n                eventHandler = m_EventHandlers['onConversationEnded'];\r\n                break;\r\n            case 'Connected':\r\n                eventHandler = m_EventHandlers['onConversationStarted'];\r\n                break;\r\n            default:\r\n                eventHandler = m_EventHandlers['onConversationUpdated'];\r\n        }\r\n\r\n        if(eventHandler)\r\n        {\r\n            eventHandler(telephonyConversation);\r\n        }\r\n    }\r\n\r\n    function onVisualCallPickupNotification(content)\r\n    {\r\n        var notificationInfo = content.notificationInfo;\r\n\r\n        var eventHandler = m_EventHandlers['onVisualCallPickupNotification'];\r\n\r\n        if(eventHandler)\r\n        {\r\n            eventHandler(notificationInfo);\r\n        }\r\n    }\r\n\r\n    function onAudioCallPickupNotification(content)\r\n    {\r\n        var isAudioEnabled = content.isAudioEnabled;\r\n\r\n        var eventHandler = m_EventHandlers['onAudioCallPickupNotification'];\r\n\r\n        if(eventHandler)\r\n        {\r\n            eventHandler(isAudioEnabled);\r\n        }\r\n    }\r\n\r\n    function onCallPickupError(content)\r\n    {\r\n\r\n    }\r\n\r\n    function onCapabilitiesChanged(content)\r\n    {\r\n        var telephonyCapabilities = new cwic.TelephonyControllerCapabilities(content);\r\n        this.capabilities = telephonyCapabilities;\r\n\r\n        this.recentGroupCallPickupNumbers = content.recentGroupCallPickupNumbers ? content.recentGroupCallPickupNumbers : [];\r\n    }\r\n\r\n    /**\r\n     * @memberof TelephonyController\r\n     * @method addEventHandler\r\n     * @description Add handler function for Telephony Controller's event.\r\n     *\r\n     * @param eventName {String} - Name of the event.\r\n     * @param handler {Function} - Function that will be called when event is fired.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.addEventHandler = function(eventName, handler)\r\n    {\r\n        m_EventHandlers[eventName] = handler;\r\n    };\r\n\r\n    /**\r\n     * @memberof TelephonyController\r\n     * @method removeEventHandler\r\n     *\r\n     * @description Remove handler function for TelephonyController's event.\r\n     *\r\n     * @param eventName {String} - Name of the event.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.removeEventHandler = function(eventName)\r\n    {\r\n        delete m_EventHandlers[eventName];\r\n    };\r\n\r\n    /**\r\n     * @memberof TelephonyController\r\n     * @method refreshTelephonyDeviceList\r\n     *\r\n     * @description Send request to client to refresh telephony device list.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.refreshTelephonyDeviceList = function()\r\n    {\r\n        var messageType    = \"getAvailableDevices\";\r\n        var messageData    = {};\r\n        var errorHandler   = null;\r\n        var successHandler = onTelephonyDeviceListChanged.bind(this);\r\n\r\n        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler, successHandler);\r\n    };\r\n}\r\n\r\n/**\r\n * @memberof TelephonyController\r\n * @property telephonyDevices\r\n *\r\n * @description\r\n * List of available telephony devices.\r\n * @type {TelephonyDevice[]}\r\n * @since 11.7.0\r\n */\r\nTelephonyController.prototype.telephonyDevices = [];\r\n\r\n/**\r\n * @memberof TelephonyController\r\n * @member connectionState\r\n *\r\n * @description\r\n * Current connection state with CUCM.\r\n * @type {TelephonyConnectionState}\r\n * @since 11.7.0\r\n */\r\nTelephonyController.prototype.connectionState = \"Disconnected\";\r\n\r\n/**\r\n * @memberof TelephonyController\r\n * @member capabilities\r\n * @description\r\n * List of telephony controller capabilities.\r\n * @type {TelephonyControllerCapabilities}\r\n * @since 11.7.0\r\n */\r\nTelephonyController.prototype.capabilities = null;\r\n\r\n/**\r\n * @memberof TelephonyController\r\n * @member recentGroupCallPickupNumbers\r\n * @description\r\n * List of recently dialed group pickup numbers\r\n * @type {String[]}\r\n * @since 11.7.0\r\n */\r\nTelephonyController.prototype.recentGroupCallPickupNumbers = [];\r\n\r\n/**\r\n * @memberof TelephonyController\r\n * @method TelephonyController#getConnectedTelephonyDevice\r\n * @description Retrieves telephony device that is currently connected with CUCM.\r\n *\r\n * @returns {TelephonyDevice} Currently connected telephony device.\r\n * @since 11.7.0\r\n */\r\nTelephonyController.prototype.getConnectedTelephonyDevice = function()\r\n{\r\n    var telephonyDevice = null;\r\n\r\n    for(var index in this.telephonyDevices)\r\n    {\r\n        if(this.telephonyDevices[index].isSelected)\r\n        {\r\n            telephonyDevice = this.telephonyDevices[index];\r\n            break;\r\n        }\r\n    }\r\n    return telephonyDevice;\r\n};\r\n\r\n/**\r\n * @memberof TelephonyController\r\n * @method startAudioConversation\r\n *\r\n * @description\r\n * Starts new audio conversation. Before calling this function it is necessary to add 'onConversationStarted' event\r\n * handler through addEventHandler in order to receive TelephonyConversation object.\r\n *\r\n * @param number {String} - Number that will be called to start a conversation.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyController.prototype.startAudioConversation = function(number, errorHandler)\r\n{\r\n    var messageType = \"originate\";\r\n    var messageData = {\r\n        recipient : number,\r\n        videoDirection : \"RecvOnly\"\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyController\r\n * @method startVideoConversation\r\n *\r\n * @description\r\n * Starts new video conversation. Before calling this function it is necessary add to 'onConversationStarted' event\r\n * handler through addEventHandler in order to receive TelephonyConversation object.\r\n *\r\n * @param number {String} - Number that will be called to start a conversation.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyController.prototype.startVideoConversation = function(number, errorHandler)\r\n{\r\n    var messageType = \"originate\";\r\n    var messageData = {\r\n        recipient : number,\r\n        videoDirection : \"sendRecv\"\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyController\r\n * @method callPickup\r\n * @description\r\n * Pick up incoming call in call pickup group in which currently connected telephony device's line is associated with.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyController.prototype.callPickup = function(errorHandler)\r\n{\r\n    var messageType = \"callPickup\";\r\n    var messageData = {};\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyController\r\n * @method groupCallPickup\r\n * @description\r\n * Can be used for both direct call pickup and group call pickup. Group call pickup, picks up incoming call in another\r\n * call pickup group. Group number is specified passed as parameter. Direct call pickup, picks up incoming call on the\r\n * specified directory number. Directory number is specified as parameter.\r\n *\r\n * @param number - Group number if used for group call pickup. Directory number if used for direct call pick up.\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyController.prototype.groupCallPickup = function(number, errorHandler)\r\n{\r\n    var messageType = \"groupCallPickup\";\r\n    var messageData = {\r\n        pickupNumber: number\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyController\r\n * @method otherGroupPickup\r\n * @description\r\n * Pick up incoming call, in a group that is associated with group in which currently connected telephony device's line\r\n * is associated with.\r\n *\r\n * @param [errorHandler] - Called if error has occurred in add-on, passes {@link SystemError}.\r\n * @since 11.7.0\r\n */\r\nTelephonyController.prototype.otherGroupPickup = function(errorHandler)\r\n{\r\n    var messageType = \"otherGroupPickup\";\r\n    var messageData = {};\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\nmodule.exports.TelephonyController = new TelephonyController();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Telephony/TelephonyController.js\n// module id = 15\n// module chunks = 0","/**\r\n * @class TelephonyControllerCapabilities\r\n * @classdesc\r\n * List of telephony capabilities.\r\n *\r\n * @description This class cannot be instantiated.\r\n * @since 11.7.0\r\n */\r\nfunction TelephonyControllerCapabilities(capabilites)\r\n{\r\n    this.isHuntGroupEnabled = capabilites.isHuntGroupEnabled;\r\n    this.isCallPickupEnabled = capabilites.isCallPickupEnabled;\r\n    this.isGroupCallPickupEnabled = capabilites.isGroupCallPickupEnabled;\r\n    this.isOtherGroupPickupEnabled = capabilites.isOtherGroupPickupEnabled;\r\n}\r\n\r\n/**\r\n * @memberof TelephonyControllerCapabilities\r\n * @member isHuntGroupEnabled\r\n * @description Indicates whether hunt group feature is enabled or not.\r\n * @type {boolean}\r\n *\r\n * @since 11.7.0\r\n */\r\nTelephonyControllerCapabilities.prototype.isHuntGroupEnabled = false;\r\n\r\n/**\r\n * @memberof TelephonyControllerCapabilities\r\n * @member isCallPickupEnabled\r\n * @description Indicates whether call pickup feature is enabled or not.\r\n * @type {boolean}\r\n *\r\n * @since 11.7.0\r\n */\r\nTelephonyControllerCapabilities.prototype.isCallPickupEnabled = false;\r\n\r\n/**\r\n * @memberof TelephonyControllerCapabilities\r\n * @member isGroupCallPickupEnabled\r\n * @description Indicates whether group call pickup feature is enabled or not.\r\n * @type {boolean}\r\n *\r\n * @since 11.7.0\r\n */\r\nTelephonyControllerCapabilities.prototype.isGroupCallPickupEnabled = false;\r\n\r\n/**\r\n * @memberof TelephonyControllerCapabilities\r\n * @member isOtherGroupPickupEnabled\r\n * @description Indicates whether other group pickup feature is enabled or not.\r\n * @type {boolean}\r\n *\r\n * @since 11.7.0\r\n */\r\nTelephonyControllerCapabilities.prototype.isOtherGroupPickupEnabled = false;\r\n\r\nmodule.exports.TelephonyControllerCapabilities = TelephonyControllerCapabilities;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Telephony/TelephonyControllerCapabilities.js\n// module id = 16\n// module chunks = 0","/**\r\n * @enum TelephonyConnectionState {Enum}\r\n * @description\r\n * Represents connection state between CUCM and telephony device.\r\n *\r\n * @since 11.7.0\r\n */\r\nvar TelephonyConnectionState = {\r\n    /**\r\n     * Connection is established with CUCM.\r\n     * @type {String}\r\n     */\r\n    Connected : \"Connected\",\r\n\r\n    /**\r\n     * Establishing connection with CUCM.\r\n     * @type {String}\r\n     */\r\n    Connecting : \"Connecting\",\r\n\r\n    /**\r\n     * Disconnected from CUCM.\r\n     * @type {String}\r\n     */\r\n    Disconnected : \"Disconnected\"\r\n};\r\n\r\nvar TelephonyConnectionStateMap = {\r\n    \"eReady\"                : \"Connected\",\r\n    \"eIdle\"                 : \"Disconnected\",\r\n    \"eRegistering\"          : \"Connecting\",\r\n    \"eConnectionTerminated\" : \"Disconnected\"\r\n};\r\n\r\nmodule.exports.TelephonyConnectionStateMap = TelephonyConnectionStateMap;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Telephony/TelephonyConnectionState.js\n// module id = 17\n// module chunks = 0","// System Modules\r\nvar MessageReceiverModule = require('../System/MessageReceiver');\r\nvar MessageSenderModule   = require('../System/MessageSender');\r\n\r\n// TelephonyModules\r\nvar TelephonyConversationStatesModule = require('./TelephonyConversationStates');\r\nvar TelephonyConversationCapabilitiesModule = require('./TelephonyConversationCapabilities');\r\n\r\nvar cwic = {\r\n    MessageSender   : MessageSenderModule.MessageSender,\r\n    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n\r\n    TelephonyConversationState : TelephonyConversationStatesModule.TelephonyConversationStates,\r\n    TelephonyConversationCapabilities : TelephonyConversationCapabilitiesModule.TelephonyConversationCapabilities\r\n};\r\n\r\n/**\r\n * @class TelephonyConversation\r\n *\r\n * @static\r\n * @since 11.7.0\r\n *\r\n * @classdesc\r\n * Telephony conversation class can be used to manipulate incoming, ongoing and outcoming conversations. It is the actual\r\n * representation of one telephony call.\r\n *\r\n */\r\nfunction TelephonyConversation(conversation)\r\n{\r\n    this.ID = conversation.callId;\r\n\r\n    // Mapping of video direction to canStartVideo capability\r\n    // TODO: Do this in addon\r\n    var canStartVideo = {\r\n        Inactive : true,\r\n        SendRecv : false,\r\n        SendOnly : false,\r\n        RecvOnly : true\r\n    };\r\n\r\n    // Mapping of video direction to canStopVideo capability\r\n    // TODO: Do this in addon\r\n    var canStopVideo = {\r\n        Inactive : false,\r\n        SendRecv : true,\r\n        SendOnly : true,\r\n        RecvOnly : false\r\n    };\r\n\r\n    this.capabilities = new cwic.TelephonyConversationCapabilities(conversation.capabilities);\r\n    this.capabilities.canStartVideo = canStartVideo[conversation.videoDirection];\r\n    this.capabilities.canStopVideo = canStopVideo[conversation.videoDirection];\r\n\r\n    this.callState = conversation.callState;\r\n    this.states = new cwic.TelephonyConversationState(conversation);\r\n\r\n    // Participant objects\r\n    this.localParticipant = conversation.localParticipant;\r\n    this.maxParticipants  = conversation.maxParticipants;\r\n    this.participants     = conversation.participants;\r\n\r\n\r\n\r\n    this.videoDirection   = conversation.videoDirection;\r\n}\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @member states\r\n * @description\r\n * List of different active/inactive conversation states.\r\n *\r\n * @type {TelephonyConversationStates}\r\n */\r\nTelephonyConversation.prototype.states = null;\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @member capabilities\r\n * @description\r\n * List of capable actions that telephony conversation can perform.\r\n *\r\n * @type {TelephonyConversationCapabilities}\r\n */\r\nTelephonyConversation.prototype.capabilities = null;\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @member callState\r\n * @description\r\n * Current call state of telephony conversation.\r\n *\r\n * @type {String}\r\n */\r\nTelephonyConversation.prototype.callState = null;\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method answerAudio\r\n * @description\r\n * Answers incoming telephony conversation with audio.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.answerAudio = function(errorHandler)\r\n{\r\n    var messageType = \"answer\";\r\n    var messageContent = {\r\n        callId : this.ID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method answerVideo\r\n * @description\r\n * Answers incoming telephony conversation with video.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.answerVideo = function(errorHandler)\r\n{\r\n    var messageType = \"answer\";\r\n    var messageContent = {\r\n        callId : this.ID,\r\n        videoDirection : 'SendRecv'\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method reject\r\n * @description\r\n * Rejects(Immediate Divert) incoming telephony conversation.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.reject = function(errorHandler)\r\n{\r\n    var messageType = \"iDivert\";\r\n    var messageContent = {\r\n        callId : this.ID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method end\r\n * @description\r\n * Ends telephony conversation/\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.end = function(errorHandler)\r\n{\r\n    var messageType = \"endCall\";\r\n    var messageContent = {\r\n        callId : this.ID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method hold\r\n * @description\r\n * Puts telephony conversation on hold.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.hold = function(errorHandler)\r\n{\r\n    var messageType = \"hold\";\r\n    var messageContent = {\r\n        callId : this.ID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method resume\r\n * @description\r\n * Resumes telephony conversation that was previously been put on hold.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.resume = function(errorHandler)\r\n{\r\n    var messageType = \"resume\";\r\n    var messageContent = {\r\n        callId : this.ID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method startVideo\r\n * @description\r\n * Start sending video to other participants.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.startVideo = function(errorHandler)\r\n{\r\n    var messageType = \"setVideoDirection\";\r\n    var messageContent = {\r\n        callId: this.ID,\r\n        videoDirection: \"SendRecv\"\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method stopVideo\r\n * @description\r\n * Stop sending video to to other participants.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.stopVideo = function(errorHandler)\r\n{\r\n    var messageType = \"setVideoDirection\";\r\n    var messageContent = {\r\n        callId: this.ID,\r\n        videoDirection: \"RecvOnly\"\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method muteAudio\r\n * @description\r\n * Mute audio on the telephony conversation.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.muteAudio = function(errorHandler)\r\n{\r\n    var messageType = \"mute\";\r\n    var messageContent = {\r\n        callId : this.ID,\r\n        muteVideo: false,\r\n        muteAudio: true\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method unmuteAudio\r\n * @description\r\n * Unmute audio on the telephony conversation.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.unmuteAudio = function(errorHandler)\r\n{\r\n    var messageType = \"unmute\";\r\n    var messageContent = {\r\n        callId : this.ID,\r\n        unmuteAudio: true\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method muteVideo\r\n * @description\r\n * Mute video on the telephony conversation. When video is muted remote side will still receive video but it will\r\n * only see 'frozen' frame.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.muteVideo = function(errorHandler)\r\n{\r\n    var messageType = \"mute\";\r\n    var messageContent = {\r\n        callId : this.ID,\r\n        muteVideo: true,\r\n        muteAudio: false\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method unmuteVideo\r\n * @description\r\n * Unmute video on the telephony conversation.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.unmuteVideo = function(errorHandler)\r\n{\r\n    var messageType = \"unmute\";\r\n    var messageContent = {\r\n        callId : this.ID,\r\n        unmuteVideo: true\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method transferConversation\r\n * @description\r\n * Initiates conversation transfer to another directory number. In order for transfer to be complete, successive call to\r\n * completeTransfer() must be made.\r\n *\r\n * @param number {Number} - Number to witch conversation will be transferred.\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n *\r\n * @see completeTransfer\r\n */\r\nTelephonyConversation.prototype.transferConversation = function(number, errorHandler)\r\n{\r\n    var messageType = \"transferCall\";\r\n    var messageContent = {\r\n        callId : this.ID,\r\n        transferToNumber : number\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method completeTransfer\r\n * @description\r\n * Completes telephony conversation transfer that was previously initiated.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n *\r\n * @see transferConversation\r\n */\r\nTelephonyConversation.prototype.completeTransfer = function(errorHandler)\r\n{\r\n    var messageType = \"completeTransfer\";\r\n    var messageContent = {\r\n        callId : this.ID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method merge\r\n * @description\r\n * Merge two telephony conversations in conference conversation.\r\n *\r\n * @param conversation {TelephonyConversation} - Conversation that will be merged.\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Object - Thrown if conversation is not instance of {@link TelephonyConversation}.\r\n *\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.merge = function(conversation, errorHandler)\r\n{\r\n    if(!(conversation instanceof TelephonyConversation))\r\n    {\r\n        throw Error(\"Invalid Object\");\r\n    }\r\n\r\n    var messageType = \"joinCalls\";\r\n    var messageContent = {\r\n        callId : this.ID,\r\n        joinCallId : conversation.ID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method startScreenShare\r\n * @description\r\n * Starts sharing of the screen. If this function is called and no screen has been selected for sharing through\r\n * MultimediaController.selectMonitor(), default screen will be selected for sharing. Defaulted screen is the first\r\n * screen retrieved when monitors are being enumerated during plugin initialization or the previously set monitor\r\n * through MultimediaController.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n *\r\n * @see MultimedaiController\r\n */\r\nTelephonyConversation.prototype.startScreenShare = function(errorHandler)\r\n{\r\n    var messageType = \"requestDesktopShare\";\r\n    var messageContent = {\r\n        callId: this.ID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method stopScreenShare\r\n * @description\r\n * Stops sharing of the screen.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.stopScreenShare = function(errorHandler)\r\n{\r\n    var messageType = \"releaseDesktopShare\";\r\n    var messageContent = {\r\n        callId: this.ID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method sendDTMF\r\n * @description\r\n * Send one or more DTMF characters.\r\n *\r\n * @param dtmfDigit{String} - DTMF characters that will be sent.\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.sendDTMF = function(dtmfDigit, errorHandler)\r\n{\r\n    var messageType = \"sendDTMF\";\r\n    var messageContent = {\r\n        callId: this.ID,\r\n        digit: dtmfDigit\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method startRemoteCameraAction\r\n * @description\r\n * Starts remote camera action.\r\n * Once this method is called remote camera will continuously perform specified action. To stop specified\r\n * action {@link TelephonyConversation.stopRemoteCameraAction} needs to be called.\r\n *\r\n * @param action{String} - Action to will be started. For supported camera actions please see {@link RemoteCameraAction}\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.startRemoteCameraAction = function (action, errorHandler)\r\n{\r\n    var messageType = \"startFECCAction\";\r\n    var messageContent = {\r\n        callId: this.ID,\r\n        action: action\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent,errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof TelephonyConversation\r\n * @method stopRemoteCameraAction\r\n * @description\r\n * Stops remote camera action previously started with {@link TelephonyConversation.startRemoteCameraAction}.\r\n *\r\n * @param action{String} - Action to will be stopped. For supported camera actions please see {@link RemoteCameraAction}\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nTelephonyConversation.prototype.stopRemoteCameraAction = function (action, errorHandler)\r\n{\r\n    var messageType = \"stopFECCAction\";\r\n    var messageContent = {\r\n        callId: this.ID,\r\n        action: action\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageContent, errorHandler);\r\n};\r\n\r\nexports.TelephonyConversation = TelephonyConversation;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Telephony/TelephonyConversation.js\n// module id = 18\n// module chunks = 0","/**\r\n * @class TelephonyConversationStates\r\n * @static\r\n *\r\n * @description\r\n * Represents different conversation states that can be present or not.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction TelephonyConversationStates(conversation)\r\n{\r\n    this.isAudioMuted = conversation.audioMuted;\r\n    this.isVideoMuted = conversation.videoMuted;\r\n    this.isLocalSharing = conversation.isLocalSharing;\r\n    this.isRemoteSharing = conversation.isRemoteSharing;\r\n}\r\n\r\n/**\r\n * @property isAudioMuted\r\n * @description\r\n * Indicates if audio is muted or not.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationStates.prototype.isAudioMuted = false;\r\n\r\n/**\r\n * @property isVideoMuted\r\n * @description\r\n * Indicates if video is muted or not.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationStates.prototype.isVideoMuted = false;\r\n\r\n/**\r\n * @property isLocalSharing\r\n * @description\r\n * Indicates if screen is shared or not.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationStates.prototype.isLocalSharing = false;\r\n\r\n/**\r\n * @property isRemoteSharing\r\n * @description\r\n * Indicates if screen is shared by remote participant or not.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationStates.prototype.isRemoteSharing = false;\r\n\r\n\r\nmodule.exports.TelephonyConversationStates = TelephonyConversationStates;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Telephony/TelephonyConversationStates.js\n// module id = 19\n// module chunks = 0","/**\r\n * @class TelephonyConversationCapabilities\r\n * @static\r\n * @description\r\n * List of capabilities that telephony conversation can perform.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction TelephonyConversationCapabilities(capabilities)\r\n{\r\n    this.canAnswer              = capabilities.canAnswerCall;\r\n    this.canEnd                 = capabilities.canEndCall;\r\n    this.canReject              = capabilities.canRejectCall;\r\n    this.canHold                = capabilities.canHold;\r\n    this.canResume              = capabilities.canResume;\r\n    this.canMerge               = capabilities.canJoinAcrossLine;\r\n    this.canTransfer            = capabilities.canDirectTransfer;\r\n    this.canMuteAudio           = capabilities.canMuteAudio;\r\n    this.canUnmuteAudio         = capabilities.canUnmuteAudio;\r\n    this.canMuteVideo           = capabilities.canMuteVideo;\r\n    this.canUnmuteVideo         = capabilities.canUnmuteVideo;\r\n    this.canStartScreenShare    = capabilities.canRequestShare;\r\n    this.canStopScreenShare     = capabilities.canReleaseShare;\r\n    this.canSendDTMF            = capabilities.canSendDigit;\r\n    this.canControlRemoteCamera = capabilities.canFarEndCameraControl;\r\n    this.canCameraTiltUp        = capabilities.canTiltUp;\r\n    this.canCameraTiltDown      = capabilities.canTiltDown;\r\n    this.canCameraPanLeft       = capabilities.canPanLeft;\r\n    this.canCameraPanRight      = capabilities.canPanRight;\r\n    this.canCameraZoomIn        = capabilities.canZoomIn;\r\n    this.canCameraZoomOut       = capabilities.canZoomOut;\r\n    this.canUpdateVideo = capabilities.canUpdateVideoCapability;\r\n}\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canAnswer\r\n * @description\r\n * If true telephony conversation can be answered;\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canAnswer = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canEnd\r\n * @description\r\n * If true telephony conversation can be ended.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canEnd = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canReject\r\n * @description\r\n * If true telephony conversation can be rejected (Immediate Divert).\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canReject = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canHold\r\n * @description\r\n * If true telephony conversation can be put on hold.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canHold = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canResume\r\n * @description\r\n * If true telephony conversation previously put on hold can be resumed.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canResume = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canMerge\r\n * @description\r\n * If true telephony conversation can be merged with another one and form a conference conversation.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canMerge = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canTransfer\r\n * @description\r\n * If true telephony conversation can be transferred to another number.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canTransfer = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canMuteAudio\r\n * @description\r\n * If true telephony conversation's audio can be muted.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canMuteAudio = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canUnmuteAudio\r\n * @description\r\n * If true telephony conversation's audio can be unmuted.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canUnmuteAudio = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canMuteVideo\r\n * @description\r\n * If true telephony conversation's video can be muted.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canMuteVideo = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canUnmuteVideo\r\n * @description\r\n * If true telephony conversation's video can be unmuted.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canUnmuteVideo = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canUpdateVideo\r\n * @description\r\n * If true telephony conversation's video can be started or stopped. This capability is\r\n * used in combination with [canStartVideo]{@link TelephonyConversationCapabilities#canStartVideo} and\r\n * [canStopVideo]{@link TelephonyConversationCapabilities#canStopVideo} capabilities\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canUpdateVideo = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canStartVideo\r\n * @description\r\n * If true telephony conversation's video can be started.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canStartVideo = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canStopVideo\r\n * @description\r\n * If true telephony conversation's video can be stopped.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canStopVideo = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canStopScreenShare\r\n * @description\r\n * If true telephony conversation can stop screen share.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canStopScreenShare = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canStartScreenShare\r\n * @description\r\n * If true telephony conversation can start screen share.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canStartScreenShare = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canSendDTMF\r\n * @description\r\n * If true telephony conversation can send DTMF digits.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canSendDTMF = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canControlRemoteCamera\r\n * @description\r\n * If true remote camera can be controlled.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canControlRemoteCamera = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canCameraTiltUp\r\n * @description\r\n * If true remote camera can be tilted up.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canCameraTiltUp = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canCameraTiltDown\r\n * @description\r\n * If true remote camera can be tilted down.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canCameraTiltDown = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canCameraPanLeft\r\n * @description\r\n * If true remote camera can be panned left.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canCameraPanLeft = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canCameraPanRight\r\n * @description\r\n * If true remote camera can be panned right.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canCameraPanRight = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canCameraZoomIn\r\n * @description\r\n * If true remote camera can zoom in.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canCameraZoomIn = false;\r\n\r\n/**\r\n * @memberof TelephonyConversationCapabilities\r\n * @member canCameraZoomOut\r\n * @description\r\n * If true remote camera can zoom out.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nTelephonyConversationCapabilities.prototype.canCameraZoomOut = false;\r\n\r\nmodule.exports.TelephonyConversationCapabilities = TelephonyConversationCapabilities;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Telephony/TelephonyConversationCapabilities.js\n// module id = 20\n// module chunks = 0","// System Modules\nvar MessageSenderModule = require(\"../System/MessageSender\");\n\nvar cwic = {\n    MessageSender : MessageSenderModule.MessageSender\n};\n\n/**\n * @class TelephonyDevice\n * @classdesc\n * Telephony Device represents abstraction of actual phone device.\n *\n * @description\n * This class cannot be instantiated.\n *\n * @since 11.7.0\n */\nfunction TelephonyDevice(device)\n{\n    this.name                 = device.name;\n    this.controlMode          = device.controlMode;\n    this.description          = device.description;\n    this.type                 = device.modelDescription;\n    this.lineDirectoryNumbers = device.lineDNs;\n    this.activeLine           = device.activeLineNumber;\n    this.isSelected           = device.isSelected;\n    this.huntGroupState       = device.huntGroupState;\n    this.guid                 = device.guid;\n}\n\n/**\n * @memberof TelephonyDevice\n * @member name\n * @description\n * Name of telephony device. Reflects the value set on CUCM.\n *\n * @type {String}\n * @since 11.7.0\n */\nTelephonyDevice.prototype.name = null;\n\n/**\n * @memberof TelephonyDevice\n * @member controlMode\n * @description\n * Mod in which telephony device is controlled: SoftPhone, DeskPhone, RemotePhone\n *\n * @type {String}\n * @since 11.7.0\n */\nTelephonyDevice.prototype.controlMode = null;\n\n/**\n * @memberof TelephonyDevice\n * @member description\n * @description\n * Telephony device's description. Reflects the value set on CUCM.\n * @type {String}\n * @since 11.7.0\n */\nTelephonyDevice.prototype.description = null;\n\n/**\n * @memberof TelephonyDevice\n * @member type\n * @description\n * Telephony device's type. Reflects the value set on CUCM.\n * @type {String}\n * @since 11.7.0\n */\nTelephonyDevice.prototype.type = null;\n\n/**\n * @memberof TelephonyDevice\n * @member lineDirectoryNumbers\n * @description\n * Line directory numbers associated with this device. This property is set only when device is connected to CUCM.\n * List of available lines reflects the ones set up on CUCM.\n *\n * @type {Array}\n * @since 11.7.0\n */\nTelephonyDevice.prototype.lineDirectoryNumbers = null;\n\n/**\n * @memberof TelephonyDevice\n * @member activeLine\n * @description\n * Line that is used by telephony device when it is connected to CUCM.\n *\n * @type {String}\n * @since 11.7.0\n */\nTelephonyDevice.prototype.activeLine = null;\n\n/**\n * @memberof TelephonyDevice\n * @member isSelected\n * @description\n * Tells whether telephony device is connected to CUCM or not.\n *\n * @type {Boolean}\n * @since 11.7.0\n */\nTelephonyDevice.prototype.isSelected = false;\n\n/**\n * @memberof TelephonyDevice\n * @member huntGroupState\n * @description\n * Telephony device's current hunt group state.\n *\n * @type {String}\n * @since 11.7.0\n */\nTelephonyDevice.prototype.huntGroupState = null;\n\n/**\n * @memberof TelephonyDevice\n * @member guid\n * @description\n * Telephony device's GUID.\n *\n * @type {String}\n * @since 11.7.0\n */\nTelephonyDevice.prototype.guid = null;\n\n/**\n * @memberof TelephonyDevice\n * @method connect\n * @description\n * Connect telephony device to CUCM.\n *\n * @since 11.7.0\n */\nTelephonyDevice.prototype.connect = function(){};\n\n/**\n * @memberof TelephonyDevice\n * @method huntGroupLogin\n * @description\n * Login telephony device to hunt group.\n *\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\n * @since 11.7.0\n */\nTelephonyDevice.prototype.huntGroupLogin = function(errorHandler)\n{\n    if(this.huntGroupState === \"LoggedOut\")\n    {\n        var messageType = \"toggleHuntGroupLogin\";\n        var messageData = {\n            deviceGuid : this.guid\n        };\n\n        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\n    }\n};\n\n/**\n * @memberof TelephonyDevice\n * @method huntGroupLogout\n * @description\n * Logout telephony device from hunt group.\n *\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\n * @since 11.7.0\n */\nTelephonyDevice.prototype.huntGroupLogout = function(errorHandler)\n{\n    if(this.huntGroupState === \"LoggedIn\")\n    {\n        var messageType = \"toggleHuntGroupLogin\";\n        var messageData = {\n            deviceGuid : this.guid\n        };\n\n        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\n    }\n};\n\nmodule.exports.TelephonyDevice = TelephonyDevice;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Telephony/TelephonyDevice.js\n// module id = 21\n// module chunks = 0","// Required Modules\r\nvar TelephonyDeviceModule = require(\"./TelephonyDevice\");\r\n\r\n// System Modules\r\nvar MessageSenderModule = require(\"../System/MessageSender\");\r\n\r\nvar cwic = {\r\n    TelephonyDevice : TelephonyDeviceModule.TelephonyDevice,\r\n    MessageSender   : MessageSenderModule.MessageSender\r\n};\r\n\r\n/**\r\n * @class SoftPhone\r\n * @extends {TelephonyDevice}\r\n * @classdesc SoftPhone represents software telephony device.\r\n *\r\n * @description This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction SoftPhone(device)\r\n{\r\n    cwic.TelephonyDevice.call(this, device)\r\n}\r\n\r\nSoftPhone.prototype = Object.create(cwic.TelephonyDevice.prototype);\r\nSoftPhone.prototype.constructor = SoftPhone;\r\n\r\n\r\n/**\r\n * @memberof SoftPhone\r\n * @method connect\r\n * @description\r\n * Connect to and register softphone device with CUCM. If force registration is set to true, and this device is\r\n * registered elsewhere, device will first be disconnected then connected again.\r\n *\r\n * @param isForceRegistration {Boolean} - Flag that tells whether its a force registration or not.\r\n * @throw Invalid Number Of Arguments - Thrown if isForceRegistration is not specified.\r\n *\r\n * @since 11.7.0\r\n */\r\nSoftPhone.prototype.connect = function(isForceRegistration)\r\n{\r\n    if(arguments.length !== 1)\r\n    {\r\n        throw Error(\"Invalid Number of Arguments\");\r\n    }\r\n\r\n    var messageType = \"connect\";\r\n    var messageData = {\r\n        phoneMode: \"Softphone\",\r\n        deviceName: this.name,\r\n        lineDN: \"\",\r\n        forceRegistration: isForceRegistration\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData);\r\n};\r\n\r\n// Module Exports\r\nmodule.exports.SoftPhone = SoftPhone;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Telephony/SoftPhone.js\n// module id = 22\n// module chunks = 0","// Telephony Modules\r\nvar TelephonyDeviceModule = require(\"./TelephonyDevice\");\r\n\r\n// System Modules\r\nvar MessageSenderModule = require('../System/MessageSender');\r\n\r\n\r\nvar cwic = {\r\n    TelephonyDevice : TelephonyDeviceModule.TelephonyDevice,\r\n    MessageSender   : MessageSenderModule.MessageSender\r\n};\r\n\r\n\r\n/**\r\n * @class DeskPhone\r\n * @extends {TelephonyDevice}\r\n * @classdesc\r\n * Deskphone represents physical telephony device. Along with all capabilities of telephony device it can also change\r\n * active line.\r\n *\r\n * @description This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction DeskPhone(device)\r\n{\r\n    cwic.TelephonyDevice.call(this, device)\r\n}\r\n\r\nDeskPhone.prototype = Object.create(cwic.TelephonyDevice.prototype);\r\nDeskPhone.prototype.constructor = DeskPhone;\r\n\r\n/**\r\n * @memberof DeskPhone\r\n * @method selectLine\r\n * @description\r\n * Change active line to a new one.\r\n *\r\n * @param line {String} - A line that will be selected.\r\n *\r\n * @since 11.7.0\r\n */\r\nDeskPhone.prototype.selectLine = function(line)\r\n{\r\n    var messageType = \"connect\";\r\n    var messageData = {\r\n        phoneMode: \"Softphone\",\r\n        deviceName: this.name,\r\n        lineDN: line,\r\n        forceRegistration: false\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData);\r\n};\r\n\r\n/**\r\n * @memberof DeskPhone\r\n * @method connect\r\n * @description\r\n * Connect to and register deskphone device with CUCM. If force registration is set to true, and this device is\r\n * registered elsewhere, device will first be disconnected then connected again.\r\n *\r\n * @param isForceRegistration {Boolean} - Flag that tells whether its a force registration or not.\r\n *\r\n * @throw Invalid Number Of Arguments - Thrown if isForceRegistration is not specified.\r\n *\r\n * @since 11.7.0\r\n */\r\nDeskPhone.prototype.connect = function(isForceRegistration)\r\n{\r\n    if(arguments.length !== 1)\r\n    {\r\n        throw Error(\"Invalid number of arguments\");\r\n    }\r\n\r\n    var messageType = \"connect\";\r\n    var messageData = {\r\n        phoneMode: \"Softphone\",\r\n        deviceName: this.name,\r\n        lineDN: \"\",\r\n        forceRegistration: isForceRegistration\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData);\r\n};\r\n\r\n// Module Exports\r\nmodule.exports.Deskphone = DeskPhone;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Telephony/DeskPhone.js\n// module id = 23\n// module chunks = 0","// Required Modules\r\nvar telephonyDeviceModule = require(\"./TelephonyDevice\");\r\n\r\n// System Modules\r\nvar MessageSenderModule = require('../System/MessageSender');\r\n\r\nvar cwic = {\r\n    TelephonyDevice     : telephonyDeviceModule.TelephonyDevice,\r\n    MessageSender       : MessageSenderModule.MessageSender\r\n};\r\n\r\nRemotePhone.prototype = Object.create(cwic.TelephonyDevice.prototype);\r\nRemotePhone.prototype.constructor = RemotePhone;\r\n\r\n/**\r\n * @class RemotePhone\r\n * @extends {TelephonyDevice}\r\n * @classdesc\r\n * RemotePhone represents remote device that can be connected to CUCM through \"Extened&Connect\" feature.\r\n *\r\n * @description\r\n * This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction RemotePhone(device)\r\n{\r\n    cwic.TelephonyDevice.call(this, device);\r\n\r\n    var m_Number = \"\";\r\n\r\n    this.getNumber = function()\r\n    {\r\n        return m_Number;\r\n    };\r\n\r\n    this.setNumber = function(number)\r\n    {\r\n        m_Number = number;\r\n    };\r\n}\r\n\r\n/**\r\n * @memberof RemotePhone\r\n * @method connect\r\n * @description\r\n * Connect to and register deskphone device with CUCM. If force registration is set to true, and this device is\r\n * registered elsewhere, device will first be disconnected then connected again.\r\n *\r\n * @param number (String} - Number that will be associated with this device (Represents remoteDestinationNumber on CUCM).\r\n * @param isForceRegistration {Boolean} - Flag that tells whether its a force registration or not.\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Number Of Arguments - Thrown if isForceRegistration is not specified.\r\n *\r\n * @since 11.7.0\r\n */\r\nRemotePhone.prototype.connect = function(number, isForceRegistration, errorHandler)\r\n{\r\n    if(arguments.length !== 2)\r\n    {\r\n        throw Error(\"Invalid Number of Arguments\");\r\n    }\r\n\r\n    var messageType = \"selectRemoteDestination\";\r\n    var messageData = {\r\n        deviceName : this.name,\r\n        remoteDestinationNumber : number,\r\n        forceRegistration : isForceRegistration\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof RemotePhone\r\n * @method deleteNumber\r\n * @description\r\n * Delete remote number used for remote phone. Doing this will also disconnect from and unregister remote phone from\r\n * the CUCM.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n *\r\n * @since 11.7.0\r\n */\r\nRemotePhone.prototype.deleteNumber = function(errorHandler)\r\n{\r\n    var messageType = \"deleteRemoteDestination\";\r\n    var messageData = {};\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n\r\n// Module Exports\r\nmodule.exports.RemotePhone = RemotePhone;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Telephony/RemotePhone.js\n// module id = 24\n// module chunks = 0","// Required Modules\r\nvar MessageReceiverModule = require('../System/MessageReceiver');\r\nvar MessageSenderModule   = require('../System/MessageSender');\r\nvar LoggerModule          = require('../Utils/Logger');\r\nvar AuthenticationEnumModule = require('./AuthenticationEnum');\r\n\r\n\r\nvar cwic = {\r\n    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n    MessageSender   : MessageSenderModule.MessageSender,\r\n    Logger          : LoggerModule.Logger,\r\n    AuthenticationState : AuthenticationEnumModule.AuthenticationState,\r\n    AuthenticationError : AuthenticationEnumModule.AuthenticationError,\r\n    AuthenticationStateMap : AuthenticationEnumModule.AuthenticationStateMap,\r\n    AuthenticationErrorMap : AuthenticationEnumModule.AuthenticationErrorMap\r\n};\r\n\r\n\r\n/**\r\n * @class LoginController\r\n * @constructor\r\n */\r\nfunction LoginController()\r\n{\r\n    var m_EventHandlers = {};\r\n    var m_CTIServers    = [];\r\n    var m_CCMCIPServers = [];\r\n    var m_TFTPServers   = [];\r\n    var m_SSORedirectURL = \"\";\r\n    this.signInType    = \"Unknown\";\r\n\r\n    cwic.MessageReceiver.addMessageHandler('lifecyclestatechanged', onLoginStateChanged.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('userprofilecredentialsrequired', onCredentialsRequired.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('userprofileemailaddressrequired', onEmailRequired.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('loggedin', onLoggedIn.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('authenticationresult', onAuthenticationResults.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('ssonavigateto', onSSONavigateRequired);\r\n\r\n    function onEmailRequired()\r\n    {\r\n        if(this.signInType == \"Manual\")\r\n        {\r\n            this.setEmail('dummy@jsdk.com');\r\n        }\r\n        else\r\n        {\r\n            cwic.Logger.info(\"E-mail address is required.\");\r\n            var eventHandler = m_EventHandlers['onEmailRequired'];\r\n            if(eventHandler)\r\n            {\r\n                // TODO Add additional logic here\r\n                eventHandler();\r\n            }\r\n        }\r\n    }\r\n\r\n    function onCredentialsRequired()\r\n    {\r\n        cwic.Logger.info(\"Credentials are required.\");\r\n        var eventHandler = m_EventHandlers['onCredentialsRequired'];\r\n        if(eventHandler)\r\n        {\r\n            eventHandler();\r\n        }\r\n    }\r\n\r\n    function onLoginStateChanged(content)\r\n    {\r\n        var lifecycleState = content;\r\n        var eventHandler   = null;\r\n        var loginState     = \"\";\r\n\r\n        switch(lifecycleState)\r\n        {\r\n            case \"SIGNEDOUT\" :\r\n            {\r\n                eventHandler = m_EventHandlers['onSignedOut'];\r\n                loginState = \"Signed Out\";\r\n                break;\r\n            }\r\n            case \"SIGNINGOUT\" :\r\n            {\r\n                eventHandler = m_EventHandlers['onSigningOut'];\r\n                loginState = \"Signing Out\";\r\n                break;\r\n            }\r\n            case \"SIGNEDIN\" :\r\n            {\r\n                eventHandler = m_EventHandlers['onSignedIn'];\r\n                loginState = \"Signed In\";\r\n                break;\r\n            }\r\n            case \"SIGNINGIN\" :\r\n            {\r\n                eventHandler = m_EventHandlers['onSigningIn'];\r\n                loginState = \"Signing In\";\r\n                break;\r\n            }\r\n            case \"DISCOVERING\" :\r\n            {\r\n                eventHandler = m_EventHandlers['onServiceDiscovering'];\r\n                loginState = \"Discovering Services\";\r\n                break;\r\n            }\r\n            case \"RESETTING\" :\r\n            {\r\n                eventHandler = m_EventHandlers['onDataResetting'];\r\n                loginState = \"Resetting User Data\";\r\n                break;\r\n            }\r\n        }\r\n\r\n        cwic.Logger.info(\"Login state has changed to: \" + loginState + \".\");\r\n\r\n        if(eventHandler)\r\n        {\r\n            eventHandler();\r\n        }\r\n    }\r\n\r\n    function onAuthenticationResults(content)\r\n    {\r\n        var authenticationResult = content.result;\r\n\r\n        var eventParam  = \"\";\r\n        var eventHandler = null;\r\n\r\n        switch(authenticationResult)\r\n        {\r\n            case \"\":\r\n            case \"eNoError\":\r\n                eventHandler = m_EventHandlers[\"onAuthenticationStateChanged\"];\r\n                eventParam = cwic.AuthenticationStateMap[content.status];\r\n                cwic.Logger.info(\"Authentication state has changed to: \" + eventParam);\r\n                break;\r\n            case \"eFailed\":\r\n                eventHandler = m_EventHandlers[\"onAuthenticationFailed\"];\r\n                eventParam = cwic.AuthenticationErrorMap[content.status];\r\n                cwic.Logger.warning(\"Authentication failed! Reason: \" + eventParam);\r\n                break;\r\n        }\r\n\r\n        if(eventHandler)\r\n        {\r\n            eventHandler(eventParam);\r\n        }\r\n    }\r\n\r\n    function onLoggedIn()\r\n    {\r\n        var eventHandler = m_EventHandlers['onLoggedIn'];\r\n        if(eventHandler)\r\n        {\r\n            eventHandler();\r\n        }\r\n    }\r\n\r\n    function onSSONavigateRequired(content)\r\n    {\r\n        cwic.Logger.info(\"SSO Navigation required.\");\r\n        var eventHandler = m_EventHandlers['onSSONavigationRequired'];\r\n        if(eventHandler)\r\n        {\r\n            // Not a valid URL for sdk client that is received from JCF.\r\n            // We need to replace client_id parameter in SSOUrl with a valid client ID.\r\n            var SSOUrl = content;\r\n\r\n            // Regex for finding client id.\r\n            var regex = new RegExp(\"client_id=[A-Za-z0-9]*\");\r\n\r\n            // Valid client id for SDK client.\r\n            var SSOClientID = 'C69908c4f345729af0a23cdfff1d255272de942193e7d39171ddd307bc488d7a1';\r\n\r\n            var url = SSOUrl.replace(regex, \"client_id=\" + SSOClientID);\r\n\r\n            if(m_SSORedirectURL !== \"\")\r\n            {\r\n                url += \"&redirect_uri=\" + encodeURIComponent(m_SSORedirectURL);\r\n            }\r\n\r\n            eventHandler(url);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @memberof LoginController\r\n     * @method addEventHandler\r\n     * @description Add handler function for Login Controller's event.\r\n     *\r\n     * @param eventName {String} - Name of the event.\r\n     * @param eventHandler {Function} - Function that will be called when event is fired.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.addEventHandler = function(eventName, eventHandler)\r\n    {\r\n        m_EventHandlers[eventName] = eventHandler;\r\n    };\r\n\r\n    /**\r\n     * @memberof LoginController\r\n     * @method removeEventHandler\r\n     * @description Remove handler function for Login Controller's event.\r\n     *\r\n     * @param eventName {String} - Name of the event for which handler will be removed.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.removeEventHandler = function(eventName)\r\n    {\r\n        delete m_EventHandlers[eventName];\r\n    };\r\n\r\n    /**\r\n     * @memberof LoginController\r\n     * @method setSSORedirectURL\r\n     * @description\r\n     * Set URL that will be used as a redirection once a successful authentication has been performed with\r\n     * identity provider.\r\n     *\r\n     * @param redirectURL {String} - URL that will be set.\r\n     * @since 11.7.0\r\n     */\r\n    this.setSSORedirectURL = function(redirectURL)\r\n    {\r\n        m_SSORedirectURL = redirectURL;\r\n    };\r\n\r\n    /**\r\n     * @memberof LoginController\r\n     * @method setCTIServers\r\n     * @description\r\n     * Set up to a maximum of 3 CTI servers.\r\n     *\r\n     * @param CTIServers {Array} - List of CTI servers to be set\r\n     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n     *\r\n     * @throw Invalid Object - Thrown if CTIServers is not an array.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.setCTIServers = function(CTIServers, errorHandler)\r\n    {\r\n        if(!(CTIServers instanceof Array))\r\n        {\r\n            throw Error(\"Invaild Object\");\r\n        }\r\n        if(CTIServers.length > 3)\r\n        {\r\n            throw \"Server List Size Exceeds Maximum Value.\"\r\n        }\r\n\r\n        m_CTIServers = CTIServers;\r\n\r\n        var messageType = \"setProperty\";\r\n        var messageData = {CtiAddressList : CTIServers};\r\n\r\n        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n    };\r\n\r\n    /**\r\n     * @memberof LoginController\r\n     * @method setTFTPServers\r\n     * @description\r\n     * Set up to a maximum of 3 TFTP servers.\r\n     *\r\n     * @param TFTPServers {Array} - List of TFTP servers to be set\r\n     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n     *\r\n     * @throw Invalid Object - Thrown if TFTPServers is not an array.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.setTFTPServers = function(TFTPServers, errorHandler)\r\n    {\r\n        if(!(TFTPServers instanceof Array))\r\n        {\r\n            throw Error(\"Invaild Object\");\r\n        }\r\n        if(TFTPServers.length > 3)\r\n        {\r\n            throw \"Server List Size Exceeds Maximum Value.\"\r\n        }\r\n\r\n        m_TFTPServers = TFTPServers;\r\n        var messageType = \"setProperty\";\r\n        var messageData = {TftpAddressList : TFTPServers};\r\n\r\n        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n    };\r\n\r\n    /**\r\n     * @memberof LoginController\r\n     * @method setCUCMPServers\r\n     * @description\r\n     * Set up to a maximum of 3 CUCM servers.\r\n     *\r\n     * @param CUCMServers {Array} - List of CUCM servers to be set\r\n     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n     *\r\n     * @throw Invalid Object - Thrown if CUCMServers is not an array.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.setCUCMServers = function (CUCMServers, errorHandler)\r\n    {\r\n        if(!(CUCMServers instanceof Array))\r\n        {\r\n            throw Error(\"Invaild Object\");\r\n        }\r\n        if(CUCMServers.length > 3)\r\n        {\r\n            throw \"Server List Size Exceeds Maximum Value.\"\r\n        }\r\n\r\n        m_CCMCIPServers = CUCMServers;\r\n        var messageType = \"setProperty\";\r\n        var messageData = {CcmcipAddressList : CUCMServers};\r\n\r\n        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n    };\r\n}\r\n\r\n/**\r\n * @memberof LoginController\r\n * @method signIn\r\n * @description\r\n * Performs manual sign in. In order for sign in to be successful credentials and servers needs to be setup properly.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n *\r\n * @since 11.7.0\r\n */\r\nLoginController.prototype.signIn = function(errorHandler)\r\n{\r\n    this.signInType = \"Manual\";\r\n\r\n    var messageType = \"startSignIn\";\r\n    var messageData = {\r\n        manualSettings : true\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof LoginController\r\n * @method signOut\r\n * @description\r\n * Perform sign out.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n *\r\n * @since 11.7.0\r\n */\r\nLoginController.prototype.signOut = function(errorHandler)\r\n{\r\n    var messageType = \"logout\";\r\n    var messageData = {};\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof LoginController\r\n * @method startDiscovery\r\n * @description\r\n * Start service discovery lifecycle.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nLoginController.prototype.startDiscovery = function(errorHandler)\r\n{\r\n    this.signInType = \"Discovery\";\r\n    var messageType = \"startSignIn\";\r\n    var messageData = {\r\n        manualSettings : false\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof LoginController\r\n * @method setEmail\r\n * @description\r\n * Set email address that will be used for service discovery. Should be called when \"onEmailRequired\" event is fired.\r\n *\r\n * @param email {String} - E-mail address to be set.\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nLoginController.prototype.setEmail = function(email, errorHandler)\r\n{\r\n    var messageType = \"setUserProfileEmailAddress\";\r\n    var messageData = {\r\n        email : email\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof LoginController\r\n * @method setCredentials\r\n * @description\r\n * Set credentials that will be used in login process. Should be called when \"onCredentialsRequired\" event is fired.\r\n *\r\n * @param username {String} - Username to be set.\r\n * @param password {String} - Password to be set.\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nLoginController.prototype.setCredentials = function(username, password, errorHandler)\r\n{\r\n    var messageType = \"setUserCredentials\";\r\n    var messageData = {\r\n        username: username,\r\n        password: password\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof LoginController\r\n * @method resetUserData\r\n * @description\r\n * Erases all user specific data that was cached in add-on.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nLoginController.prototype.resetUserData = function(errorHandler)\r\n{\r\n    var messageType = \"resetData\";\r\n    var messageData = {};\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof LoginController\r\n * @method setSSOTokenUri\r\n * @description\r\n * Set SSO token uri that was retrieved from identity provided.\r\n *\r\n * @param uri {String} - Token uri that will be set.\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n *\r\n * @since 11.7.0\r\n */\r\nLoginController.prototype.setSSOTokenURI = function(uri, errorHandler)\r\n{\r\n    var messageType = \"ssoNavigationCompleted\";\r\n    var messageData = {\r\n        result: 200,\r\n        url: uri,\r\n        document: ''\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof LoginController\r\n * @method cancelSSO\r\n * @description\r\n * Cancel ongoing SSO procedure.\r\n *\r\n * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n * @since 11.7.0\r\n */\r\nLoginController.prototype.cancelSSO = function(errorHandler)\r\n{\r\n    var messageType = \"cancelSingleSignOn\";\r\n    var messageData = {};\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\nmodule.exports.LoginController = new LoginController();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Login/LoginController.js\n// module id = 25\n// module chunks = 0","/**\r\n * @enum AuthenticationState {Enum}\r\n * @description\r\n * Different authentication states that can occur when trying to connect to CUCM.\r\n *\r\n * @since 11.7.0\r\n */\r\nvar AuthenticationState = {\r\n    /**\r\n     * Initial state before authentication attempt has occurred.\r\n     * @type {String}\r\n     */\r\n    NotAuthenticated : \"NotAuthenticated\",\r\n\r\n    /**\r\n     * Authentication with CUCM is in progress.\r\n     * @type {String}\r\n     */\r\n    InProgress       : \"InProgress\",\r\n\r\n    /**\r\n     * Successfully authenticated with CUCM.\r\n     * @type {String}\r\n     */\r\n    Authenticated    : \"Authenticated\"\r\n};\r\n\r\n/**\r\n * @enum AuthenticationError {Enum}\r\n * @description\r\n * Different authentication errors that can occur during authentication process with CUCM.\r\n *\r\n * @since 11.7.0\r\n */\r\nvar AuthenticationError = {\r\n    /**\r\n     *  The last attempt at authentication with CUCM failed because of invalid configuration. The CCMIP server\r\n     *  was incorrect.\r\n     *  @type {String}\r\n     */\r\n    InvalidConfig             : \"InvalidConfiguration\",\r\n\r\n    /**\r\n     * The last attempt at authentication with CUCM failed because the users credentials are incorrect.\r\n     * @type {String}\r\n     */\r\n    InvalidCredentials        : \"InvalidCredentials\",\r\n\r\n    /**\r\n     * The last attempt at authentication with CUCM failed because the authentication token was invalid.\r\n     * @type {String}\r\n     */\r\n    InvalidToken              : \"InvalidToken\",\r\n\r\n    /**\r\n     * The last attempt at authentication with CUCM failed because the user rejected an invalid server certificate.\r\n     * @type {String}\r\n     */\r\n    ServerCertificateRejected : \"ServerCertificateRejected\",\r\n\r\n    /**\r\n     * The last attempt at authentication with CUCM failed because of an error with the client's certificate.\r\n     * @type {String}\r\n     */\r\n    ClientCertificateError    : \"ClientCertificateError\",\r\n\r\n    /**\r\n     * The last attempt at authentication with CUCM failed because no credentials are configured.\r\n     * @type {String}\r\n     */\r\n    NoCredentialsConfigured   : \"NoCredentialsConfigured\",\r\n\r\n    /**\r\n     * Unable to connect to CUCM.\r\n     * @type {String}\r\n     */\r\n    CouldNotConnect           : \"CouldNotConnect\",\r\n\r\n    /**\r\n     * The last attempt at authentication failed.\r\n     * @type {String}\r\n     */\r\n    Failed                    : \"Failed\",\r\n\r\n    /**\r\n     * TLS/SSL Connection Error.\r\n     * @type {String}\r\n     */\r\n    SSLConnectError           : \"SSLConnectionError\",\r\n\r\n    /**\r\n     * Unknown authentication failure.\r\n     * @type {String}\r\n     */\r\n    Unknown                   : \"Unknown\"\r\n};\r\n\r\nvar AuthenticationStateMap  = {\r\n    eAuthenticated   : \"Authenticated\",\r\n    eInProgress      : \"InProgress\",\r\n    eNotAuthenticated: \"NotAuthenticated\"\r\n};\r\n\r\nvar AuthenticationErrorMap = {\r\n    eNoServersConfigured       : \"InvalidConfiguration\",\r\n    eCredentialsRejected       : \"InvalidCredentials\",\r\n    eInvalidToken              : \"InvalidToken\",\r\n    eServerCertificateRejected : \"ServerCertificateRejected\",\r\n    eClientCertificateError    : \"ClientCertificateError\",\r\n    eNoCredentialsConfigured   : \"NoCredentialsConfigured\",\r\n    eCouldNotConnect           : \"CouldNotConnect\",\r\n    eFailed                    : \"Failed\",\r\n    eSSLConnectError           : \"SSLConnectionError\",\r\n    \"\"                         : \"Unknown\"\r\n};\r\n\r\nmodule.exports.AuthenticationState = AuthenticationState;\r\nmodule.exports.AuthenticationError = AuthenticationError;\r\nmodule.exports.AuthenticationStateMap = AuthenticationStateMap;\r\nmodule.exports.AuthenticationErrorMap = AuthenticationErrorMap;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Login/AuthenticationEnum.js\n// module id = 26\n// module chunks = 0","// Required Modules\r\nvar MessageReceiverModule  = require(\"./MessageReceiver\");\r\nvar MessageSenderModule    = require(\"./MessageSender\");\r\nvar ChromeExtensionModule  = require(\"./ChromeExtension\");\r\nvar FirefoxExtensionModule = require(\"./FirefoxExtension\");\r\nvar NPAPIPluginModule      = require(\"./NPAPIPlugin\");\r\nvar ActiveXControlModule   = require(\"./ActiveXControl\");\r\nvar VersionModule          = require(\"./Version\");\r\nvar LoggerModule           = require(\"../Utils/Logger\");\r\nvar UtilitesModule         = require(\"../Utils/Utilities\");\r\nvar SystemControllerCapabilitiesModule = require(\"./SystemControllerCapabilities\");\r\n\r\nvar cwic = {\r\n    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n    MessageSender   : MessageSenderModule.MessageSender,\r\n\r\n    ChromeExtension  : ChromeExtensionModule.ChromeExtension,\r\n    FirefoxExtension : FirefoxExtensionModule.FirefoxExtension,\r\n    NPAPIPlugin      : NPAPIPluginModule.NPAPIPlugin,\r\n    ActiveXControl   : ActiveXControlModule.ActiveXControl,\r\n\r\n    Logger  : LoggerModule.Logger,\r\n    Utilities : UtilitesModule.Utilities,\r\n    Version : VersionModule.Version,\r\n    version : VersionModule.cwicVersion,\r\n\r\n    SystemControllerCapabilities : SystemControllerCapabilitiesModule.SystemControllerCapabilities\r\n};\r\n\r\n/**\r\n * @class SystemController\r\n * @classdesc\r\n * Controller responsible for initializing CWIC, and notifying of various system events. CWIC global capabilities can\r\n * also be retrieved once the CWIC has been initialized.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction SystemController()\r\n{\r\n    var m_EventHandlers = {};\r\n    var m_Capabilities  = {};\r\n    var m_ClientID      = cwic.Utilities.generateUniqueId();\r\n    var m_Version       = {};\r\n    var m_Plugin        = null;\r\n    this.cwicVersion = \"REL.MAJ.MIN.BUILD\";\r\n    this.addonVersion = \"Unknown\";\r\n    this.systemRelease = \"Unknown\";\r\n    this.platformOS = \"Unknown\";\r\n\r\n    cwic.MessageReceiver.addMessageHandler('init', onCwicInitialized.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('userauthorized', onUserAuthorized.bind(this));\r\n    cwic.MessageReceiver.addMessageHandler('addonConnectionLost', onAddonConnectionLost.bind(this));\r\n\r\n    function onCwicInitialized(content)\r\n    {\r\n        m_Capabilities = new cwic.SystemControllerCapabilities(content.capabilities);\r\n        this.addonVersion = content.version.plugin;\r\n        this.systemRelease = content.version.system_release;\r\n        this.platformOS = content.system.platform;\r\n\r\n        if(this.addonVersion !== this.cwicVersion)\r\n        {\r\n            cwic.Logger.warning(\"Cwic version and add-on version miss-match\");\r\n        }\r\n\r\n        cwic.Logger.info(\"System Initialized.\");\r\n\r\n        if(m_EventHandlers['onInitialized'])\r\n        {\r\n            var onInitializedCallback = m_EventHandlers['onInitialized'];\r\n            onInitializedCallback();\r\n        }\r\n    }\r\n\r\n    function onUserAuthorized(content)\r\n    {\r\n        var eventName;\r\n        if(content === true)\r\n        {\r\n            eventName = 'onUserAuthorized';\r\n        }\r\n        else\r\n        {\r\n            eventName = 'onUserAuthorizationRejected';\r\n        }\r\n\r\n        var eventHandler = m_EventHandlers[eventName];\r\n        if(eventHandler)\r\n        {\r\n            eventHandler();\r\n        }\r\n    }\r\n\r\n    function onAddonConnectionLost()\r\n    {\r\n        var eventHandler = m_EventHandlers['onAddonConnectionLost'];\r\n        m_Plugin.uninitialize();\r\n        m_Plugin = null;\r\n\r\n        if(eventHandler)\r\n        {\r\n            eventHandler();\r\n        }\r\n    }\r\n\r\n    function initialize(errorHandler)\r\n    {\r\n        cwic.Logger.info(\"System Initializing.\");\r\n\r\n        var browserType = cwic.Utilities.getBrowserType();\r\n\r\n        switch(browserType)\r\n        {\r\n            case \"Chrome\":\r\n                m_Plugin = new cwic.ChromeExtension();\r\n                break;\r\n            case \"Firefox\":\r\n                if(cwic.Utilities.getBrowserVersion() >= 50)\r\n                {\r\n                    m_Plugin = new cwic.FirefoxExtension(m_ClientID);\r\n                }\r\n                else\r\n                {\r\n                    m_Plugin = new cwic.NPAPIPlugin(m_ClientID);\r\n                }\r\n                break;\r\n            case \"Safari\":\r\n                m_Plugin = new cwic.NPAPIPlugin(m_ClientID);\r\n                break;\r\n            case \"InternetExplorer\":\r\n                m_Plugin = new cwic.ActiveXControl(m_ClientID);\r\n                break;\r\n            default:\r\n                throw Error(\"Unsupported Browser\");\r\n        }\r\n        cwic.Logger.info(\"Detected \" + browserType + \" browser.\");\r\n\r\n        m_Plugin.onInitializeError = errorHandler;\r\n        m_Plugin.initialize();\r\n    }\r\n\r\n    /**\r\n     * @memberof SystemController\r\n     * @method getInstanceID\r\n     * @description\r\n     * Retrieve unique instance ID of CWIC library.\r\n     * @returns {String} Unique instance id.\r\n     * @since 11.7.0\r\n     */\r\n    this.getInstanceID = function ()\r\n    {\r\n        return m_ClientID;\r\n    };\r\n\r\n    /**\r\n     * @memberof SystemController\r\n     * @method getCapabilities\r\n     * @description\r\n     * Retrieve CWIC capability list.\r\n     * @returns {SystemControllerCapabilities}.\r\n     * @since 11.7.0\r\n     */\r\n    this.getCapabilities = function()\r\n    {\r\n        return m_Capabilities;\r\n    };\r\n\r\n    /**\r\n     * @memberof SystemController\r\n     * @method getVersion\r\n     * @description\r\n     * Retrieve CWIC library version.\r\n     *\r\n     * @returns {String}.\r\n     * @since 11.7.0\r\n     */\r\n    this.getVersion = function()\r\n    {\r\n        return m_Version;\r\n    };\r\n\r\n    /**\r\n     * @memberof SystemController\r\n     * @method setLoggingLevel\r\n     * @description\r\n     * Set new logging level. Possible Values:\r\n     * <br>\r\n     * <ul>\r\n     *     <li> 0 - Debug, this logging level is used for debugging purposes of JSDK team.\r\n     *     <li> 1 - Info, default value for log level. Logs main CWIC events.\r\n     *     <li> 2 - Warning, logs errors that are not critical (the ones that could be expected of improper use of API)\r\n     *     <li> 3 - Error, logs critical errors\r\n     * </ul>\r\n     *\r\n     * @param level {Number} - Logging level that will be set.\r\n     * @since 11.7.0\r\n     */\r\n    this.setLoggingLevel = function(level)\r\n    {\r\n        cwic.Logger.logLevel = level;\r\n    };\r\n\r\n    /**\r\n     * @memberof SystemController\r\n     * @method addEventHandler\r\n     * @description Add handler function for System Controller's event.\r\n     *\r\n     * @param eventName {String} - Name of the event.\r\n     * @param handler {Function} - Function that will be called when event is fired.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.addEventHandler = function(eventName, handlerFunction)\r\n    {\r\n        m_EventHandlers[eventName] = handlerFunction;\r\n    };\r\n\r\n    /**\r\n     * @memberof SystemController\r\n     * @method removeEventHandler\r\n     *\r\n     * @description Remove handler function for System Controller's event.\r\n     *\r\n     * @param eventName {String} - Name of the event.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.removeEventHandler = function(eventName)\r\n    {\r\n        delete m_EventHandlers[eventName];\r\n    };\r\n\r\n    /**\r\n     * @memberof SystemController\r\n     * @method initialize\r\n     *\r\n     * @description\r\n     * Initializes CWIC library. Initializes NPAPI Plugin (Internet Explorer, Safara, Mozzila Firefox) or Chrome Plugin\r\n     * (Google Chrome). In order to use any other API call from library CWIC needs to be initialized first.\r\n     *\r\n     * @throw Unsupported Browser - Thrown if initialize is called in unsupported browser.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.initialize = function ()\r\n    {\r\n        if(document.hidden)\r\n        {\r\n            function onDocumentShown()\r\n            {\r\n                if(!document.hidden)\r\n                {\r\n                    initialize();\r\n                    document.removeEventListener('visibilitychange', onDocumentShown);\r\n                }\r\n            }\r\n\r\n            document.addEventListener('visibilitychange', onDocumentShown);\r\n        }\r\n        else\r\n        {\r\n            initialize(m_EventHandlers['onInitializationError']);\r\n        }\r\n    };\r\n}\r\n\r\nmodule.exports.SystemController = new SystemController();\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/SystemController.js\n// module id = 27\n// module chunks = 0","// Required Modules\r\nvar ExtensionModule = require(\"./Plugin\");\r\nvar MessageSenderModule = require(\"./MessageSender\");\r\nvar MessageReceiverModule = require(\"./MessageReceiver\");\r\nvar LoggerModule = require(\"../Utils/Logger\");\r\n\r\nvar cwic = {\r\n    Plugin : ExtensionModule.Plugin,\r\n    MessageSender : MessageSenderModule.MessageSender,\r\n    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n    Logger : LoggerModule.Logger\r\n};\r\n\r\nfunction ChromeExtension()\r\n{\r\n    this.type = \"ChromeExtension\";\r\n}\r\n\r\nChromeExtension.prototype = Object.create(cwic.Plugin.prototype);\r\nChromeExtension.prototype.constructor = ChromeExtension;\r\n\r\nChromeExtension.prototype.initialize = function()\r\n{\r\n    cwic.Logger.info('Initializing Chrome extension.');\r\n    var extension;\r\n    var extensionScript = document.createElement('script');\r\n  //  var extensionID     = \"ppbllmlcmhfnfflbkbinnhacecaankdh\";\r\n\tvar extensionID     = \"mbhnoblcplfcookpoennihpndjobapeo\";\r\n  \r\n    extensionScript.id      = extensionID;\r\n    extensionScript.src     = 'chrome-extension://' + extensionID + '/cwic_plugin.js';\r\n    extensionScript.onload  = onExtensionLoaded.bind(this);\r\n    extensionScript.onerror = onExtensionError.bind(this);\r\n\r\n    document.head.appendChild(extensionScript);\r\n\r\n    function onExtensionLoaded()\r\n    {\r\n        cwic.Logger.info('Chrome extension has been initialized.');\r\n        var extension = cwic_plugin;\r\n\r\n        this.version = extension.version;\r\n        this.sendMessage = extension.sendRequest;\r\n\r\n        var settings = {\r\n            //cwicExtId: 'ppbllmlcmhfnfflbkbinnhacecaankdh',\r\n\t\t\tcwicExtId: 'mbhnoblcplfcookpoennihpndjobapeo',\r\n            verbose: true\r\n        };\r\n\r\n        cwic.MessageSender.plugin = this;\r\n        extension.init(this.onMessageReceived.bind(this), settings);\r\n    }\r\n\r\n    function onExtensionError()\r\n    {\r\n        cwic.Logger.error('Failed to load Chrome extension! Extension is not installed!');\r\n\r\n        if(this.onInitializeError)\r\n        {\r\n            //var url = 'https://chrome.google.com/webstore/detail/cisco-web-communicator/ppbllmlcmhfnfflbkbinnhacecaankdh';\r\n\t\t\tvar url = 'https://chrome.google.com/webstore/detail/cisco-web-communicator/mbhnoblcplfcookpoennihpndjobapeo';\r\n\r\n            var errorInfo = {\r\n                errorType : \"ChromeExtension\",\r\n                errorData : {\r\n                    reason : \"ExtensionNotInstalled\",\r\n                    extensionURL : url\r\n                }\r\n            };\r\n\r\n            this.onInitializeError(errorInfo);\r\n        }\r\n    }\r\n};\r\n\r\nChromeExtension.prototype.uninitialize = function()\r\n{\r\n    //var extensionID     = \"ppbllmlcmhfnfflbkbinnhacecaankdh\";\r\n\tvar extensionID     = \"mbhnoblcplfcookpoennihpndjobapeo\";\r\n    var extensionScript = document.getElementById(extensionID);\r\n\r\n    extensionScript.parentNode.removeChild(extensionScript);\r\n    cwic.MessageSender.plugin = null;\r\n    cwic_plugin = null;\r\n};\r\n\r\nChromeExtension.prototype.sendMessage = function(message)\r\n{\r\n    var extension = cwic_plugin;\r\n\r\n    cwic.Logger(\"Sending message: \", message);\r\n\r\n    extension.sendRequest(message);\r\n};\r\n\r\nChromeExtension.prototype.onMessageReceived = function(message)\r\n{\r\n    cwic.MessageReceiver.onMessageReceived(message);\r\n};\r\n\r\nmodule.exports.ChromeExtension = ChromeExtension;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/ChromeExtension.js\n// module id = 28\n// module chunks = 0","function Plugin()\r\n{\r\n}\r\n\r\nPlugin.prototype.version = null;\r\nPlugin.prototype.sendMessage = null;\r\nPlugin.prototype.initialize = null;\r\nPlugin.prototype.type = \"Unknown\";\r\nPlugin.prototype.onInitializeError = null;\r\n\r\n\r\nmodule.exports.Plugin = Plugin;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/Plugin.js\n// module id = 29\n// module chunks = 0","// Required Modules\r\nvar ExtensionModule = require(\"./Plugin\");\r\nvar MessageSenderModule = require(\"./MessageSender\");\r\nvar MessageReceiverModule = require(\"./MessageReceiver\");\r\nvar LoggerModule = require(\"../Utils/Logger\");\r\n\r\nvar cwic = {\r\n    Plugin : ExtensionModule.Plugin,\r\n    MessageSender : MessageSenderModule.MessageSender,\r\n    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n    Logger : LoggerModule.Logger\r\n};\r\n\r\nfunction FirefoxExtension(cwicID)\r\n{\r\n    this.type = \"FirefoxExtension\";\r\n    this.cwicID = cwicID;\r\n}\r\n\r\nFirefoxExtension.prototype = Object.create(cwic.Plugin.prototype);\r\nFirefoxExtension.prototype.constructor = FirefoxExtension;\r\n\r\nFirefoxExtension.prototype.isExtensionInstalled = function()\r\n{\r\n    var cwicEvent = null;\r\n    var extensionIsInstalled = false;\r\n\r\n    function extensionExistsCallback()\r\n    {\r\n        extensionIsInstalled = true;\r\n    }\r\n\r\n    window.addEventListener(\"cwic-extension-installed-response\", extensionExistsCallback);\r\n\r\n    cwicEvent = new CustomEvent('cwic-extension-installed', {detail : \"\"});\r\n    window.dispatchEvent(cwicEvent);\r\n\r\n    window.removeEventListener(\"cwic-extension-installed-response\", extensionExistsCallback);\r\n\r\n    return extensionIsInstalled;\r\n};\r\n\r\nFirefoxExtension.prototype.initialize = function()\r\n{\r\n    if(this.isExtensionInstalled())\r\n    {\r\n        window.addEventListener('cwic-addon-message', this.onMessageReceived.bind(this));\r\n        window.dispatchEvent(new CustomEvent('cwic-initialize', {detail : this.cwicID}));\r\n\r\n        cwic.Logger.info('Firefox extension has been initialized.');\r\n\r\n        cwic.MessageSender.plugin = this;\r\n        cwic.MessageSender.sendMessage('init', {});\r\n    }\r\n    else\r\n    {\r\n        cwic.Logger.error('Failed to load Firefox extension! Extension is not installed!');\r\n\r\n        if(this.onInitializeError)\r\n        {\r\n            var url = '';\r\n\r\n            var errorInfo = {\r\n                errorType : \"FirefoxExtension\",\r\n                errorData : {\r\n                    reason : \"ExtensionNotInstalled\",\r\n                    extensionURL : url\r\n                }\r\n            };\r\n\r\n            this.onInitializeError(errorInfo);\r\n        }\r\n    }\r\n};\r\n\r\nFirefoxExtension.prototype.sendMessage = function(message)\r\n{\r\n    message.client = {\r\n        'id': this.cwicID,\r\n        'url': window.location.href,\r\n        'hostname': window.location.hostname ? window.location.hostname : \"file://\",\r\n        'name': window.document.title\r\n    };\r\n\r\n    var cwicMessage = {\r\n        ciscoChannelMessage: message\r\n    };\r\n\r\n    var cwicMessageEvent = new CustomEvent('cwic-message', {detail : cwicMessage});\r\n    window.dispatchEvent(cwicMessageEvent);\r\n};\r\n\r\nFirefoxExtension.prototype.uninitialize = function()\r\n{\r\n};\r\n\r\nFirefoxExtension.prototype.onMessageReceived = function(message)\r\n{\r\n    //cwic.MessageReceiver.onMessageReceived(message.detail.ciscoChannelMessage);\r\n    cwic.MessageReceiver.onMessageReceived(message.detail.ciscoChannelMessage);\r\n};\r\n\r\nmodule.exports.FirefoxExtension = FirefoxExtension;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/FirefoxExtension.js\n// module id = 30\n// module chunks = 0","// Required Modules\r\nvar ExtensionModule = require(\"./Plugin\");\r\nvar MessageReceiverModule = require('./MessageReceiver');\r\nvar MessageSenderModule = require('./MessageSender');\r\nvar LoggerModule = require('../Utils/Logger');\r\n\r\nvar cwic = {\r\n    Plugin : ExtensionModule.Plugin,\r\n    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n    MessageSender : MessageSenderModule.MessageSender,\r\n    Logger : LoggerModule.Logger\r\n};\r\n\r\nfunction NPAPIPlugin(cwicID)\r\n{\r\n    this.type = \"NPAPIPlugin\";\r\n    this.cwicID = cwicID;\r\n}\r\n\r\nNPAPIPlugin.prototype = Object.create(cwic.Plugin.prototype);\r\nNPAPIPlugin.prototype.constructor = NPAPIPlugin;\r\n\r\nNPAPIPlugin.prototype.initialize = function()\r\n{\r\n    cwic.Logger.info('Initializing NPAPI plugin.');\r\n    var pluginName = 'application/x-ciscowebcommunicator';\r\n    var pluginMimeType = navigator.mimeTypes[pluginName];\r\n\r\n    if(!pluginMimeType)\r\n    {\r\n        cwic.Logger.error(\"Failed to load NPAPI Plugin.\");\r\n\r\n        if(this.onInitializeError)\r\n        {\r\n            var errorInfo = {\r\n                errorType : \"NPAPIPlugin\",\r\n                errorData : {\r\n                    reason : \"AddonNotInstalled\"\r\n                }\r\n            };\r\n\r\n            this.onInitializeError(errorInfo);\r\n        }\r\n    }\r\n    else\r\n    {\r\n        cwic.Logger.info('NPAPI plugin has been initialized.');\r\n        var plugin = document.createElement('object');\r\n\r\n\r\n        plugin.id   = \"cwic-plugin\";\r\n        plugin.type = \"application/x-ciscowebcommunicator\";\r\n\r\n        document.body.appendChild(plugin);\r\n\r\n        plugin.addEventListener('addonmessage', this.onMessageReceived.bind(this), false);\r\n\r\n        plugin.setClientId(this.cwicID);\r\n        plugin.setUrl(window.location.href);\r\n        plugin.setHostName(window.location.hostname ? window.location.hostname : \"file://\");\r\n        plugin.setAppName(window.document.title);\r\n\r\n        cwic.MessageSender.plugin = this;\r\n        cwic.MessageSender.sendMessage('init', {});\r\n    }\r\n};\r\n\r\nNPAPIPlugin.prototype.uninitialize = function()\r\n{\r\n    var pluginID = \"cwic-plugin\";\r\n    var plugin   = document.getElementById(pluginID);\r\n\r\n    document.body.removeChild(plugin)\r\n    //plugin.parentNode.removeChild(plugin);\r\n    cwic.MessageSender.plugin = null;\r\n};\r\n\r\nNPAPIPlugin.prototype.sendMessage = function(message)\r\n{\r\n    var npapiPlugin = document.getElementById('cwic-plugin');\r\n\r\n    message.client = {\r\n        'id': this.cwicID,\r\n        'url': window.location.href,\r\n        'hostname': window.location.hostname ? window.location.hostname : \"file://\",\r\n        'name': window.document.title\r\n    };\r\n\r\n    var npapiPluginMessage = {\r\n        ciscoChannelMessage: message\r\n    };\r\n\r\n    npapiPlugin.postMessage(JSON.stringify(npapiPluginMessage));\r\n};\r\n\r\nNPAPIPlugin.prototype.onMessageReceived = function(message)\r\n{\r\n    try\r\n    {\r\n        var clientMessage = JSON.parse(message);\r\n    }\r\n    catch (exception)\r\n    {\r\n        cwic.Logger.error(\"Failed to parse message received from Add-on!\");\r\n        return;\r\n    }\r\n    cwic.MessageReceiver.onMessageReceived(clientMessage.ciscoChannelMessage);\r\n};\r\n\r\nmodule.exports.NPAPIPlugin = NPAPIPlugin;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/NPAPIPlugin.js\n// module id = 31\n// module chunks = 0","// Required Modules\r\nvar ExtensionModule = require(\"./Plugin\");\r\nvar MessageReceiverModule = require('./MessageReceiver');\r\nvar MessageSenderModule = require('./MessageSender');\r\nvar LoggerModule = require('../Utils/Logger');\r\n\r\nvar cwic = {\r\n    Plugin : ExtensionModule.Plugin,\r\n    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n    MessageSender : MessageSenderModule.MessageSender,\r\n    Logger : LoggerModule.Logger\r\n};\r\n\r\nfunction ActiveXControl(cwicID)\r\n{\r\n    this.type = \"ActiveXControl\";\r\n    this.cwicID = cwicID;\r\n}\r\n\r\nActiveXControl.prototype = Object.create(cwic.Plugin.prototype);\r\nActiveXControl.prototype.constructor = ActiveXControl;\r\n\r\nActiveXControl.prototype.initialize = function()\r\n{\r\n    if ('ActiveXObject' in window)\r\n    {\r\n        cwic.Logger.info('Initializing ActiveX control.');\r\n        try\r\n        {\r\n            // Try to load the ActiveX Control, throws exception if it fails.\r\n            var dummyActiveXControl = new ActiveXObject('CiscoSystems.CWCVideoCall');\r\n\r\n            cwic.Logger.info('ActiveX control initialized.');\r\n\r\n            var plugin = document.createElement('object');\r\n\r\n            plugin.id   = \"cwic-plugin\";\r\n            plugin.type = \"application/x-ciscowebcommunicator\";\r\n\r\n            document.body.appendChild(plugin);\r\n\r\n            plugin.attachEvent('onaddonmessage', this.onMessageReceived.bind(this));\r\n\r\n            plugin.setClientId(this.cwicID);\r\n            plugin.setUrl(window.location.href);\r\n            plugin.setHostName(window.location.hostname ? window.location.hostname : \"file://\");\r\n            plugin.setAppName(window.document.title);\r\n\r\n            cwic.MessageSender.plugin = this;\r\n            cwic.MessageSender.pluginType = \"ActiveXControl\";\r\n            cwic.MessageSender.sendMessage('init', {});\r\n        }\r\n        catch (exception)\r\n        {\r\n            cwic.Logger.error(\"Failed to load ActiveX control\");\r\n\r\n            if(this.onInitializeError)\r\n            {\r\n                var errorInfo = {\r\n                    errorType : \"ActiveXControl\",\r\n                    errorData : {\r\n                        reason : \"AddonNotInstalled\"\r\n                    }\r\n                };\r\n\r\n                this.onInitializeError(errorInfo);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nActiveXControl.prototype.uninitialize = function()\r\n{\r\n    var pluginID = \"cwic-plugin\";\r\n    var plugin   = document.getElementById(pluginID);\r\n\r\n    plugin.parentNode.removeChild(plugin);\r\n    cwic.MessageSender.plugin = null;\r\n};\r\n\r\nActiveXControl.prototype.sendMessage = function(message)\r\n{\r\n    var activeXControl = document.getElementById('cwic-plugin');\r\n\r\n    message.client = {\r\n        'id': this.cwicID,\r\n        'url': window.location.href,\r\n        'hostname': window.location.hostname ? window.location.hostname : \"file://\",\r\n        'name': window.document.title\r\n    };\r\n\r\n    var activeXControlMessage = {\r\n        ciscoChannelMessage: message\r\n    };\r\n\r\n    activeXControl.postMessage(JSON.stringify(activeXControlMessage));\r\n};\r\n\r\nActiveXControl.prototype.onMessageReceived = function(message)\r\n{\r\n    try\r\n    {\r\n        var clientMessage = JSON.parse(message);\r\n        cwic.MessageReceiver.onMessageReceived(clientMessage.ciscoChannelMessage);\r\n    }\r\n    catch (exception)\r\n    {\r\n        //Add error handlig logic here or log message.\r\n    }\r\n};\r\n\r\nmodule.exports.ActiveXControl = ActiveXControl;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/ActiveXControl.js\n// module id = 32\n// module chunks = 0","var version = \"REL.MAJ.MIN.BUILD\";\r\n\r\nfunction Version(versionString)\r\n{\r\n    var versionNumbers = versionString.split('.');\r\n\r\n    this.release = versionNumbers[0];\r\n    this.major = versionNumbers[1];\r\n    this.minor = versionNumbers[2];\r\n    this.build = versionNumbers[3];\r\n}\r\n\r\nVersion.prototype.release = \"\";\r\nVersion.prototype.major = \"\";\r\nVersion.prototype.minor = \"\";\r\nVersion.prototype.build = \"\";\r\n\r\nmodule.exports.cwicVersion = new Version(version);\r\nmodule.exports.Version = Version;\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/Version.js\n// module id = 33\n// module chunks = 0","/**\r\n * @class SystemController\r\n * @constructor\r\n * @description\r\n * This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction SystemControllerCapabilities(capabilites)\r\n{\r\n    this.inBrowserVideoSupport            = capabilites.videoPluginObject;\r\n    this.ringtoneOnAllRingersSupport      = capabilites.ringOnAllDevices;\r\n    this.ringtoneSupport                  = capabilites.ringtoneSelection;\r\n    this.nativeWindowDockingSupport       = capabilites.externalWindowDocking;\r\n    this.nativeWindowDockingTargetSupport = capabilites.showingDockingTarget;\r\n}\r\n\r\n/**\r\n * @memberof SystemControllerCapabilities\r\n * @member inBrowserVideoSupport\r\n * @description\r\n * Indicates whether in-browser video window support exists or not.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nSystemControllerCapabilities.prototype.inBrowserVideoSupport = false;\r\n\r\n/**\r\n * @memberof SystemControllerCapabilities\r\n * @member ringtoneOnAllRingersSupport\r\n * @description\r\n * Indicates whether ringtone can played on all ringtones or not.\r\n *\r\n * @since 11.7.0\r\n */\r\nSystemControllerCapabilities.prototype.ringtoneOnAllRingersSupport = false;\r\n\r\n/**\r\n * @memberof SystemControllerCapabilities\r\n * @member ringtoneSupport\r\n * @description\r\n * Indicates whether ringtone support exists or not.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nSystemControllerCapabilities.prototype.ringtoneSupport = false;\r\n\r\n/**\r\n * @memberof SystemControllerCapabilities\r\n * @member nativeWindowDockingSupport\r\n * @description\r\n * Indicates whether native window can be docked or not.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nSystemControllerCapabilities.prototype.nativeWindowDockingSupport = false;\r\n\r\n/**\r\n * @memberof SystemControllerCapabilities\r\n * @member nativeWindowDockingTargetSupport\r\n * @description\r\n * Indicates whether docking target for native window exists or not.\r\n *\r\n * @type {boolean}\r\n * @since 11.7.0\r\n */\r\nSystemControllerCapabilities.prototype.nativeWindowDockingTargetSupport = false;\r\n\r\nmodule.exports.SystemControllerCapabilities = SystemControllerCapabilities;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/System/SystemControllerCapabilities.js\n// module id = 34\n// module chunks = 0","// System Modules\r\nvar SystemControllerModule = require('../System/SystemController');\r\nvar MessageSenderModule    = require('../System/MessageSender');\r\nvar MessageReceiverModule  = require('../System/MessageReceiver');\r\n\r\n// Window Modules\r\nvar NativePreviewWindowModule = require('./NativePreviewWindow');\r\nvar NativeScreenShareWindowModule = require('./NativeScreenShareWindow');\r\nvar NativeConversationWindowModule = require('./NativeConversationWindow');\r\nvar ScreenShareWindowModule = require('./ScreenShareWindow');\r\nvar ConversationWindowModule = require('./ConversationWindow');\r\nvar PreviewWindowModule = require('./PreviewVideoWindow');\r\n\r\nvar cwic = {\r\n    MessageSender    : MessageSenderModule.MessageSender,\r\n    MessageReceiver  : MessageReceiverModule.MessageReceiver,\r\n    SystemController : SystemControllerModule.SystemController,\r\n\r\n    NativeScreenShareWindow  : NativeScreenShareWindowModule.NativeScreenShareWindow,\r\n    NativePreviewWindow : NativePreviewWindowModule.NativePreviewWindow,\r\n    NativeConversationWindow : NativeConversationWindowModule.NativeConversationWindow,\r\n\r\n    ScreenShareWindow  : ScreenShareWindowModule.ScreenShareWindow,\r\n    ConversationWindow : ConversationWindowModule.ConversationWindow,\r\n    PreviewWindow      : PreviewWindowModule.PreviewWindow\r\n\r\n};\r\n\r\n/**\r\n * @class WindowController\r\n * @classdesc\r\n * WindowController is responsible for managing native and in-browser video windows.\r\n *\r\n * @description\r\n * This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction WindowController()\r\n{\r\n    var m_NativePreviewWindow = cwic.NativePreviewWindow;\r\n    var m_NativeScreenShareWindow  = cwic.NativeScreenShareWindow;\r\n    var m_NativeConversationWindow = cwic.NativeConversationWindow;\r\n\r\n    cwic.MessageReceiver.addMessageHandler('dockexternalwindowneeded', dockNeeded);\r\n\r\n    function dockNeeded(content)\r\n    {\r\n        var dockElement = null;\r\n        var dockElementDOMWindow = null;\r\n        var nativeWindow = null;\r\n        switch(content.windowType)\r\n        {\r\n            case \"remote\":\r\n                dockElement = m_NativeConversationWindow.dockElement;\r\n                dockElementDOMWindow = m_NativeConversationWindow.dockElementDOMWindow;\r\n                nativeWindow = m_NativeConversationWindow;\r\n                break;\r\n            case \"preview\":\r\n                dockElement = m_NativePreviewWindow.dockElement;\r\n                dockElementDOMWindow = m_NativePreviewWindow.dockElementDOMWindow;\r\n                nativeWindow = m_NativePreviewWindow;\r\n                break;\r\n            case \"share\":\r\n                dockElement = m_NativeScreenShareWindow.dockElement;\r\n                dockElementDOMWindow = m_NativeScreenShareWindow.dockElementDOMWindow;\r\n                nativeWindow = m_NativeScreenShareWindow;\r\n                break;\r\n        }\r\n\r\n        if(dockElement && dockElementDOMWindow)\r\n        {\r\n            nativeWindow.dock(dockElement, dockElementDOMWindow);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @memberof WindowController\r\n     * @method getNativePreviewWindow\r\n     * @description\r\n     * Retrieve native window that renders local camera feed.\r\n     *\r\n     * @returns {NativePreviewWindow}\r\n     * @since 11.7.0\r\n     */\r\n    this.getNativePreviewWindow = function()\r\n    {\r\n        return m_NativePreviewWindow;\r\n    };\r\n\r\n    /**\r\n     * @memberof WindowController\r\n     * @method getNativeScreenShareWindow\r\n     * @description\r\n     * Retrieve native window that renders screen share video.\r\n     *\r\n     * @returns {NativeScreenShareWindow}\r\n     * @since 11.7.0\r\n     */\r\n    this.getNativeScreenShareWindow = function()\r\n    {\r\n        return m_NativeScreenShareWindow;\r\n    };\r\n\r\n    /**\r\n     * @memberof WindowController\r\n     * @method getNativeConversationWindow\r\n     * @description\r\n     * Retrieve native window that renders conversation video.\r\n     *\r\n     * @returns {NativeConversationWindow}\r\n     * @since 11.7.0\r\n     */\r\n    this.getNativeConversationWindow = function()\r\n    {\r\n        return m_NativeConversationWindow;\r\n    };\r\n\r\n    /**\r\n     * @memberof WindowController\r\n     * @method createVideoWindow\r\n     * @description\r\n     * Create video window object. In order to create a video window object, HTML element that will\r\n     * serve as container must be specified. This HTML element can be a part of the same DOMWindow in which CWIC is\r\n     * initialized or it can be a separate child window or IFrame.\r\n     *\r\n     * @param windowType {WindowType} - Type of video window it will be created.\r\n     * @param htmlElement {HTMLElement} - HTML element that will represent window container.\r\n     * @param [DOMWindow] {Window} - DOM window that owns HTML element\r\n     * @returns {ScreenShareWindow | PreviewWindow | ConversationWindow}\r\n     *\r\n     * @since 11.7.0\r\n     *\r\n     * @throw Invalud Window Type - Thrown if windowType parameter is invalid.\r\n     */\r\n    this.createVideoWindow = function(windowType, htmlElement, DOMWindow)\r\n    {\r\n        var videoWindow;\r\n\r\n        switch(windowType)\r\n        {\r\n            case 'ScreenShare':\r\n                videoWindow = new cwic.ScreenShareWindow(htmlElement, DOMWindow);\r\n                break;\r\n            case 'Preview':\r\n                videoWindow = new cwic.PreviewWindow(htmlElement, DOMWindow);\r\n                break;\r\n            case 'Conversation':\r\n                videoWindow = new cwic.ConversationWindow(htmlElement, DOMWindow);\r\n                break;\r\n            default:\r\n                throw \"Invalid Window Type\";\r\n        }\r\n\r\n        return videoWindow;\r\n    }\r\n}\r\n\r\nmodule.exports.WindowController = new WindowController();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Window/WindowController.js\n// module id = 35\n// module chunks = 0","// Required Modules\r\nvar NativeVideoWindowModule = require(\"./NativeVideoWindow\");\r\n\r\nvar cwic = {\r\n    NativeVideoWindow : NativeVideoWindowModule.NativeVideoWindow\r\n};\r\n\r\n/**\r\n * @class NativePreviewWindow\r\n * @extends  NativeVideoWindow\r\n * @classdesc\r\n * Represents native video window in which camera's feed video is rendered.\r\n *\r\n * @description\r\n * This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction NativePreviewWindow()\r\n{\r\n    cwic.NativeVideoWindow.call(this, 'preview');\r\n}\r\n\r\nNativePreviewWindow.prototype = Object.create(cwic.NativeVideoWindow.prototype);\r\nNativePreviewWindow.prototype.constructor = NativePreviewWindow();\r\n\r\n\r\nmodule.exports.NativePreviewWindow = new NativePreviewWindow();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Window/NativePreviewWindow.js\n// module id = 36\n// module chunks = 0","// System Modules\r\nvar MessageSenderModule    = require('../System/MessageSender');\r\nvar SystemControllerModule = require('../System/SystemController');\r\n\r\n// Window Modules\r\nvar DockingWindowModule = require('./DockingWindow');\r\n\r\nvar cwic = {\r\n    MessageSender    : MessageSenderModule.MessageSender,\r\n    SystemController : SystemControllerModule.SystemController,\r\n\r\n    PreviewDockingWindow     : DockingWindowModule.PreviewDockingWindow,\r\n    RemoteDockingWindow      : DockingWindowModule.RemoteDockingWindow,\r\n    ScreenShareDockingWindow : DockingWindowModule.ScreenShareDockingWindow\r\n};\r\n\r\n/**\r\n * @class NativeVideoWindow\r\n * @classdesc\r\n * Native video window represents, native window in which video is rendered. Depending on the browser and operating\r\n * system (OS) this window will have different capabilities.\r\n * On Google Chrome NPAPI support has been dropped so communication between Cisco Web Communicator and CWIC API is being\r\n * handled through Chromes's extensions. Chrome extension doesn't provide a way to render video from native application\r\n * directly into browser's web application like NPAPI does. In order to overcome this issue Native Video Window can be\r\n * docked/undocked to/from a specified HTML element that will act as a docking target in web browser application. This\r\n * way we simulate behaviour as if native video window is part of a HTML document. There are specific limitations with\r\n * this approach. Since native window acts as an overlay over specified HTML element, no child HTML elements will be\r\n * visible.\r\n *\r\n * <br>\r\n * @description\r\n * On Mozzila Firefox, Internet Explorer and Safari u can use regular VideoWindow as NPAPI support for these brwosers\r\n * still exits.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction NativeVideoWindow(windowType)\r\n{\r\n    var m_Type = windowType;\r\n\r\n    this.dockElement = null;\r\n    this.dockElementDOMWindow = null;\r\n\r\n\r\n    function getDockingWindow()\r\n    {\r\n        var dockingWindow = null;\r\n        switch(m_Type)\r\n        {\r\n            case \"preview\":\r\n                dockingWindow = cwic.PreviewDockingWindow;\r\n                break;\r\n            case \"remote\":\r\n                dockingWindow = cwic.RemoteDockingWindow;\r\n                break;\r\n            case \"share\":\r\n                dockingWindow = cwic.ScreenShareDockingWindow;\r\n                break;\r\n        }\r\n\r\n        return dockingWindow;\r\n    }\r\n\r\n    /**\r\n     * @memberof NativeVideoWindow\r\n     * @method hide\r\n     * @description\r\n     * Hide native video window.\r\n     *\r\n     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n     * @since 11.7.0\r\n     */\r\n    this.hide = function(errorHandler)\r\n    {\r\n        var messageType = 'hideExternalWindow';\r\n        var messageData = {\r\n            windowType : m_Type\r\n        };\r\n\r\n        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n    };\r\n\r\n    /**\r\n     * @memberof NativeVideoWindow\r\n     * @method show\r\n     * @description\r\n     * Show native video window.\r\n     *\r\n     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n     * @since 11.7.0\r\n     */\r\n    this.show = function(errorHandler)\r\n    {\r\n        var messageType;\r\n\r\n        if(m_Type === 'preview' || m_Type === 'share')\r\n        {\r\n            messageType = 'showPreviewInExternalWindow';\r\n        }\r\n        else\r\n        {\r\n            messageType = \"showExternalWindow\";\r\n        }\r\n\r\n        var messageData = {\r\n            windowType : m_Type\r\n        };\r\n\r\n        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n    };\r\n\r\n    /**\r\n     * @memberof NativeVideoWindow\r\n     * @method showAlwaysOnTop\r\n     * @description\r\n     * Set native video window to be shown always on top of Z-order.\r\n     *\r\n     * @param isAlwaysOnTop {Boolean}\r\n     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n     * @since 11.7.0\r\n     */\r\n    this.showAlwaysOnTop = function(isAlwaysOnTop, errorHandler)\r\n    {\r\n        var messageType = 'setExternalWindowAlwaysOnTop';\r\n        var messageData = {\r\n            alwaysOnTop: isAlwaysOnTop,\r\n            windowType: m_Type\r\n        };\r\n\r\n        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n    };\r\n\r\n    /**\r\n     * @memberof NativeVideoWindow\r\n     * @method setTitle\r\n     * @description\r\n     * Set native video window's title.\r\n     *\r\n     * @param title {String} - Title that will be set\r\n     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n     * @since 11.7.0\r\n     */\r\n    this.setTitle = function(title, errorHandler)\r\n    {\r\n        var messageType = 'setExternalWindowTitle';\r\n        var messageData = {\r\n            title : title,\r\n            windowType : m_Type\r\n        };\r\n\r\n        cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n    };\r\n\r\n    /**\r\n     * @memberof NativeVideoWindow\r\n     * @method setDockTargetColor\r\n     * @description\r\n     * Set the color of docking target. MAC OS only.\r\n     *\r\n     * @param red {Number} - Value of the red color 0-255\r\n     * @param green {Number} - Value of the green color 0-255\r\n     * @param blue {Number} - Value of the blue color 0-255\r\n     *\r\n     * @since 11.7.0\r\n     * @note Depricated as of 11.8.0 - Calling this function will have no effect.\r\n     *\r\n     * @throw No Capability - Thrown if there is no support for docking targer color.\r\n     */\r\n    this.setDockTargetColor = function(red, green, blue)\r\n    {\r\n        if (!cwic.SystemController.getCapabilities().nativeWindowDockingSupport ||\r\n            !cwic.SystemController.getCapabilities().nativeWindowDockingTargetSupport)\r\n        {\r\n            throw Error(\"No capability\");\r\n        }\r\n\r\n        var dockingWindow = getDockingWindow();\r\n        dockingWindow.setDockColor(red, green, blue);\r\n\r\n        var messageType = \"setDockTargetColor\";\r\n        var messageData = {\r\n            redValue: red,\r\n            greenValue: green,\r\n            blueValue: blue,\r\n            windowType: m_Type\r\n        };\r\n\r\n        cwic.MessageSender.sendMessage(messageType, messageData);\r\n    };\r\n\r\n    /**\r\n     * @memberof NativeVideoWindow\r\n     * @method dock\r\n     * @description\r\n     * Dock native video window to an HTML element of the specified DOM window.\r\n     *\r\n     * @param htmlElement {HTMLElement} - HTML element to which native video window will be docked\r\n     * @param DOMWindow {Window} - DOM window to which HTML Element belongs. If this parameter isn't specified\r\n     * current DOM window is used.\r\n     *\r\n     * @throws No Capability - Thrown if docking isn't supported.\r\n     * @throws Invalid HTML Element - Thrown if htmlElement parameter is not instance of HTMLElement.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.dock = function(htmlElement, DOMWindow)\r\n    {\r\n        if (!cwic.SystemController.getCapabilities().nativeWindowDockingSupport)\r\n        {\r\n            throw Error(\"No capability\");\r\n        }\r\n\r\n        var frame = DOMWindow ? DOMWindow : window;\r\n\r\n        if(!(htmlElement instanceof frame.HTMLElement))\r\n        {\r\n            throw Error(\"Invalid HTML Element\");\r\n        }\r\n\r\n        var dockingWindow = getDockingWindow();\r\n\r\n\r\n        dockingWindow.isDocked = true;\r\n\r\n        dockingWindow.externalWindowDocking = cwic.SystemController.getCapabilities().nativeWindowDockingSupport;\r\n        dockingWindow.showingDockingTarget = cwic.SystemController.getCapabilities().nativeWindowDockingTargetSupport;\r\n\r\n        dockingWindow.frame = frame;\r\n        dockingWindow.element = htmlElement;\r\n\r\n        this.dockElement = htmlElement;\r\n        this.dockElementDOMWindow = frame;\r\n\r\n        var position = dockingWindow.calculateNewPosition();\r\n        dockingWindow.sendMessageToAddOn(\"dockExternalWindow\", position, windowType);\r\n        dockingWindow.updatePosition();\r\n    };\r\n\r\n    /**\r\n     * @memberof NativeVideoWindow\r\n     * @method undock\r\n     * @description\r\n     * Undock native video window from HTML element.\r\n     *\r\n     * @throws No Capability - Thrown if docking isn't supported.\r\n     * @since 11.7.0\r\n     *\r\n     * @throw No Capability - Thrown if docking isn't supported.\r\n     */\r\n    this.undock = function()\r\n    {\r\n        if (!cwic.SystemController.getCapabilities().nativeWindowDockingSupport)\r\n        {\r\n            throw Error(\"No Capability\");\r\n        }\r\n\r\n        var dockingWindow = getDockingWindow();\r\n\r\n        //dockingWindow.hideDockingTarget();\r\n        dockingWindow.isDocked = false;\r\n\r\n        this.dockElement = null;\r\n        this.dockElementDOMWindow = null;\r\n\r\n        var messageType = 'undockExternalWindow';\r\n        var messageData = {\r\n            windowType: windowType\r\n        };\r\n\r\n        cwic.MessageSender.sendMessage(messageType, messageData);\r\n    };\r\n\r\n    /**\r\n     * @memberof NativeVideoWindow\r\n     * @method showControls\r\n     * @description\r\n     * Shows native video window controls.\r\n     *\r\n     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n     */\r\n    this.showControls = function(errorHandler)\r\n    {\r\n        var messageType = 'setExternalWindowShowControls';\r\n        var messageData = {\r\n            showControls : true,\r\n            windowType : m_Type\r\n        };\r\n\r\n        cwic.MessageSender.sendMessage(messageType,messageData, errorHandler);\r\n    };\r\n\r\n    /**\r\n     * @memberof NativeVideoWindow\r\n     * @method hideControls\r\n     * @description\r\n     * Hides native video window controls.\r\n     *\r\n     * @param [errorHandler]{Function} - Called if error has occurred in add-on.\r\n     */\r\n    this.hideControls = function(errorHandler)\r\n    {\r\n        var messageType = 'setExternalWindowShowControls';\r\n        var messageData = {\r\n            showControls : false,\r\n            windowType : m_Type\r\n        };\r\n\r\n        cwic.MessageSender.sendMessage(messageType,messageData, errorHandler);\r\n    };\r\n}\r\n\r\nmodule.exports.NativeVideoWindow = NativeVideoWindow;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Window/NativeVideoWindow.js\n// module id = 37\n// module chunks = 0","// System Modules\r\nvar MessageSenderModule = require('../System/MessageSender');\r\nvar SystemControllerModule = require('../System/SystemController');\r\nvar UtilitiesModule = require('../Utils/Utilities');\r\n\r\nvar cwic = {\r\n    MessageSender : MessageSenderModule.MessageSender,\r\n    SystemController : SystemControllerModule.SystemController\r\n};\r\n\r\n\r\nfunction WindowPosition()\r\n{\r\n    this.top         = 0;\r\n    this.left        = 0;\r\n    this.height      = 0;\r\n    this.width       = 0;\r\n    this.cropTop     = 0;\r\n    this.cropLeft    = 0;\r\n    this.cropBottom  = 0;\r\n    this.cropRight   = 0;\r\n    this.cropHeight  = 0;\r\n    this.cropWidth   = 0;\r\n    this.scaleFactor = 1;\r\n}\r\n\r\nfunction DockingWindow(windowType)\r\n{\r\n    this.type     = windowType;\r\n    this.isDocked = true;\r\n    this.isVideoBeingReceived = false;\r\n    this.frame    = window;\r\n    this.element  = null;\r\n    this.position = new WindowPosition();\r\n\r\n    this.externalWindowDocking = false;\r\n    this.showingDockingTarget   = false;\r\n    this.scaleFactor = 1;\r\n\r\n    this.setDockColor = function(red, green, blue)\r\n    {\r\n        if(arguments.length !== 3)\r\n        {\r\n            throw \"Invalid number of arguments for color object\";\r\n        }\r\n    };\r\n\r\n\r\n    this.isPositionChanged = function(newPosition)\r\n    {\r\n        var positionChanged = !(\r\n            this.position.top        === newPosition.top &&\r\n            this.position.left       === newPosition.left &&\r\n            this.position.height     === newPosition.height &&\r\n            this.position.width      === newPosition.width &&\r\n            this.position.cropTop    === newPosition.cropTop &&\r\n            this.position.cropLeft   === newPosition.cropLeft &&\r\n            this.position.cropHeight === newPosition.cropHeight &&\r\n            this.position.cropWidth  === newPosition.cropWidth &&\r\n            this.position.scaleFactor === newPosition.scaleFactor\r\n        );\r\n\r\n        return positionChanged;\r\n    };\r\n\r\n    this.updatePosition = function ()\r\n    {\r\n        if (this.isDocked)\r\n        {\r\n            var newPosition = this.calculateNewPosition();\r\n\r\n            if(this.isPositionChanged(newPosition))\r\n            {\r\n                this.sendMessageToAddOn(\"dockUpdate\", newPosition, this.type);\r\n                this.position = newPosition;\r\n            }\r\n\r\n            window.setTimeout(this.updatePosition.bind(this), 10);\r\n        }\r\n    };\r\n\r\n    this.calculateNewPosition = function()\r\n    {\r\n        var elementRectangle = this.element.getBoundingClientRect();\r\n        var currentFrame = this.frame,\r\n            currentFrameHeight = currentFrame.innerHeight,\r\n            currentFrameWidth = currentFrame.innerWidth,\r\n            currentFrameRect,\r\n            parentFrameWidth,\r\n            parentFrameHeight,\r\n            frameBorderOffset = 0,\r\n            borderTopOffset = 0,\r\n            borderLeftOffset = 0,\r\n            paddingTopOffset = 0,\r\n            paddingLeftOffset = 0;\r\n\r\n        var position = new WindowPosition();\r\n        position.left = elementRectangle.left;\r\n        position.top = elementRectangle.top;\r\n        position.width = elementRectangle.width;\r\n        position.height = elementRectangle.height;\r\n        position.bottom = elementRectangle.bottom;\r\n        position.right = elementRectangle.right;\r\n\r\n        // we need to take into account the devicePixelRatio and the CSS zoom property\r\n        // it won't work if css zoom is set on some of parent elements\r\n        var scaleFactor = currentFrame.devicePixelRatio;\r\n\r\n        var scrollX = 0;\r\n        var scrollY = 0;\r\n\r\n        if (('ontouchstart' in window) && (navigator.maxTouchPoints > 1))\r\n        {\r\n\r\n            //running on touch-capable device\r\n            var inner = currentFrame.innerWidth;\r\n            var hasScrollbar = inner - currentFrame.document.documentElement.clientWidth;\r\n            this.lastZoomFactor = this.lastZoomFactor || 1;\r\n\r\n            // scrollbar width changes when zooming, we need to calculate it for each scale level\r\n            // on pinch zoom, hasScrollbar very quickly goes below zero, and we should skip that case (no scrollbars on pinch-zoom)\r\n            // ...basically just an aproximation which works currentlly\r\n            if (hasScrollbar > 0 || UtilitiesModule.Utilities.getOSType() == \"Windows 10\" ) {\r\n                inner -= hasScrollbar;\r\n            } else {\r\n                var scrollBarWidth = 21;\r\n                inner -= (scrollBarWidth / this.lastZoomFactor);\r\n            }\r\n\r\n            var pinchZoomCoefficient = currentFrame.document.documentElement.clientWidth / inner;\r\n\r\n            scaleFactor *= pinchZoomCoefficient;\r\n            this.lastZoomFactor = scaleFactor;\r\n\r\n            var scrollSizeX = currentFrame.document.body.clientWidth - currentFrame.innerWidth;\r\n            var scrollSizeY = currentFrame.document.body.clientHeight - currentFrame.innerHeight;\r\n\r\n            if (pinchZoomCoefficient > 1.01) {\r\n                scrollX = currentFrame.scrollX;\r\n                scrollY = currentFrame.scrollY;\r\n\r\n                // this is complex logic dealing with case when the page (pinchZoom=0) has scrollbars\r\n                // In that case, when the page is pinche-zoomed, scrollX and scrollY are no longer accurate in providing position of docking container\r\n                var diffY = scrollSizeY - scrollY;\r\n\r\n                // while diff is >0, position.top represent accurate top position\r\n                // when it goes below 0 (meaning that \"original\" scrollbar hit the end), position.top gets stuck and then diff value represent how much container is moved\r\n                if (diffY >= 0) {\r\n                    scrollY = 0;\r\n                } else {\r\n                    scrollY = Math.abs(diffY);\r\n                }\r\n\r\n                var diffX = scrollSizeX - scrollX;\r\n\r\n                if (diffX >= 0) {\r\n                    scrollX = 0;\r\n                } else {\r\n                    scrollX = Math.abs(diffX);\r\n                }\r\n\r\n                if (diffY >= 0) {\r\n                    this.initPosY = position.top + currentFrame.scrollY;\r\n                }\r\n\r\n                if (\r\n                    position.top > this.initPosY - scrollSizeY &&\r\n                    diffY < 0\r\n                ) {\r\n                    position.top = this.initPosY - scrollSizeY;\r\n                }\r\n\r\n                if (diffX >= 0) {\r\n                    this.initPosX = position.left + currentFrame.scrollX;\r\n                }\r\n\r\n                if (\r\n                    position.left > this.initPosX - scrollSizeX &&\r\n                    diffX < 0\r\n                ) {\r\n                    position.left = this.initPosX - scrollSizeX;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        position.left -= scrollX;\r\n        position.top -= scrollY;\r\n\r\n        // calculating crop values for innermost iframe\r\n        position.cropTop  = (position.top < 0) ? Math.abs(position.top) : 0;\r\n        position.cropLeft = (position.left < 0) ? Math.abs(position.left) : 0;\r\n        position.cropBottom = Math.max(position.bottom - currentFrameHeight, 0);\r\n        position.cropRight  = Math.max(position.right - currentFrameWidth, 0);\r\n\r\n        while (currentFrame != currentFrame.top)\r\n        {\r\n            currentFrameRect = currentFrame.frameElement.getBoundingClientRect();\r\n            parentFrameWidth = currentFrame.parent.innerWidth;\r\n            parentFrameHeight = currentFrame.parent.innerHeight;\r\n\r\n            // !! converts to boolean: 0 and NaN map to false, the rest of the numbers map to true\r\n            if (currentFrame.frameElement.frameBorder === \"\" || !!parseInt(currentFrame.frameElement.frameBorder, 10))\r\n            {\r\n                // after testing on Chrome, whenever a frameBorder is present, it's size is 2px\r\n                frameBorderOffset = 2;\r\n            }\r\n            else\r\n            {\r\n                frameBorderOffset = 0;\r\n            }\r\n\r\n            if (currentFrame.frameElement.style.borderTopWidth === \"\")\r\n            {\r\n                borderTopOffset = frameBorderOffset;\r\n            }\r\n            else\r\n            {\r\n                borderTopOffset = parseInt(currentFrame.frameElement.style.borderTopWidth || 0, 10);\r\n            }\r\n\r\n            // take into account parent frame's offset first\r\n            var outerFrame = window.frameElement;\r\n            var framePaddingLeftOffset = 0;\r\n            var framePaddingTopOffset = 0;\r\n            if (outerFrame != null)\r\n            {\r\n                var outerFrameStyle = window.getComputedStyle(outerFrame,null);\r\n                if (outerFrameStyle != null)\r\n                {\r\n                    framePaddingLeftOffset += parseInt(outerFrameStyle.getPropertyValue(\"padding-left\") || 0, 10);\r\n                    framePaddingTopOffset += parseInt(outerFrameStyle.getPropertyValue(\"padding-top\") || 0, 10);\r\n                } \r\n            }    \r\n\r\n            paddingTopOffset = framePaddingTopOffset;\r\n\r\n            if (currentFrameRect.top < 0)\r\n            {\r\n                if (position.top + position.cropTop < 0)\r\n                {\r\n                    position.cropTop += Math.abs(currentFrameRect.top);\r\n                }\r\n                else if (Math.abs(currentFrameRect.top) - (position.top + position.cropTop + borderTopOffset + paddingTopOffset) > 0)\r\n                {\r\n                    position.cropTop += Math.abs(Math.abs(currentFrameRect.top) - (position.top + position.cropTop + borderTopOffset + paddingTopOffset));\r\n                }\r\n            }\r\n\r\n            if (currentFrameRect.top + borderTopOffset + paddingTopOffset + position.top + position.height - position.cropBottom > parentFrameHeight)\r\n            {\r\n                position.cropBottom = currentFrameRect.top + borderTopOffset + paddingTopOffset + position.top + position.height - parentFrameHeight;\r\n            }\r\n\r\n            position.top += currentFrameRect.top + borderTopOffset + paddingTopOffset;\r\n\r\n            if (currentFrame.frameElement.style.borderLeftWidth === \"\")\r\n            {\r\n                borderLeftOffset = frameBorderOffset;\r\n            }\r\n            else\r\n            {\r\n                borderLeftOffset = parseInt(currentFrame.frameElement.style.borderLeftWidth || 0, 10);\r\n            }\r\n\r\n            paddingLeftOffset = framePaddingLeftOffset;\r\n\r\n            if (currentFrameRect.left < 0)\r\n            {\r\n                if (position.left + position.cropLeft < 0)\r\n                {\r\n                    position.cropLeft += Math.abs(currentFrameRect.left);\r\n                }\r\n                else if (Math.abs(currentFrameRect.left) - (position.left + position.cropLeft + borderLeftOffset + paddingLeftOffset) > 0)\r\n                {\r\n                    position.cropLeft += Math.abs(Math.abs(currentFrameRect.left) - (position.left + position.cropLeft + borderLeftOffset + paddingLeftOffset));\r\n                }\r\n            }\r\n\r\n            if (currentFrameRect.left + borderLeftOffset + paddingLeftOffset + position.left + position.width - position.cropRight > parentFrameWidth)\r\n            {\r\n                position.cropRight = currentFrameRect.left + borderLeftOffset + paddingLeftOffset + position.left + position.width - parentFrameWidth;\r\n            }\r\n\r\n            position.left += currentFrameRect.left + borderLeftOffset + paddingLeftOffset;\r\n            currentFrame = currentFrame.parent;\r\n        }\r\n\r\n\r\n        position.cropLeft = (position.width > position.cropLeft) ? position.cropLeft : position.width;\r\n        position.cropTop  = (position.height > position.cropTop) ? position.cropTop : position.height;\r\n        position.cropWidth  = Math.max(position.width - (position.cropLeft + position.cropRight), 0);\r\n        position.cropHeight = Math.max(position.height - (position.cropTop + position.cropBottom), 0);\r\n\r\n        position.left        = Math.round(position.left);\r\n        position.top         = Math.round(position.top);// + offsetTop;\r\n        position.width       = Math.round(position.width);\r\n        position.height      = Math.round(position.height);\r\n        position.cropleft    = Math.round(position.cropLeft);\r\n        position.cropTop     = Math.round(position.cropTop);\r\n        position.cropWidth   = Math.round(position.cropWidth);\r\n        position.cropHeight  = Math.round(position.cropHeight);\r\n\r\n        position.scaleFactor = scaleFactor;\r\n\r\n        if(UtilitiesModule.Utilities.getBrowserType() == \"Firefox\" && cwic.SystemController.platformOS == \"windows\")\r\n        {\r\n            position.top += Math.ceil(window.top.mozInnerScreenY);\r\n            position.left += Math.ceil(window.top.mozInnerScreenX);\r\n        }\r\n\r\n        position.browserHeight = window.outerHeight;\r\n        position.browserWidth  = window.outerWidth;\r\n        position.viewPortHeight = window.top.innerHeight;\r\n        position.viewPortWidth  = window.top.innerWidth;\r\n\r\n\r\n        return position;\r\n    };\r\n\r\n    this.sendMessageToAddOn = function (msgName, position, windowType)\r\n    {\r\n        var addOnMessageContent =\r\n        {\r\n            offsetX: position.left,\r\n            offsetY: position.top,\r\n            width: position.width,\r\n            height: position.height,\r\n            cropOffsetX: position.cropLeft,\r\n            cropOffsetY: position.cropTop,\r\n            cropWidth: position.cropWidth,\r\n            cropHeight: position.cropHeight,\r\n            scaleFactor: position.scaleFactor,\r\n            windowType: windowType,\r\n            browserHeight: position.browserHeight,\r\n            browserWidth: position.browserWidth,\r\n            viewPortHeight : position.viewPortHeight,\r\n            viewPortWidth : position.viewPortWidth\r\n        };\r\n\r\n        if (msgName === \"dockExternalWindow\")\r\n        {\r\n            addOnMessageContent.title = this.frame.top.document.title ||\r\n                (this.frame.top.location.host + this.frame.top.location.pathname + this.frame.top.location.search);\r\n        }\r\n\r\n\r\n        cwic.MessageSender.sendMessage(msgName, addOnMessageContent);\r\n    };\r\n\r\n    this.hasDockingCapabilities = function ()\r\n    {\r\n        var caps;\r\n        try\r\n        {\r\n            caps = cwic.SystemController.getCapabilities().nativeWindowDockingSupport;\r\n        }\r\n        catch (e)\r\n        {\r\n            caps = null;\r\n        }\r\n\r\n        return caps;\r\n    };\r\n}\r\n\r\nmodule.exports.PreviewDockingWindow      = new DockingWindow(\"preview\");\r\nmodule.exports.RemoteDockingWindow       = new DockingWindow(\"remote\");\r\nmodule.exports.ScreenShareDockingWindow  = new DockingWindow(\"share\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Window/DockingWindow.js\n// module id = 38\n// module chunks = 0","// Required Modules\r\nvar NativeVideoWindowModule = require(\"./NativeVideoWindow\");\r\n\r\nvar cwic = {\r\n    NativeVideoWindow : NativeVideoWindowModule.NativeVideoWindow\r\n};\r\n\r\n/**\r\n * @class NativeScreenShareWindow\r\n * @extends  NativeVideoWindow\r\n * @classdesc\r\n * Represents native video window in which screen share video is rendered.\r\n *\r\n * @description\r\n * This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction NativeScreenShareWindow()\r\n{\r\n    cwic.NativeVideoWindow.call(this, 'share');\r\n}\r\n\r\nNativeScreenShareWindow.prototype = Object.create(cwic.NativeVideoWindow.prototype);\r\nNativeScreenShareWindow.prototype.constructor = NativeScreenShareWindow();\r\n\r\n\r\nmodule.exports.NativeScreenShareWindow = new NativeScreenShareWindow();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Window/NativeScreenShareWindow.js\n// module id = 39\n// module chunks = 0","// Required Modules\r\nvar NativeVideoWindowModule = require(\"./NativeVideoWindow\");\r\nvar MessageSenderModule     = require(\"../System/MessageSender\");\r\n\r\nvar cwic = {\r\n    NativeVideoWindow : NativeVideoWindowModule.NativeVideoWindow,\r\n    MessageSender     : MessageSenderModule.MessageSender\r\n};\r\n\r\n/**\r\n * @class NativeConversationWindow\r\n * @extends  NativeVideoWindow\r\n * @classdesc\r\n * Represents native video window in which telephony conversation video is rendered.\r\n *\r\n * @description\r\n * This class cannot be instantiated.\r\n *\r\n * @since 11.7.0\r\n */\r\nfunction NativeConversationWindow()\r\n{\r\n    cwic.NativeVideoWindow.call(this, 'remote');\r\n}\r\n\r\nNativeConversationWindow.prototype = Object.create(cwic.NativeVideoWindow.prototype);\r\nNativeConversationWindow.prototype.constructor = new NativeConversationWindow();\r\n\r\n\r\n/**\r\n * @memberof NativeConversationWindow\r\n * @method showVideoForConversation\r\n * @description\r\n * Show video for given telephony conversation.\r\n *\r\n * @param conversation {TelephonyConversation} - Telephony conversation for which video will be rendered.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @since 11.7.0\r\n */\r\nNativeConversationWindow.prototype.showVideoForConversation = function(conversation, errorHandler)\r\n{\r\n    var messageType = 'showCallInExternalWindow';\r\n    var messageData = {\r\n        callId: conversation.ID\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof NativeConversationWindow\r\n * @method showSelfView\r\n * @description\r\n * Show self-view video.\r\n *\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @since 11.7.0\r\n */\r\nNativeConversationWindow.prototype.showSelfView = function(errorHandler)\r\n{\r\n    var messageType = 'setExternalWindowShowSelfViewPip';\r\n    var messageData = {\r\n        showSelfViewPip: 'true'\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof NativeConversationWindow\r\n * @method hideSelfView\r\n * @description\r\n * Hide self-view video.\r\n *\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @since 11.7.0\r\n */\r\nNativeConversationWindow.prototype.hideSelfView = function(errorHandler)\r\n{\r\n    var messageType = 'setExternalWindowShowSelfViewPip';\r\n    var messageData = {\r\n        showSelfViewPip: false\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof NativeConversationWindow\r\n * @method showSelfViewBorder\r\n * @description\r\n * Show border for self-view video.\r\n *\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @since 11.7.0\r\n */\r\nNativeConversationWindow.prototype.showSelfViewBorder = function(errorHandler)\r\n{\r\n    var messageType = 'setExternalWindowShowSelfViewPipBorder';\r\n    var messageData = {\r\n        showSelfViewPipBorder: true\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof NativeConversationWindow\r\n * @method hideSelfViewBorder\r\n * @description\r\n * Hide border for self-view video.\r\n *\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @since 11.7.0\r\n */\r\nNativeConversationWindow.prototype.hideSelfViewBorder = function(errorHandler)\r\n{\r\n    var messageType = 'setExternalWindowShowSelfViewPipBorder';\r\n    var messageData = {\r\n        showSelfViewPipBorder: false\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof NativeConversationWindow\r\n * @method setSelfViewPosition\r\n * @description\r\n * Set position of self-view video relative to conversation window.\r\n *\r\n * @param left {Number} - Distance from left edge of window in percentages.\r\n * @param top {Number} - Distance from top edge of window in percentages.\r\n * @param right {Number} - Distance from right edge of window in percentages.\r\n * @param bottom {Number} - Distance from bottom edge of window in percentages.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @since 11.7.0\r\n */\r\nNativeConversationWindow.prototype.setSelfViewPosition = function(left, top, right, bottom, errorHandler)\r\n{\r\n    var messageType = 'setExternalWindowSelfViewPipPosition';\r\n    var messageData = {\r\n        pipLeft  : left,\r\n        pipTop   : top,\r\n        pipRight : right,\r\n        pipBottom: bottom\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\nmodule.exports.NativeConversationWindow = new NativeConversationWindow();\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Window/NativeConversationWindow.js\n// module id = 40\n// module chunks = 0","// Window Modules\nvar VideoWindowModule = require('./VideoWindow');\n\n// Telephony Modules\nvar TelephonyConversationModule = require('../Telephony/TelephonyConversation');\n\n\nvar cwic = {\n    VideoWindow : VideoWindowModule.VideoWindow,\n    TelephonyConversation : TelephonyConversationModule.TelephonyConversation\n};\n\n/**\n * @class ScreenShareWindow\n * @classdesc\n * In-browser video window in which incoming screen share for specified {@link TelephonyConversation} is rendered.\n *\n * @description\n * It is instantiated through [WindowController.createVideoWindow()]{@link WindowController.createVideoWindow}.\n * @since 11.7.0\n */\nfunction ScreenShareWindow(htmlElement, DOMWindow)\n{\n    var m_VideoWindow = new cwic.VideoWindow(htmlElement, DOMWindow);\n\n    /**\n     * @memberof ScreenShareWindow\n     * @method showForConversation\n     * @description\n     * Start rendering screen share video for specified conversation.\n     *\n     * @param conversation {TelephonyConversation} - Telephony conversation for which video rendering will start.\n     * @since 11.7.0\n     */\n    this.showForConversation = function(conversation)\n    {\n        var methodName = 'addShareWindow';\n\n        m_VideoWindow.element.style.width  = \"100%\";\n        m_VideoWindow.element.style.height = \"100%\";\n        m_VideoWindow.executeMethod(methodName, conversation.ID);\n    };\n\n    /**\n     * @memberof ScreenShareWindow\n     * @method hidForConversation\n     * @description\n     * Stop rendering screen share video for specified conversation.\n     *\n     * @param conversation {TelephonyConversation} - Telephony conversation for which video rendering will stop.\n     * @since 11.7.0\n     */\n    this.hideForConversation = function(conversation)\n    {\n        var methodName = 'removeShareWindow';\n\n        m_VideoWindow.element.style.width  = \"0%\";\n        m_VideoWindow.element.style.height = \"0%\";\n        m_VideoWindow.executeMethod(methodName, conversation.ID);\n    };\n}\n\nmodule.exports.ScreenShareWindow = ScreenShareWindow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Window/ScreenShareWindow.js\n// module id = 41\n// module chunks = 0","// System Modules\nvar SystemControllerModule = require('../System/SystemController');\nvar UtilitiesModule = require('../Utils/Utilities');\n//// Utilities Modules\n//var generateUniqueID = require('../utils/generateUniqueId');\n\nvar cwic = {\n    SystemController : SystemControllerModule.SystemController,\n    Utilities : UtilitiesModule.Utilities\n};\n\n/**\n * @class VideoWindow\n * @classdesc\n * Video window represents window in which video will be rendered. This class can only be used in following Browsers:\n * <br>\n * <ul>\n *     <li> Mozzile Firefox\n *     <li> Internet Explorer\n *     <li> Safari\n * </ul>\n * <br>\n *\n * @param htmlElement {HTMLElement} - Element in which video will be rendered.\n * @param [DOMWindow] {Window} - DOM window that is a parent of HTML element.\n *\n * @throw Invalid HTML Type - Thrown if HTML element is invalid.\n * @throw Element Requires ID - Thrown if HTML element doesn't have ID.\n */\nfunction VideoWindow(htmlElement, DOMWindow)\n{\n    var domWindow = DOMWindow ? DOMWindow : window;\n\n    if(!(htmlElement instanceof domWindow.HTMLElement))\n    {\n        throw Error(\"Invalid HTML Type\");\n    }\n\n    if(!htmlElement.id)\n    {\n        throw Error(\"Element Requires ID\");\n    }\n\n    var videoWindow = domWindow.document.createElement(\"object\");\n    videoWindow.type = 'application/x-cisco-cwc-videocall';\n    videoWindow.id   = 'videoWindow-' + htmlElement.id + cwic.Utilities.generateUniqueId();\n    videoWindow.style.width  = \"0%\";\n    videoWindow.style.height = \"0%\";\n\n    htmlElement.appendChild(videoWindow);\n    \n    this.element = videoWindow;\n\n    this.executeMethod = function(methodName, callID)\n    {\n        var clientID  = cwic.SystemController.getInstanceID();\n        var messageID = cwic.Utilities.generateUniqueId();\n        var url       = window.location.href;\n        var hostname  = window.location.hostname;\n        var name      = window.document.title;\n\n        var messageParameters = [messageID, clientID, url, hostname, name];\n\n        if(callID)\n        {\n            messageParameters.unshift(callID);\n        }\n\n        videoWindow[methodName].apply(this, messageParameters);\n    };\n\n    this.executeMethod('configure');\n}\n\nmodule.exports.VideoWindow = VideoWindow;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Window/VideoWindow.js\n// module id = 42\n// module chunks = 0","// Window Modules\nvar VideoWindowModule = require('./VideoWindow');\n\n// Telephony Modules\nvar TelephonyConversationModule = require('../Telephony/TelephonyConversation');\n\n\nvar cwic = {\n    VideoWindow : VideoWindowModule.VideoWindow,\n    TelephonyConversation : TelephonyConversationModule.TelephonyConversation\n};\n\n/**\n * @class ConversationWindow\n * @classdesc\n * In-browser video window in which [Telephony Conversation's]{@link TelephonyConversation} conversation video\n * (incoming video from remote participant) is rendered.\n *\n * @description\n * It is instantiated through [WindowController.createVideoWindow()]{@link WindowController.createVideoWindow}.\n * @since 11.7.0\n */\nfunction ConversationWindow(htmlElement, DOMWindow)\n{\n    var m_VideoWindow = new cwic.VideoWindow(htmlElement, DOMWindow);\n\n    /**\n     * @memberof ConversationWindow\n     * @method showForConversation\n     * @description\n     * Start rendering video for specified conversation.\n     *\n     * @param conversation {TelephonyConversation} - Telephony conversation for which video rendering will start.\n     * @since 11.7.0\n     */\n    this.showForConversation = function(conversation)\n    {\n        var methodName = 'addWindowToCall';\n\n        m_VideoWindow.element.style.width  = \"100%\";\n        m_VideoWindow.element.style.height = \"100%\";\n        m_VideoWindow.executeMethod(methodName, conversation.ID);\n\n        var methodName = 'startRemoteVideo';\n        \n        m_VideoWindow.executeMethod(methodName, conversation.ID);\n    };\n\n    /**\n     * @memberof ConversationWindow\n     * @method hideForConversation\n     * @description\n     * Stop rendering video for specified conversation.\n     *\n     * @param conversation {TelephonyConversation} - Telephony conversation for which video rendering will stop.\n     * @since 11.7.0\n     */\n    this.hideForConversation = function(conversation)\n    {\n        var methodName = 'removeWindowFromCall';\n\n        m_VideoWindow.element.style.width  = \"0%\";\n        m_VideoWindow.element.style.height = \"0%\";\n        m_VideoWindow.executeMethod(methodName, conversation.ID);\n    };\n}\n\nmodule.exports.ConversationWindow = ConversationWindow;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Window/ConversationWindow.js\n// module id = 43\n// module chunks = 0","// Window Modules\nvar VideoWindowModule = require('./VideoWindow');\n\nvar cwic = {\n    VideoWindow: VideoWindowModule.VideoWindow\n};\n\n/**\n * @class PreviewWindow\n * @classdesc\n * In-browser video window in which local camera feed is rendered.\n *\n * @description\n * It is instantiated through [WindowController.createVideoWindow()]{@link WindowController.createVideoWindow}.\n * @since 11.7.0\n */\nfunction PreviewWindow(htmlElement, DOMWindow)\n{\n    var m_VideoWindow = new cwic.VideoWindow(htmlElement, DOMWindow);\n\n    /**\n     * @memberof PreviewWindow\n     * @method show\n     * @description\n     * Show preview video window. Once shown, local camera feed will start being rendered.\n     *\n     * @since 11.7.0\n     */\n    this.show = function()\n    {\n        var methodName = 'addPreviewWindow';\n\n        m_VideoWindow.element.style.width  = \"100%\";\n        m_VideoWindow.element.style.height = \"100%\";\n        m_VideoWindow.executeMethod(methodName);\n    };\n\n    /**\n     * @memberof PreviewWindow\n     * @method hide\n     * @description\n     * Hide preview video window. Once hidden, local camera feed will stop being rendered.\n     *\n     * @since 11.7.0\n     */\n    this.hide = function()\n    {\n        var methodName = 'removePreviewWindow';\n\n        m_VideoWindow.element.style.width  = \"0%\";\n        m_VideoWindow.element.style.height = \"0%\";\n        m_VideoWindow.executeMethod(methodName);\n    };\n}\n\nmodule.exports.PreviewWindow = PreviewWindow;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Window/PreviewVideoWindow.js\n// module id = 44\n// module chunks = 0","// System Modules\r\nvar MessageReceiverModule = require('../System/MessageReceiver');\r\nvar MessageSenderModule   = require('../System/MessageSender');\r\n\r\n// Certificate Modules\r\nvar InvalidCertificateModule = require('./InvalidCertificate');\r\n\r\nvar cwic = {\r\n    MessageReceiver : MessageReceiverModule.MessageReceiver,\r\n    MessageSender   : MessageSenderModule.MessageSender,\r\n    InvalidCertificate : InvalidCertificateModule.InvalidCertificate\r\n};\r\n\r\n/**\r\n * @class CertificateController\r\n * @classdesc\r\n * Certificate controller is responsible for handling invalid certificates.\r\n *\r\n * @description This class cannot be instantiated.\r\n * @since 11.7.0\r\n */\r\nfunction CertificateController()\r\n{\r\n    var m_EventHandlers = {};\r\n\r\n    cwic.MessageReceiver.addMessageHandler('invalidcertificate', onInvalidCertificate)\r\n\r\n    function onInvalidCertificate(content)\r\n    {\r\n        var eventHandler = m_EventHandlers['onInvalidCertificate'];\r\n        if(eventHandler)\r\n        {\r\n            var invalidCertificate = new cwic.InvalidCertificate(content);\r\n\r\n            var reasons = [];\r\n            for(var index = 0; index<content.invalidReasons.length; index++)\r\n            {\r\n                reasons.push(content.invalidReasons[index].invalidReason);\r\n            }\r\n\r\n            eventHandler(invalidCertificate, reasons, content.allowUserToAccept);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @memberof CertificateController\r\n     * @method addEventHandler\r\n     * @description Add handler function for Certificate Controller's event.\r\n     *\r\n     * @param eventName {String} - Name of the event.\r\n     * @param handler {Function} - Function that will be called when event is fired.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.addEventHandler = function(eventName, eventHandler)\r\n    {\r\n        m_EventHandlers[eventName] = eventHandler;\r\n    };\r\n\r\n    /**\r\n     * @memberof CertificateController\r\n     * @method removeEventHandler\r\n     * @description Remove handler function for Certificate Controller's event.\r\n     *\r\n     * @param eventName {String} - Name of the event.\r\n     *\r\n     * @since 11.7.0\r\n     */\r\n    this.removeEventHandler = function(eventName)\r\n    {\r\n        delete m_EventHandlers[eventName];\r\n    };\r\n}\r\n\r\n/**\r\n * @memberof CertificateController\r\n * @method acceptInvalidCertificate\r\n * @description\r\n * Accepts invalid certificate. Invalid certificate can be obtained through \"onInvalidCertificate\" event.\r\n *\r\n * @param certificate {InvalidCertificate} - Invalid certificate to be accepted.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Object - Thrown if certificate is not instance of {@link InvalidCertificate}.\r\n *\r\n * @since 11.7.0\r\n */\r\nCertificateController.prototype.acceptInvalidCertificate = function (certificate, errorHandler)\r\n{\r\n    if(!(certificate instanceof cwic.InvalidCertificate))\r\n    {\r\n        throw Error(\"Invalid Object\");\r\n    }\r\n\r\n    var messageType = 'handleInvalidCertificate';\r\n    var messageData = {\r\n        certFingerprint: certificate.fingerprint,\r\n        accept : true\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\n/**\r\n * @memberof CertificateController\r\n * @method rejectInvalidCertificate\r\n * @description\r\n * Rejects invalid certificate. Invalid certificate can be obtained through \"onInvalidCertificate\" event.\r\n *\r\n * @param certificate {InvalidCertificate} - Invalid certificate to be accepted.\r\n * @param [errorHandler] {Function} - Called if error has occurred in add-on.\r\n *\r\n * @throw Invalid Object - Thrown if certificate is not instance of {@link InvalidCertificate}.\r\n *\r\n * @since 11.7.0\r\n */\r\nCertificateController.prototype.rejectInvalidCertificate = function (certificate, errorHandler)\r\n{\r\n    if(!(certificate instanceof cwic.InvalidCertificate))\r\n    {\r\n        throw Error(\"Invalid Type\");\r\n    }\r\n\r\n    var messageType = 'handleInvalidCertificate';\r\n    var messageData = {\r\n        certFingerprint: certificate.fingerprint,\r\n        accept : false\r\n    };\r\n\r\n    cwic.MessageSender.sendMessage(messageType, messageData, errorHandler);\r\n};\r\n\r\nmodule.exports.CertificateController = new CertificateController();\r\n\r\n\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Certificate/CertificateController.js\n// module id = 45\n// module chunks = 0","/**\r\n * @class InvalidCertificate\r\n *\r\n * Invalid Certificate\r\n */\r\nfunction InvalidCertificate(data)\r\n{\r\n    this.subjectCN   = data.certSubjectCN;\r\n    this.fingerprint = data.certFingerprint;\r\n    this.identifier  = data.identifierToDisplay;\r\n    this.referenceID = data.referenceId;\r\n}\r\n\r\n/**\r\n * @memberof InvalidCertificate\r\n * @member subjectCN\r\n * @description\r\n * Certificate Name\r\n *\r\n * @type {string}\r\n * @since 11.7.0\r\n */\r\nInvalidCertificate.prototype.subjectCN = \"\";\r\n\r\n/**\r\n * @memberof InvalidCertificate\r\n * @member fingerprint\r\n * @description\r\n * Certificate fingerprint\r\n *\r\n * @type {string}\r\n * @since 11.7.0\r\n */\r\nInvalidCertificate.prototype.fingerprint = \"\";\r\n\r\n/**\r\n * @memberof InvalidCertificate\r\n * @member identifier\r\n * @description\r\n * Identity that provides the certificate.\r\n *\r\n * @type {string}\r\n * @since 11.7.0\r\n */\r\nInvalidCertificate.prototype.identifier = \"\";\r\n\r\n/**\r\n * @memberof InvalidCertificate\r\n * @member referenceID\r\n * @description\r\n * Identity of the certificate provider matching the certificate owner.\r\n *\r\n * @type {string}\r\n * @since 11.7.0\r\n */\r\nInvalidCertificate.prototype.referenceID = \"\";\r\n\r\nmodule.exports.InvalidCertificate = InvalidCertificate;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/Certificate/InvalidCertificate.js\n// module id = 46\n// module chunks = 0"],"sourceRoot":""}